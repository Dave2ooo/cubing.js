import{p as t,B as e,k as n,r}from"./index-b72e50c0.js";import{readFileSync as i}from"fs";function s(t,e,n){const r={};for(const i in t.orbits){const s=t.orbits[i],o=e[i],l=n[i],a=new Array(s.numPieces),f=new Array(s.numPieces);for(let t=0;t<s.numPieces;t++)f[t]=(o.orientation[l.permutation[t]]+l.orientation[t])%s.orientations,a[t]=o.permutation[l.permutation[t]];r[i]={permutation:a,orientation:f}}return r}function o(t,e,n){if(n<0)return o(t,a(t,e),-n);if(0===n)return l(t);if(1===n)return e;const r=o(t,e,Math.floor(n/2)),i=s(t,r,r);return n%2==0?i:s(t,e,i)}function l(t){const e={};for(const n in t.orbits){const r=t.orbits[n],i=new Array(r.numPieces),s=new Array(r.numPieces);for(let t=0;t<r.numPieces;t++)i[t]=t,s[t]=0;const o={permutation:i,orientation:s};e[n]=o}return e}function a(t,e){const n={};for(const r in t.orbits){const i=t.orbits[r],s=e[r],o=new Array(i.numPieces),l=new Array(i.numPieces);for(let t=0;t<i.numPieces;t++){const e=s.permutation[t];o[e]=t,l[e]=(i.orientations-s.orientation[t]+i.orientations)%i.orientations}n[r]={permutation:o,orientation:l}}return n}function f(t,e){return e?f(e,t%e):t}function u(t,e){let n=1;for(const r in t.orbits){const i=t.orbits[r],s=e[r],o=new Array(i.numPieces);for(let t=0;t<i.numPieces;t++)if(!o[t]){let e=t,r=0,l=0;for(;o[e]=!0,r+=s.orientation[e],l+=1,e=s.permutation[e],e!==t;);0!==r&&(l=l*i.orientations/f(i.orientations,r)),n=n*l/f(n,l)}}return n}function c(t,e,n){for(const r in t.orbits){const i=t.orbits[r],s=e[r],o=n[r];for(let t=0;t<i.numPieces;t++){if(s.orientation[t]!==o.orientation[t])return!1;if(s.permutation[t]!==o.permutation[t])return!1}}return!0}function E(t,e,n){return c(t,s(t,t.startPieces,e),s(t,t.startPieces,n))}function m(n,r){const i=t(new e(r.outerLayer,r.innerLayer,r.family,1));let s=n.moves[i];if(s||(s=new KPuzzle(n).expandSlices(i,r)),!s)throw new Error(`Unknown move family: ${r.family}`);return o(n,s,r.amount)}class KPuzzle{constructor(t){this.definition=t,this.state=l(t)}serialize(){let t="";for(const e in this.definition.orbits)t+=e+"\n",t+=this.state[e].permutation.join(" ")+"\n",t+=this.state[e].orientation.join(" ")+"\n";return t=t.slice(0,t.length-1),t}applyBlockMove(t){this.state=s(this.definition,this.state,m(this.definition,t))}applyAlg(t){for(const e of n(t).nestedUnits)this.applyBlockMove(e)}applyMove(t){let e=this.definition.moves[t];if(e||(e=this.expandSlicesByName(t)),!e)throw new Error(`Unknown move: ${t}`);return this.state=s(this.definition,this.state,e),this}getMoveExpander(t){let e=this.definition.moveExpander;return t&&!e&&(e=new MoveExpander,this.definition.moveExpander=e),e}setFaceNames(t){const e=this.getMoveExpander(!0);e&&e.setFaceNames(t)}addGrip(t,e,n){const r=this.getMoveExpander(!0);return r?r.addGrip(t,e,n,this.definition):void 0}expandSlices(t,e){const n=this.getMoveExpander(!1);return n?n.expandSlices(t,e,this.definition):void 0}expandSlicesByName(t){const e=this.getMoveExpander(!1);return e?e.expandSlicesByName(t,this.definition):void 0}unswizzle(t){const e=this.getMoveExpander(!0);return e?e.unswizzle(t):t}}class MoveExpander{constructor(){this.gripStash={},this.moveStash={},this.regrip={}}setFaceNames(t){this.facenames=t}addGrip(t,e,n,r){const i=[],s=this.gripStash,o=r.moves;for(let s=1;s<=n;s++){let l=1===s&&o[t]||o[""+s+t];if(l||(l=s===n&&o[e]||o[""+(n+1-s)+e],l&&(l=a(r,l))),!l)throw new Error("Could not expand axis "+t+" to "+e+" because we are missing a move for slice "+s);i.push(l)}s[t]=i;const l=i.map(t=>a(r,t));l.reverse(),s[e]=l}expandSlicesByName(t,e){const n=this.moveStash[t];if(n)return n;try{const n=r(t);if(1!==n.nestedUnits.length)return;const i=n.nestedUnits[0];return this.expandSlices(t,i,e)}catch(t){return}}unswizzle(t){if(this.regrip[t])return this.regrip[t];if(!this.facenames)return t;t.length>1&&t[0]<="Z"&&("w"===t[t.length-1]||"v"===t[t.length-1])&&(t=t.substr(0,t.length-1));const e=this.splitByFaceNames(t,this.facenames);if(e)for(let n=0;n<e.length;n++){let r="";for(let t=0;t<e.length;t++)r+=e[(n+t)%e.length];if(this.gripStash[r])return this.regrip[t]=r,r}return t}expandSlices(t,e,n){const r=this.moveStash[t];if(r)return r;const i=this.gripStash,o=e.family;let l=o,a=!1,f=!1;/[a-z]/.test(o)&&(a=!0,l=o.toUpperCase()),o.length>1&&o.endsWith("w")&&(a=!0,l=o.substring(0,o.length-1)),o.length>1&&o.endsWith("v")&&(f=!0,l=o.substring(0,o.length-1));let u=i[l];if(!u&&this.facenames&&(l=this.unswizzle(l),u=i[l]),!u)return;let c=e.outerLayer,E=e.innerLayer;if(void 0===E){if(void 0!==c)return;c=1,E=a?2:1,f&&(E=i[l].length)}else void 0===c&&(c=a?1:E);if(E<c)return;if(c>i[l].length)return;let m=u[c-1];for(let t=c+1;t<=E;t++)m=s(n,m,u[t-1]);return this.moveStash[t]=m,m}splitByFaceNames(t,e){const n=[];let r=0;for(t=t.toUpperCase();r<t.length;){let i=!1;for(const s of e)if(t.substr(r).startsWith(s)){n.push(s),r+=s.length,i=!0;break}if(!i)return}return n}}const h={"2x2x2":{name:"2x2x2",orbits:{CORNERS:{numPieces:7,orientations:3}},startPieces:{CORNERS:{permutation:[0,1,2,3,4,5,6],orientation:[0,0,0,0,0,0,0]}},moves:{U:{CORNERS:{permutation:[3,0,1,2,4,5,6],orientation:[0,0,0,0,0,0,0]}},R:{CORNERS:{permutation:[0,2,5,3,1,4,6],orientation:[0,2,1,0,1,2,0]}},F:{CORNERS:{permutation:[0,1,3,6,4,2,5],orientation:[0,0,0,0,0,0,0]}}},svg:'<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.0//EN"\n       "http://www.w3.org/TR/2001/REC-SVG-20050904/DTD/svg11.dtd">\n<svg xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 490 370" preserveAspectRatio="xMidYMid meet">\n  <defs>\n  </defs>\n  <title>2x2x2</title>\n  <defs>\n    <g id="sticker">\n        <rect x="0" y="0" width="1" height="1" stroke="black" stroke-width="0.04px" />\n    </g>\n  </defs>\n  <g id="puzzle" transform="translate(5, 5) scale(60)">\n    <use id="CORNERS-l0-o0" xlink:href="#sticker" transform="translate(2, 0)" style="fill: white"/>\n    <use id="CORNERS-l0-o1" xlink:href="#sticker" transform="translate(7, 2)" style="fill: blue"/>\n    <use id="CORNERS-l0-o2" xlink:href="#sticker" transform="translate(0, 2)" style="fill: orange"/>\n\n    <use id="CORNERS-l1-o0" xlink:href="#sticker" transform="translate(3, 0)" style="fill: white"/>\n    <use id="CORNERS-l1-o1" xlink:href="#sticker" transform="translate(5, 2)" style="fill: red"/>\n    <use id="CORNERS-l1-o2" xlink:href="#sticker" transform="translate(6, 2)" style="fill: blue"/>\n\n    <use id="CORNERS-l2-o0" xlink:href="#sticker" transform="translate(3, 1)" style="fill: white"/>\n    <use id="CORNERS-l2-o1" xlink:href="#sticker" transform="translate(3, 2)" style="fill: green"/>\n    <use id="CORNERS-l2-o2" xlink:href="#sticker" transform="translate(4, 2)" style="fill: red"/>\n\n    <use id="CORNERS-l3-o0" xlink:href="#sticker" transform="translate(2, 1)" style="fill: white"/>\n    <use id="CORNERS-l3-o1" xlink:href="#sticker" transform="translate(1, 2)" style="fill: orange"/>\n    <use id="CORNERS-l3-o2" xlink:href="#sticker" transform="translate(2, 2)" style="fill: green"/>\n\n    <use id="CORNERS-l4-o0" xlink:href="#sticker" transform="translate(3, 5)" style="fill: yellow"/>\n    <use id="CORNERS-l4-o1" xlink:href="#sticker" transform="translate(6, 3)" style="fill: blue"/>\n    <use id="CORNERS-l4-o2" xlink:href="#sticker" transform="translate(5, 3)" style="fill: red"/>\n\n    <use id="CORNERS-l5-o0" xlink:href="#sticker" transform="translate(3, 4)" style="fill: yellow"/>\n    <use id="CORNERS-l5-o1" xlink:href="#sticker" transform="translate(4, 3)" style="fill: red"/>\n    <use id="CORNERS-l5-o2" xlink:href="#sticker" transform="translate(3, 3)" style="fill: green"/>\n\n    <use id="CORNERS-l6-o0" xlink:href="#sticker" transform="translate(2, 4)" style="fill: yellow"/>\n    <use id="CORNERS-l6-o1" xlink:href="#sticker" transform="translate(2, 3)" style="fill: green"/>\n    <use id="CORNERS-l6-o2" xlink:href="#sticker" transform="translate(1, 3)" style="fill: orange"/>\n\n    <use                    xlink:href="#sticker" transform="translate(2, 5)" style="fill: yellow"/>\n    <use                    xlink:href="#sticker" transform="translate(0, 3)" style="fill: orange"/>\n    <use                    xlink:href="#sticker" transform="translate(7, 3)" style="fill: blue"/>\n  </g>\n\n</svg>'},"3x3x3":{name:"3x3x3",orbits:{EDGE:{numPieces:12,orientations:2},CORNER:{numPieces:8,orientations:3},CENTER:{numPieces:6,orientations:4}},startPieces:{EDGE:{permutation:[0,1,2,3,4,5,6,7,8,9,10,11],orientation:[0,0,0,0,0,0,0,0,0,0,0,0]},CORNER:{permutation:[0,1,2,3,4,5,6,7],orientation:[0,0,0,0,0,0,0,0]},CENTER:{permutation:[0,1,2,3,4,5],orientation:[0,0,0,0,0,0]}},moves:{U:{EDGE:{permutation:[1,2,3,0,4,5,6,7,8,9,10,11],orientation:[0,0,0,0,0,0,0,0,0,0,0,0]},CORNER:{permutation:[1,2,3,0,4,5,6,7],orientation:[0,0,0,0,0,0,0,0]},CENTER:{permutation:[0,1,2,3,4,5],orientation:[1,0,0,0,0,0]}},y:{EDGE:{permutation:[1,2,3,0,5,6,7,4,10,8,11,9],orientation:[0,0,0,0,0,0,0,0,1,1,1,1]},CORNER:{permutation:[1,2,3,0,7,4,5,6],orientation:[0,0,0,0,0,0,0,0]},CENTER:{permutation:[0,2,3,4,1,5],orientation:[1,0,0,0,0,3]}},x:{EDGE:{permutation:[4,8,0,9,6,10,2,11,5,7,1,3],orientation:[1,0,1,0,1,0,1,0,0,0,0,0]},CORNER:{permutation:[4,0,3,5,7,6,2,1],orientation:[2,1,2,1,1,2,1,2]},CENTER:{permutation:[2,1,5,3,0,4],orientation:[0,3,0,1,2,2]}},L:{EDGE:{permutation:[0,1,2,11,4,5,6,9,8,3,10,7],orientation:[0,0,0,0,0,0,0,0,0,0,0,0]},CORNER:{permutation:[0,1,6,2,4,3,5,7],orientation:[0,0,2,1,0,2,1,0]},CENTER:{permutation:[0,1,2,3,4,5],orientation:[0,1,0,0,0,0]}},F:{EDGE:{permutation:[9,1,2,3,8,5,6,7,0,4,10,11],orientation:[1,0,0,0,1,0,0,0,1,1,0,0]},CORNER:{permutation:[3,1,2,5,0,4,6,7],orientation:[1,0,0,2,2,1,0,0]},CENTER:{permutation:[0,1,2,3,4,5],orientation:[0,0,1,0,0,0]}},R:{EDGE:{permutation:[0,8,2,3,4,10,6,7,5,9,1,11],orientation:[0,0,0,0,0,0,0,0,0,0,0,0]},CORNER:{permutation:[4,0,2,3,7,5,6,1],orientation:[2,1,0,0,1,0,0,2]},CENTER:{permutation:[0,1,2,3,4,5],orientation:[0,0,0,1,0,0]}},B:{EDGE:{permutation:[0,1,10,3,4,5,11,7,8,9,6,2],orientation:[0,0,1,0,0,0,1,0,0,0,1,1]},CORNER:{permutation:[0,7,1,3,4,5,2,6],orientation:[0,2,1,0,0,0,2,1]},CENTER:{permutation:[0,1,2,3,4,5],orientation:[0,0,0,0,1,0]}},D:{EDGE:{permutation:[0,1,2,3,7,4,5,6,8,9,10,11],orientation:[0,0,0,0,0,0,0,0,0,0,0,0]},CORNER:{permutation:[0,1,2,3,5,6,7,4],orientation:[0,0,0,0,0,0,0,0]},CENTER:{permutation:[0,1,2,3,4,5],orientation:[0,0,0,0,0,1]}},z:{EDGE:{permutation:[9,3,11,7,8,1,10,5,0,4,2,6],orientation:[1,1,1,1,1,1,1,1,1,1,1,1]},CORNER:{permutation:[3,2,6,5,0,4,7,1],orientation:[1,2,1,2,2,1,2,1]},CENTER:{permutation:[1,5,2,0,4,3],orientation:[1,1,1,1,3,1]}},M:{EDGE:{permutation:[2,1,6,3,0,5,4,7,8,9,10,11],orientation:[1,0,1,0,1,0,1,0,0,0,0,0]},CORNER:{permutation:[0,1,2,3,4,5,6,7],orientation:[0,0,0,0,0,0,0,0]},CENTER:{permutation:[4,1,0,3,5,2],orientation:[2,0,0,0,2,0]}},E:{EDGE:{permutation:[0,1,2,3,4,5,6,7,9,11,8,10],orientation:[0,0,0,0,0,0,0,0,1,1,1,1]},CORNER:{permutation:[0,1,2,3,4,5,6,7],orientation:[0,0,0,0,0,0,0,0]},CENTER:{permutation:[0,4,1,2,3,5],orientation:[0,0,0,0,0,0]}},S:{EDGE:{permutation:[0,3,2,7,4,1,6,5,8,9,10,11],orientation:[0,1,0,1,0,1,0,1,0,0,0,0]},CORNER:{permutation:[0,1,2,3,4,5,6,7],orientation:[0,0,0,0,0,0,0,0]},CENTER:{permutation:[1,5,2,0,4,3],orientation:[1,1,0,1,0,1]}},u:{EDGE:{permutation:[1,2,3,0,4,5,6,7,10,8,11,9],orientation:[0,0,0,0,0,0,0,0,1,1,1,1]},CORNER:{permutation:[1,2,3,0,4,5,6,7],orientation:[0,0,0,0,0,0,0,0]},CENTER:{permutation:[0,2,3,4,1,5],orientation:[1,0,0,0,0,0]}},l:{EDGE:{permutation:[2,1,6,11,0,5,4,9,8,3,10,7],orientation:[1,0,1,0,1,0,1,0,0,0,0,0]},CORNER:{permutation:[0,1,6,2,4,3,5,7],orientation:[0,0,2,1,0,2,1,0]},CENTER:{permutation:[4,1,0,3,5,2],orientation:[2,1,0,0,2,0]}},f:{EDGE:{permutation:[9,3,2,7,8,1,6,5,0,4,10,11],orientation:[1,1,0,1,1,1,0,1,1,1,0,0]},CORNER:{permutation:[3,1,2,5,0,4,6,7],orientation:[1,0,0,2,2,1,0,0]},CENTER:{permutation:[1,5,2,0,4,3],orientation:[1,1,1,1,0,1]}},r:{EDGE:{permutation:[4,8,0,3,6,10,2,7,5,9,1,11],orientation:[1,0,1,0,1,0,1,0,0,0,0,0]},CORNER:{permutation:[4,0,2,3,7,5,6,1],orientation:[2,1,0,0,1,0,0,2]},CENTER:{permutation:[2,1,5,3,0,4],orientation:[0,0,0,1,2,2]}},b:{EDGE:{permutation:[8,5,2,1,9,7,6,3,4,0,10,11],orientation:[1,1,0,1,1,1,0,1,1,1,0,0]},CORNER:{permutation:[4,1,2,0,5,3,6,7],orientation:[1,0,0,2,2,1,0,0]},CENTER:{permutation:[3,0,2,5,4,1],orientation:[3,3,3,3,0,3]}},d:{EDGE:{permutation:[0,1,2,3,7,4,5,6,9,11,8,10],orientation:[0,0,0,0,0,0,0,0,1,1,1,1]},CORNER:{permutation:[0,1,2,3,5,6,7,4],orientation:[0,0,0,0,0,0,0,0]},CENTER:{permutation:[0,4,1,2,3,5],orientation:[0,0,0,0,0,1]}}},svg:'<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.0//EN"\n       "http://www.w3.org/TR/2001/REC-SVG-20050904/DTD/svg11.dtd">\n<svg xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 490 370" preserveAspectRatio="xMidYMid meet">\n  <defs>\n  </defs>\n  <title>3x3x3</title>\n  <defs>\n    <g id="sticker">\n        <rect x="0" y="0" width="1" height="1" stroke="black" stroke-width="0.04px" />\n    </g>\n  </defs>\n\n\x3c!--        0 1 2 3 4 5 6 7 8 9 10 11  --\x3e\n\x3c!--        | | | | | | | | | | | |<-  --\x3e\n\x3c!--    0 -       . . .                --\x3e\n\x3c!--    1 -       . . .                --\x3e\n\x3c!--    2 -       . . .                --\x3e\n\x3c!--    3 - . . . . . . . . . . . .    --\x3e\n\x3c!--    4 - . . . . . . . . . . . .    --\x3e\n\x3c!--    5 - . . . . . . . . . . . .    --\x3e\n\x3c!--    6 -       . . .                --\x3e\n\x3c!--    7 -       . . .                --\x3e\n\x3c!--    8 -       . . .                --\x3e\n\n  <g id="puzzle" transform="translate(5, 5) scale(40)">\n    \x3c!-- CORNER --\x3e\n    <use id="CORNER-l0-o0" xlink:href="#sticker" transform="translate(5,  2)" style="fill: white"/>\n    <use id="CORNER-l0-o1" xlink:href="#sticker" transform="translate(6,  3)" style="fill: red"/>\n    <use id="CORNER-l0-o2" xlink:href="#sticker" transform="translate(5,  3)" style="fill: green"/>\n\n    <use id="CORNER-l1-o0" xlink:href="#sticker" transform="translate(5,  0)" style="fill: white"/>\n    <use id="CORNER-l1-o1" xlink:href="#sticker" transform="translate(9,  3)" style="fill: blue"/>\n    <use id="CORNER-l1-o2" xlink:href="#sticker" transform="translate(8,  3)" style="fill: red"/>\n\n    <use id="CORNER-l2-o0" xlink:href="#sticker" transform="translate(3,  0)" style="fill: white"/>\n    <use id="CORNER-l2-o1" xlink:href="#sticker" transform="translate(0,  3)" style="fill: orange"/>\n    <use id="CORNER-l2-o2" xlink:href="#sticker" transform="translate(11, 3)" style="fill: blue"/>\n\n    <use id="CORNER-l3-o0" xlink:href="#sticker" transform="translate(3,  2)" style="fill: white"/>\n    <use id="CORNER-l3-o1" xlink:href="#sticker" transform="translate(3,  3)" style="fill: green"/>\n    <use id="CORNER-l3-o2" xlink:href="#sticker" transform="translate(2,  3)" style="fill: orange"/>\n\n    <use id="CORNER-l4-o0" xlink:href="#sticker" transform="translate(5,  6)" style="fill: yellow"/>\n    <use id="CORNER-l4-o1" xlink:href="#sticker" transform="translate(5,  5)" style="fill: green"/>\n    <use id="CORNER-l4-o2" xlink:href="#sticker" transform="translate(6,  5)" style="fill: red"/>\n\n    <use id="CORNER-l5-o0" xlink:href="#sticker" transform="translate(3,  6)" style="fill: yellow"/>\n    <use id="CORNER-l5-o1" xlink:href="#sticker" transform="translate(2,  5)" style="fill: orange"/>\n    <use id="CORNER-l5-o2" xlink:href="#sticker" transform="translate(3,  5)" style="fill: green"/>\n\n    <use id="CORNER-l6-o0" xlink:href="#sticker" transform="translate(3,  8)" style="fill: yellow"/>\n    <use id="CORNER-l6-o1" xlink:href="#sticker" transform="translate(11, 5)" style="fill: blue"/>\n    <use id="CORNER-l6-o2" xlink:href="#sticker" transform="translate(0, 5)"  style="fill: orange"/>\n\n    <use id="CORNER-l7-o0" xlink:href="#sticker" transform="translate(5,  8)" style="fill: yellow"/>\n    <use id="CORNER-l7-o1" xlink:href="#sticker" transform="translate(8,  5)" style="fill: red"/>\n    <use id="CORNER-l7-o2" xlink:href="#sticker" transform="translate(9,  5)" style="fill: blue"/>\n\n    \x3c!-- EDGE --\x3e\n    <use id="EDGE-l0-o0"  xlink:href="#sticker" transform="translate(4,  2)" style="fill: white"/>\n    <use id="EDGE-l0-o1"  xlink:href="#sticker" transform="translate(4,  3)" style="fill: green"/>\n\n    <use id="EDGE-l1-o0"  xlink:href="#sticker" transform="translate(5,  1)" style="fill: white"/>\n    <use id="EDGE-l1-o1"  xlink:href="#sticker" transform="translate(7,  3)" style="fill: red"/>\n\n    <use id="EDGE-l2-o0"  xlink:href="#sticker" transform="translate(4,  0)" style="fill: white"/>\n    <use id="EDGE-l2-o1"  xlink:href="#sticker" transform="translate(10, 3)" style="fill: blue"/>\n\n    <use id="EDGE-l3-o0"  xlink:href="#sticker" transform="translate(3,  1)" style="fill: white"/>\n    <use id="EDGE-l3-o1"  xlink:href="#sticker" transform="translate(1,  3)" style="fill: orange"/>\n\n    <use id="EDGE-l4-o0"  xlink:href="#sticker" transform="translate(4,  6)" style="fill: yellow"/>\n    <use id="EDGE-l4-o1"  xlink:href="#sticker" transform="translate(4,  5)" style="fill: green"/>\n\n    <use id="EDGE-l5-o0" xlink:href="#sticker" transform="translate(5,  7)" style="fill: yellow"/>\n    <use id="EDGE-l5-o1" xlink:href="#sticker" transform="translate(7,  5)" style="fill: red"/>\n\n    <use id="EDGE-l6-o0" xlink:href="#sticker" transform="translate(4,  8)" style="fill: yellow"/>\n    <use id="EDGE-l6-o1" xlink:href="#sticker" transform="translate(10, 5)" style="fill: blue"/>\n\n    <use id="EDGE-l7-o0"  xlink:href="#sticker" transform="translate(3,  7)" style="fill: yellow"/>\n    <use id="EDGE-l7-o1"  xlink:href="#sticker" transform="translate(1,  5)" style="fill: orange"/>\n\n    <use id="EDGE-l8-o0"  xlink:href="#sticker" transform="translate(5,  4)" style="fill: green"/>\n    <use id="EDGE-l8-o1"  xlink:href="#sticker" transform="translate(6,  4)" style="fill: red"/>\n\n    <use id="EDGE-l9-o0"  xlink:href="#sticker" transform="translate(3,  4)" style="fill: green"/>\n    <use id="EDGE-l9-o1"  xlink:href="#sticker" transform="translate(2,  4)" style="fill: orange"/>\n\n    <use id="EDGE-l10-o0" xlink:href="#sticker" transform="translate(9,  4)" style="fill: blue"/>\n    <use id="EDGE-l10-o1" xlink:href="#sticker" transform="translate(8,  4)" style="fill: red"/>\n\n    <use id="EDGE-l11-o0" xlink:href="#sticker" transform="translate(11, 4)" style="fill: blue"/>\n    <use id="EDGE-l11-o1" xlink:href="#sticker" transform="translate(0,  4)" style="fill: orange"/>\n\n    \x3c!-- CENTER --\x3e\n    \x3c!-- TODO: Allow the same sticker to be reused for multiple orientations --\x3e\n    <use id="CENTER-l0-o0" xlink:href="#sticker" transform="translate(4,  1)" style="fill: white"/>\n    <use id="CENTER-l0-o1" xlink:href="#sticker" transform="translate(4,  1)" style="fill: white"/>\n    <use id="CENTER-l0-o2" xlink:href="#sticker" transform="translate(4,  1)" style="fill: white"/>\n    <use id="CENTER-l0-o3" xlink:href="#sticker" transform="translate(4,  1)" style="fill: white"/>\n\n    <use id="CENTER-l1-o0" xlink:href="#sticker" transform="translate(1,  4)" style="fill: orange"/>\n    <use id="CENTER-l1-o1" xlink:href="#sticker" transform="translate(1,  4)" style="fill: orange"/>\n    <use id="CENTER-l1-o2" xlink:href="#sticker" transform="translate(1,  4)" style="fill: orange"/>\n    <use id="CENTER-l1-o3" xlink:href="#sticker" transform="translate(1,  4)" style="fill: orange"/>\n\n    <use id="CENTER-l2-o0" xlink:href="#sticker" transform="translate(4,  4)" style="fill: green"/>\n    <use id="CENTER-l2-o1" xlink:href="#sticker" transform="translate(4,  4)" style="fill: green"/>\n    <use id="CENTER-l2-o2" xlink:href="#sticker" transform="translate(4,  4)" style="fill: green"/>\n    <use id="CENTER-l2-o3" xlink:href="#sticker" transform="translate(4,  4)" style="fill: green"/>\n\n    <use id="CENTER-l3-o0" xlink:href="#sticker" transform="translate(7,  4)" style="fill: red"/>\n    <use id="CENTER-l3-o1" xlink:href="#sticker" transform="translate(7,  4)" style="fill: red"/>\n    <use id="CENTER-l3-o2" xlink:href="#sticker" transform="translate(7,  4)" style="fill: red"/>\n    <use id="CENTER-l3-o3" xlink:href="#sticker" transform="translate(7,  4)" style="fill: red"/>\n\n    <use id="CENTER-l4-o0" xlink:href="#sticker" transform="translate(10, 4)" style="fill: blue"/>\n    <use id="CENTER-l4-o1" xlink:href="#sticker" transform="translate(10, 4)" style="fill: blue"/>\n    <use id="CENTER-l4-o2" xlink:href="#sticker" transform="translate(10, 4)" style="fill: blue"/>\n    <use id="CENTER-l4-o3" xlink:href="#sticker" transform="translate(10, 4)" style="fill: blue"/>\n\n    <use id="CENTER-l5-o0" xlink:href="#sticker" transform="translate(4,  7)" style="fill: yellow"/>\n    <use id="CENTER-l5-o1" xlink:href="#sticker" transform="translate(4,  7)" style="fill: yellow"/>\n    <use id="CENTER-l5-o2" xlink:href="#sticker" transform="translate(4,  7)" style="fill: yellow"/>\n    <use id="CENTER-l5-o3" xlink:href="#sticker" transform="translate(4,  7)" style="fill: yellow"/>\n  </g>\n\n</svg>\n'},pyram:{name:"pyram",orbits:{CENTERS:{numPieces:4,orientations:3},TIPS:{numPieces:4,orientations:3},EDGES:{numPieces:6,orientations:2}},startPieces:{CENTERS:{permutation:[0,1,2,3],orientation:[0,0,0,0]},TIPS:{permutation:[0,1,2,3],orientation:[0,0,0,0]},EDGES:{permutation:[0,1,2,3,4,5],orientation:[0,0,0,0,0,0]}},moves:{U:{CENTERS:{permutation:[0,1,2,3],orientation:[1,0,0,0]},TIPS:{permutation:[0,1,2,3],orientation:[1,0,0,0]},EDGES:{permutation:[1,2,0,3,4,5],orientation:[1,0,1,0,0,0]}},L:{CENTERS:{permutation:[0,1,2,3],orientation:[0,1,0,0]},TIPS:{permutation:[0,1,2,3],orientation:[0,1,0,0]},EDGES:{permutation:[5,1,2,0,4,3],orientation:[1,0,0,0,0,1]}},R:{CENTERS:{permutation:[0,1,2,3],orientation:[0,0,1,0]},TIPS:{permutation:[0,1,2,3],orientation:[0,0,1,0]},EDGES:{permutation:[0,3,2,4,1,5],orientation:[0,0,0,1,1,0]}},B:{CENTERS:{permutation:[0,1,2,3],orientation:[0,0,0,1]},TIPS:{permutation:[0,1,2,3],orientation:[0,0,0,1]},EDGES:{permutation:[0,1,4,3,5,2],orientation:[0,0,0,0,1,1]}},u:{CENTERS:{permutation:[0,1,2,3],orientation:[0,0,0,0]},TIPS:{permutation:[0,1,2,3],orientation:[1,0,0,0]},EDGES:{permutation:[0,1,2,3,4,5],orientation:[0,0,0,0,0,0]}},l:{CENTERS:{permutation:[0,1,2,3],orientation:[0,0,0,0]},TIPS:{permutation:[0,1,2,3],orientation:[0,1,0,0]},EDGES:{permutation:[0,1,2,3,4,5],orientation:[0,0,0,0,0,0]}},r:{CENTERS:{permutation:[0,1,2,3],orientation:[0,0,0,0]},TIPS:{permutation:[0,1,2,3],orientation:[0,0,1,0]},EDGES:{permutation:[0,1,2,3,4,5],orientation:[0,0,0,0,0,0]}},b:{CENTERS:{permutation:[0,1,2,3],orientation:[0,0,0,0]},TIPS:{permutation:[0,1,2,3],orientation:[0,0,0,1]},EDGES:{permutation:[0,1,2,3,4,5],orientation:[0,0,0,0,0,0]}}},svg:'<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.0//EN"\n       "http://www.w3.org/TR/2001/REC-SVG-20050904/DTD/svg11.dtd">\n<svg xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 490 420.69219392" preserveAspectRatio="xMidYMid meet">\n  <defs>\n  </defs>\n  <title>2x2x2</title>\n  <defs>\n    <g id="stickerA" transform="scale(1, 0.577350269)">\n      <path\n         d="m 0,1.732050808 1,-1.732050808 1,1.732050808 z"\n         stroke="black" stroke-width="0.04px" stroke-linecap="butt" stroke-linejoin="round"\n      />\n    </g>\n    <g id="stickerV" transform="scale(1, 0.577350269)">\n      <path\n         d="m 0,0 1,1.732050808 1,-1.732050808 z"\n         stroke="black" stroke-width="0.04px" stroke-linecap="butt" stroke-linejoin="round"\n      />\n    </g>\n  </defs>\n\n\x3c!--        0 1 2 3 4 5 6 7 8 9 10   --\x3e\n\x3c!--        | | | | | | | | | | |    --\x3e\n\x3c!--    0 - L L L L L F R R R R R    --\x3e\n\x3c!--    1 -   L L L F F F R R R      --\x3e\n\x3c!--    2 -     L F F F F F R        --\x3e\n\x3c!--    3 -       D D D D D          --\x3e\n\x3c!--    4 -         D D D            --\x3e\n\x3c!--    5 -           D              --\x3e\n\n  <g id="puzzle" transform="translate(5, 5) scale(40, 69.28203232)">\n    \x3c!-- CENTERS --\x3e\n    <use id="CENTERS-l0-o0" xlink:href="#stickerV" transform="translate(5, 1)" style="fill: yellow"/>\n    <use id="CENTERS-l0-o1" xlink:href="#stickerA" transform="translate(3, 0)" style="fill: blue"/>\n    <use id="CENTERS-l0-o2" xlink:href="#stickerA" transform="translate(7, 0)" style="fill: red"/>\n\n    <use id="CENTERS-l1-o0" xlink:href="#stickerV" transform="translate(4, 2)" style="fill: yellow"/>\n    <use id="CENTERS-l1-o1" xlink:href="#stickerA" transform="translate(4, 3)" style="fill: green"/>\n    <use id="CENTERS-l1-o2" xlink:href="#stickerA" transform="translate(2, 1)" style="fill: blue"/>\n\n    <use id="CENTERS-l2-o0" xlink:href="#stickerV" transform="translate(6, 2)" style="fill: yellow"/>\n    <use id="CENTERS-l2-o1" xlink:href="#stickerA" transform="translate(8, 1)" style="fill: red"/>\n    <use id="CENTERS-l2-o2" xlink:href="#stickerA" transform="translate(6, 3)" style="fill: green"/>\n\n    <use id="CENTERS-l3-o0" xlink:href="#stickerA" transform="translate(9, 0)" style="fill: red"/>\n    <use id="CENTERS-l3-o1" xlink:href="#stickerA" transform="translate(1, 0)" style="fill: blue"/>\n    <use id="CENTERS-l3-o2" xlink:href="#stickerA" transform="translate(5, 4)" style="fill: green"/>\n\n    \x3c!-- TIPS --\x3e\n    <use id="TIPS-l0-o0" xlink:href="#stickerA" transform="translate(5, 0)" style="fill: yellow"/>\n    <use id="TIPS-l0-o1" xlink:href="#stickerV" transform="translate(4, 0)" style="fill: blue"/>\n    <use id="TIPS-l0-o2" xlink:href="#stickerV" transform="translate(6, 0)" style="fill: red"/>\n\n    <use id="TIPS-l1-o0" xlink:href="#stickerA" transform="translate(3, 2)" style="fill: yellow"/>\n    <use id="TIPS-l1-o1" xlink:href="#stickerV" transform="translate(3, 3)" style="fill: green"/>\n    <use id="TIPS-l1-o2" xlink:href="#stickerV" transform="translate(2, 2)" style="fill: blue"/>\n\n    <use id="TIPS-l2-o0" xlink:href="#stickerV" transform="translate(8, 2)" style="fill: red"/>\n    <use id="TIPS-l2-o1" xlink:href="#stickerV" transform="translate(7, 3)" style="fill: green"/>\n    <use id="TIPS-l2-o2" xlink:href="#stickerA" transform="translate(7, 2)" style="fill: yellow"/>\n\n    <use id="TIPS-l3-o0" xlink:href="#stickerV" transform="translate(10,0)" style="fill: red"/>\n    <use id="TIPS-l3-o1" xlink:href="#stickerV" transform="translate(0, 0)" style="fill: blue"/>\n    <use id="TIPS-l3-o2" xlink:href="#stickerV" transform="translate(5, 5)" style="fill: green"/>\n\n    \x3c!-- EDGES --\x3e\n    <use id="EDGES-l0-o0" xlink:href="#stickerA" transform="translate(4, 1)" style="fill: yellow"/>\n    <use id="EDGES-l0-o1" xlink:href="#stickerV" transform="translate(3, 1)" style="fill: blue"/>\n\n    <use id="EDGES-l1-o0" xlink:href="#stickerA" transform="translate(6, 1)" style="fill: yellow"/>\n    <use id="EDGES-l1-o1" xlink:href="#stickerV" transform="translate(7, 1)" style="fill: red"/>\n\n    <use id="EDGES-l2-o0" xlink:href="#stickerV" transform="translate(8, 0)" style="fill: red"/>\n    <use id="EDGES-l2-o1" xlink:href="#stickerV" transform="translate(2, 0)" style="fill: blue"/>\n\n    <use id="EDGES-l3-o0" xlink:href="#stickerV" transform="translate(5, 3)" style="fill: green"/>\n    <use id="EDGES-l3-o1" xlink:href="#stickerA" transform="translate(5, 2)" style="fill: yellow"/>\n\n    <use id="EDGES-l4-o0" xlink:href="#stickerV" transform="translate(6, 4)" style="fill: green"/>\n    <use id="EDGES-l4-o1" xlink:href="#stickerV" transform="translate(9, 1)" style="fill: red"/>\n\n    <use id="EDGES-l5-o0" xlink:href="#stickerV" transform="translate(4, 4)" style="fill: green"/>\n    <use id="EDGES-l5-o1" xlink:href="#stickerV" transform="translate(1, 1)" style="fill: blue"/>\n  </g>\n\n</svg>'},sq1:{name:"sq1",orbits:{WEDGE:{numPieces:24,orientations:9},EQUATOR:{numPieces:2,orientations:6}},startPieces:{WEDGE:{permutation:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],orientation:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},EQUATOR:{permutation:[0,1],orientation:[0,0]}},moves:{U:{WEDGE:{permutation:[11,0,1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23],orientation:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},EQUATOR:{permutation:[0,1],orientation:[0,0]}},D:{WEDGE:{permutation:[0,1,2,3,4,5,6,7,8,9,10,11,23,12,13,14,15,16,17,18,19,20,21,22],orientation:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},EQUATOR:{permutation:[0,1],orientation:[0,0]}},SLICE:{WEDGE:{permutation:[0,1,2,3,4,5,12,13,14,15,16,17,6,7,8,9,10,11,18,19,20,21,22,23],orientation:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},EQUATOR:{permutation:[0,1],orientation:[0,3]}}},svg:i(__dirname+"/sq1.svg","utf-8")}};var d=function(){function t(e,n,r,i){this.message=e,this.expected=n,this.found=r,this.location=i,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,t)}return function(t,e){function n(){this.constructor=t}n.prototype=e.prototype,t.prototype=new n}(t,Error),t.buildMessage=function(t,e){var n={literal:function(t){return'"'+i(t.text)+'"'},class:function(t){var e,n="";for(e=0;e<t.parts.length;e++)n+=t.parts[e]instanceof Array?s(t.parts[e][0])+"-"+s(t.parts[e][1]):s(t.parts[e]);return"["+(t.inverted?"^":"")+n+"]"},any:function(t){return"any character"},end:function(t){return"end of input"},other:function(t){return t.description}};function r(t){return t.charCodeAt(0).toString(16).toUpperCase()}function i(t){return t.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(t){return"\\x0"+r(t)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(t){return"\\x"+r(t)}))}function s(t){return t.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(t){return"\\x0"+r(t)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(t){return"\\x"+r(t)}))}return"Expected "+function(t){var e,r,i,s=new Array(t.length);for(e=0;e<t.length;e++)s[e]=(i=t[e],n[i.type](i));if(s.sort(),s.length>0){for(e=1,r=1;e<s.length;e++)s[e-1]!==s[e]&&(s[r]=s[e],r++);s.length=r}switch(s.length){case 1:return s[0];case 2:return s[0]+" or "+s[1];default:return s.slice(0,-1).join(", ")+", or "+s[s.length-1]}}(t)+" but "+function(t){return t?'"'+i(t)+'"':"end of input"}(e)+" found."},{SyntaxError:t,parse:function(e,n){n=void 0!==n?n:{};var r,i,s,o,l={},a={start:I},f=I,u=function(t){return function(t){for(const e in t.moves){const n=t.moves[e];for(const e in t.orbits){const t=n[e],r=t.orientation,i=t.permutation,s=new Array(r.length);for(let t=0;t<i.length;t++)s[t]=r[i[t]];t.orientation=s}}return t}(t)},c=/^[A-Za-z0-9<>]/,E=A([["A","Z"],["a","z"],["0","9"],"<",">"],!1,!1),m=/^[A-Za-z]/,h=A([["A","Z"],["a","z"]],!1,!1),d=/^[A-Za-z0-9]/,k=A([["A","Z"],["a","z"],["0","9"]],!1,!1),p=/^[0-9]/,x=A([["0","9"]],!1,!1),R=G(" ",!1),y=G("Name",!1),g=G("Set",!1),C=G("\n",!1),N=G("Solved",!1),S=G("End",!1),w=G("Move",!1),v=0,T=[{line:1,column:1}],D=0,b=[];if("startRule"in n){if(!(n.startRule in a))throw new Error("Can't start parsing from rule \""+n.startRule+'".');f=a[n.startRule]}function G(t,e){return{type:"literal",text:t,ignoreCase:e}}function A(t,e,n){return{type:"class",parts:t,inverted:e,ignoreCase:n}}function O(t){var n,r=T[t];if(r)return r;for(n=t-1;!T[n];)n--;for(r={line:(r=T[n]).line,column:r.column};n<t;)10===e.charCodeAt(n)?(r.line++,r.column=1):r.column++,n++;return T[t]=r,r}function P(t,e){var n=O(t),r=O(e);return{start:{offset:t,line:n.line,column:n.column},end:{offset:e,line:r.line,column:r.column}}}function z(t){v<D||(v>D&&(D=v,b=[]),b.push(t))}function I(){var t;return v,(t=function(){var t,n,r,i,s;t=v,(n=function(){var t,n,r;t=v,"Name"===e.substr(v,4)?(n="Name",v+=4):(n=l,z(y));n!==l&&U()!==l&&(r=V())!==l?t=n=r:(v=t,t=l);return t}())!==l&&$()!==l&&(r=function t(){var e,n,r;e=v,(n=L())!==l&&B()!==l&&(r=t())!==l?((s=r)[(i=n)[0]]=i[1],e=n=s):(v=e,e=l);var i,s;e===l&&(e=v,(n=L())!==l&&(n=function(t){const e={};return e[t[0]]=t[1],e}(n)),e=n);return e}())!==l&&$()!==l&&(i=function(){var t,n,r,i;t=v,"Solved"===e.substr(v,6)?(n="Solved",v+=6):(n=l,z(N));n!==l&&B()!==l&&(r=Z())!==l&&B()!==l?("End"===e.substr(v,3)?(i="End",v+=3):(i=l,z(S)),i!==l?t=n=r:(v=t,t=l)):(v=t,t=l);return t}())!==l&&$()!==l&&(s=function t(){var e,n,r;e=v,(n=K())!==l&&$()!==l&&(r=t())!==l?((s=r)[(i=n)[0]]=i[1],e=n=s):(v=e,e=l);var i,s;e===l&&(e=v,(n=K())!==l&&(n=function(t){const e={};return e[t[0]]=t[1],e}(n)),e=n);return e}())!==l&&function(){var t,n;t=[],10===e.charCodeAt(v)?(n="\n",v++):(n=l,z(C));for(;n!==l;)t.push(n),10===e.charCodeAt(v)?(n="\n",v++):(n=l,z(C));return t}()!==l?t=n={name:n,orbits:r,moves:s,startPieces:i}:(v=t,t=l);return t}())!==l&&(t=u(t)),t}function V(){var t,n;if(v,t=[],c.test(e.charAt(v))?(n=e.charAt(v),v++):(n=l,z(E)),n!==l)for(;n!==l;)t.push(n),c.test(e.charAt(v))?(n=e.charAt(v),v++):(n=l,z(E));else t=l;return t!==l&&(t=t.join("")),t}function M(){var t,n,r,i;if(t=v,m.test(e.charAt(v))?(n=e.charAt(v),v++):(n=l,z(h)),n!==l){for(r=[],d.test(e.charAt(v))?(i=e.charAt(v),v++):(i=l,z(k));i!==l;)r.push(i),d.test(e.charAt(v))?(i=e.charAt(v),v++):(i=l,z(k));r!==l?t=n=[n].concat(r).join(""):(v=t,t=l)}else v=t,t=l;return t}function F(){var t,n;if(v,t=[],p.test(e.charAt(v))?(n=e.charAt(v),v++):(n=l,z(x)),n!==l)for(;n!==l;)t.push(n),p.test(e.charAt(v))?(n=e.charAt(v),v++):(n=l,z(x));else t=l;return t!==l&&(t=parseInt(t.join(""),10)),t}function U(){var t;return 32===e.charCodeAt(v)?(t=" ",v++):(t=l,z(R)),t}function L(){var t,n,r,i,s;return t=v,"Set"===e.substr(v,3)?(n="Set",v+=3):(n=l,z(g)),n!==l&&U()!==l&&(r=M())!==l&&U()!==l&&(i=F())!==l&&U()!==l&&(s=F())!==l?t=n=[r,{numPieces:i,orientations:s}]:(v=t,t=l),t}function B(){var t;return 10===e.charCodeAt(v)?(t="\n",v++):(t=l,z(C)),t}function $(){var t,n;if(t=[],10===e.charCodeAt(v)?(n="\n",v++):(n=l,z(C)),n!==l)for(;n!==l;)t.push(n),10===e.charCodeAt(v)?(n="\n",v++):(n=l,z(C));else t=l;return t}function W(){var t,e,n;return t=v,(e=F())!==l&&U()!==l&&(n=W())!==l?t=e=[e].concat(n):(v=t,t=l),t===l&&(t=v,(e=F())!==l&&(e=function(t){return[t]}(e)),t=e),t}function j(){var t;return v,(t=W())!==l&&(t=t.map(t=>t-1)),t}function q(){var t,e,n,r;return t=v,(e=M())!==l&&B()!==l&&(n=j())!==l&&B()!==l&&(r=W())!==l?t=e=[e,{permutation:n,orientation:r}]:(v=t,t=l),t===l&&(t=v,(e=M())!==l&&B()!==l&&(n=j())!==l?t=e=function(t,e){return[t,{permutation:e,orientation:new Array(e.length).fill(0)}]}(e,n):(v=t,t=l)),t}function Z(){var t,e,n,r,i;return t=v,(e=q())!==l&&B()!==l&&(n=Z())!==l?((i=n)[(r=e)[0]]=r[1],t=e=i):(v=t,t=l),t===l&&(t=v,(e=q())!==l&&(e=function(t){const e={};return e[t[0]]=t[1],e}(e)),t=e),t}function K(){var t,n,r,i,s;return t=v,"Move"===e.substr(v,4)?(n="Move",v+=4):(n=l,z(w)),n!==l&&U()!==l&&(r=V())!==l&&B()!==l&&(i=Z())!==l&&B()!==l?("End"===e.substr(v,3)?(s="End",v+=3):(s=l,z(S)),s!==l?t=n=[r,i]:(v=t,t=l)):(v=t,t=l),t}if((r=f())!==l&&v===e.length)return r;throw r!==l&&v<e.length&&z({type:"end"}),i=b,s=D<e.length?e.charAt(D):null,o=D<e.length?P(D,D+1):P(D,D),new t(t.buildMessage(i,s),i,s,o)}}}();const{parse:k}=d,p="http://www.w3.org/2000/svg";let x=0;class SVG{constructor(t){if(this.kPuzzleDefinition=t,this.originalColors={},this.gradients={},!t.svg)throw new Error(`No SVG definition for puzzle type: ${t.name}`);this.svgID=(x+=1,"svg"+x.toString()),this.element=document.createElement("div"),this.element.classList.add("svg-wrapper"),this.element.innerHTML=t.svg;const e=this.element.querySelector("svg");if(!e)throw new Error("Could not get SVG element");if(p!==e.namespaceURI)throw new Error("Unexpected XML namespace");this.gradientDefs=document.createElementNS(p,"defs"),e.insertBefore(this.gradientDefs,e.firstChild);for(const e in t.orbits){const n=t.orbits[e];for(let t=0;t<n.numPieces;t++)for(let r=0;r<n.orientations;r++){const n=this.elementID(e,t,r),i=this.elementByID(n),s=i.style.fill;this.originalColors[n]=s,this.gradients[n]=this.newGradient(n,s),this.gradientDefs.appendChild(this.gradients[n]),i.setAttribute("style",`fill: url(#grad-${this.svgID}-${n})`)}}}draw(t,e,n,r){for(const i in t.orbits){const s=t.orbits[i],o=e[i],l=n?n[i]:null;for(let t=0;t<s.numPieces;t++)for(let e=0;e<s.orientations;e++){const n=this.elementID(i,t,e),a=this.elementID(i,o.permutation[t],(s.orientations-o.orientation[t]+e)%s.orientations);let f=!1;if(l){const o=this.elementID(i,l.permutation[t],(s.orientations-l.orientation[t]+e)%s.orientations);a===o&&(f=!0);const u=100*(1-(r=r||0)*r*(2-r*r));this.gradients[n].children[0].setAttribute("stop-color",this.originalColors[a]),this.gradients[n].children[1].setAttribute("stop-color",this.originalColors[a]),this.gradients[n].children[1].setAttribute("offset",`${Math.max(u-5,0)}%`),this.gradients[n].children[2].setAttribute("offset",`${Math.max(u-5,0)}%`),this.gradients[n].children[3].setAttribute("offset",`${u}%`),this.gradients[n].children[4].setAttribute("offset",`${u}%`),this.gradients[n].children[4].setAttribute("stop-color",this.originalColors[o]),this.gradients[n].children[5].setAttribute("stop-color",this.originalColors[o])}else f=!0;f&&(this.gradients[n].children[0].setAttribute("stop-color",this.originalColors[a]),this.gradients[n].children[1].setAttribute("stop-color",this.originalColors[a]),this.gradients[n].children[1].setAttribute("offset","100%"),this.gradients[n].children[2].setAttribute("offset","100%"),this.gradients[n].children[3].setAttribute("offset","100%"),this.gradients[n].children[4].setAttribute("offset","100%"))}}}newGradient(t,e){const n=document.createElementNS(p,"radialGradient");n.setAttribute("id",`grad-${this.svgID}-${t}`),n.setAttribute("r","70.7107%");const r=[{offset:0,color:e},{offset:0,color:e},{offset:0,color:"black"},{offset:0,color:"black"},{offset:0,color:e},{offset:100,color:e}];for(const t of r){const e=document.createElementNS(p,"stop");e.setAttribute("offset",`${t.offset}%`),e.setAttribute("stop-color",t.color),e.setAttribute("stop-opacity","1"),n.appendChild(e)}return n}elementID(t,e,n){return t+"-l"+e+"-o"+n}elementByID(t){return this.element.querySelector("#"+t)}}var R=Object.freeze({__proto__:null,Combine:s,Multiply:o,IdentityTransformation:l,Invert:a,EquivalentTransformations:c,KPuzzle:KPuzzle,EquivalentStates:E,stateForBlockMove:m,Order:u,Puzzles:h,parse:k,SVG:SVG});export{s as C,c as E,l as I,KPuzzle as K,o as M,u as O,h as P,SVG as S,a,E as b,R as i,k as p,m as s};
//# sourceMappingURL=index-9c3a07f4.js.map
