{"version":3,"file":"cubing.no-twisty.umd.js","sources":["../../src/alg/debug.ts","../../src/alg/algorithm/alg-part.ts","../../src/alg/algorithm/block-move.ts","../../src/alg/operation.ts","../../src/alg/traversal.ts","../../src/alg/example.ts","../../src/alg/json.ts","../../src/alg/validation.ts","../../src/alg/parser/parser.js","../../src/alg/parser/index.ts","../../src/alg/keyboard.ts","../../src/alg/url.ts","../../src/kpuzzle/kpuzzle.ts","../../src/kpuzzle/definitions/svg/index.ts","../../src/kpuzzle/puzzle_definitions.ts","../../src/kpuzzle/parser/parser.js","../../src/kpuzzle/svg.ts","../../src/bluetooth/transformer.ts","../../src/bluetooth/bluetooth-puzzle.ts","../../src/bluetooth/debug.ts","../../src/bluetooth/unsafe-raw-aes.ts","../../src/bluetooth/gan.ts","../../src/bluetooth/giiker.ts","../../src/bluetooth/gocube.ts","../../src/bluetooth/keyboard.ts","../../src/bluetooth/connect.ts"],"sourcesContent":["type ReportingLevel = \"none\" | \"warn\" | \"error\";\nlet currentReportingLevel = \"warn\";\n\nconst MAX_NUMBER_OF_TIMES_TO_WARN = 10;\nlet numWarned = 0;\n\n// TODO: Avoid creating the string message if it won't be used (e.g. by taking a function?).\nexport function reportTypeMismatch(msg: string): void {\n  switch (currentReportingLevel) {\n    case \"error\":\n      throw new Error(msg);\n    case \"warn\":\n      numWarned++;\n      if (numWarned < MAX_NUMBER_OF_TIMES_TO_WARN) {\n        if (numWarned + 1 === MAX_NUMBER_OF_TIMES_TO_WARN) {\n          console.warn(msg);\n        }\n      }\n      return;\n  }\n}\n\nexport function setAlgPartTypeMismatchReportingLevel(level: ReportingLevel): void {\n  currentReportingLevel = level;\n}\n","import { reportTypeMismatch } from \"../debug\";\n\nexport type AlgPartType = string;\n\nexport abstract class AlgPart {\n  public abstract type: AlgPartType;\n}\n\n// type Constructor<T> = Function & { prototype: T }\nexport function matchesAlgType<T extends AlgPart>(a: any, t: AlgPartType): boolean {\n  return a.type === t;\n}\n\nexport function assertMatchesType<T extends AlgPart>(a: any, t: AlgPartType): T {\n  if (!matchesAlgType(a, t)) {\n    reportTypeMismatch(`Expected \"type\": \"${t}\", saw \"type\": \\\"${a.type}\\\".`);\n  }\n  return a;\n}\n\n// Assumes that every `AlgPart` is a `Unit` or a `Sequence`.\nexport function isUnit(a: AlgPart): boolean {\n  if (!(\"type\" in a)) {\n    return false;\n  }\n  return !matchesAlgType(a, \"sequence\");\n}\n\nexport function assertIsUnit(a: AlgPart): Unit {\n  if (!(\"type\" in a)) {\n    reportTypeMismatch(`Expected \"unit\", saw a value that was not an AlgPart.`);\n  }\n  if (matchesAlgType(a, \"sequence\")) {\n    reportTypeMismatch(`Expected unit, saw \"sequence\".`);\n  }\n  return a;\n}\n\nexport abstract class Unit extends AlgPart { }\n\nexport abstract class Move extends Unit { }\nexport abstract class Annotation extends Unit { }\nexport abstract class Container extends Unit { }\n\n// TODO: Reintroduce an Algorithm class, and allow a mutable sequence too?\nexport class Sequence extends AlgPart {\n  public type: string = \"sequence\";\n  constructor(public nestedUnits: Unit[]) {\n    super();\n    for (const n of nestedUnits) {\n      assertIsUnit(n);\n    }\n    Object.freeze(this.nestedUnits);\n    Object.freeze(this);\n  }\n}\n\nexport interface WithAmount {\n  // TODO: Allow `amount` to be `undefined`, to distinguish between R and R1?\n  amount: number;\n}\nexport class Group extends Container implements WithAmount {\n  public type: string = \"group\";\n  constructor(public nestedSequence: Sequence, public amount: number = 1) {\n    super();\n    Object.freeze(this);\n  }\n}\nexport class Commutator extends Container implements WithAmount {\n  public type: string = \"commutator\";\n  constructor(public A: Sequence, public B: Sequence, public amount: number = 1) {\n    super();\n    Object.freeze(this);\n  }\n}\nexport class Conjugate extends Container implements WithAmount {\n  public type: string = \"conjugate\";\n  constructor(public A: Sequence, public B: Sequence, public amount: number = 1) {\n    super();\n    Object.freeze(this);\n  }\n}\nexport class Pause extends Move {\n  public type: string = \"pause\";\n  constructor() {\n    super();\n    Object.freeze(this);\n  }\n}\nexport class NewLine extends Annotation {\n  public type: string = \"newLine\";\n  constructor() {\n    super();\n    Object.freeze(this);\n  }\n}\n\n// TODO: must be followed by a newline, unless at the end of an alg?\nexport class CommentShort extends Annotation {\n  public type: string = \"commentShort\";\n  constructor(public comment: string) {\n    super();\n    Object.freeze(this);\n  }\n}\nexport class CommentLong extends Annotation {\n  public type: string = \"commentLong\";\n  constructor(public comment: string) {\n    super();\n    Object.freeze(this);\n  }\n}\n\n// TODO\n// export class TimeStamp extends AlgPart implements AlgPart\n","import { Move } from \"./alg-part\";\n\nexport type MoveFamily = string; // TODO: Convert to an enum with string mappings.\n\n// TODO: Rename to `LetterMove`?\nexport class BlockMove extends Move {\n  public type: string = \"blockMove\";\n\n  // If `outerLayer` is set, `innerLayer` must also be set.\n  public outerLayer?: number;\n  public innerLayer?: number;\n  constructor(outerLayer: number | undefined, innerLayer: number | undefined, public family: MoveFamily, public amount: number = 1) {\n    super();\n    if (innerLayer) {\n      this.innerLayer = innerLayer;\n      if (outerLayer) {\n        this.outerLayer = outerLayer;\n      }\n    }\n    if (outerLayer && !innerLayer) {\n      throw new Error(\"Attempted to contruct block move with outer layer but no inner layer\");\n    }\n    Object.freeze(this);\n  }\n}\n\nexport function BareBlockMove(family: MoveFamily, amount?: number): BlockMove {\n  return new BlockMove(undefined, undefined, family, amount);\n}\n\nexport function LayerBlockMove(innerLayer: number, family: MoveFamily, amount?: number): BlockMove {\n  return new BlockMove(undefined, innerLayer, family, amount);\n}\n\nexport function RangeBlockMove(outerLayer: number, innerLayer: number, family: MoveFamily, amount?: number): BlockMove {\n  return new BlockMove(outerLayer, innerLayer, family, amount);\n}\n","import { BlockMove, Sequence } from \"./algorithm\";\n\nfunction canCoalesce(m1: BlockMove, m2: BlockMove): boolean {\n  return m1.family === m2.family && m1.innerLayer === m2.innerLayer && m1.outerLayer === m2.outerLayer;\n}\n\ninterface BlockMoveModifications {\n  outerLayer?: number;\n  innerLayer?: number;\n  family?: string;\n  amount?: number;\n}\n\nexport function modifiedBlockMove(original: BlockMove, modifications: BlockMoveModifications): BlockMove {\n  // TODO: use the nullish coalescing operator once it becomes available to us.\n  return new BlockMove(\n    modifications.outerLayer ?? original.outerLayer,\n    modifications.innerLayer ?? original.innerLayer,\n    modifications.family ?? original.family,\n    modifications.amount ?? original.amount,\n  );\n}\n\nexport function experimentalAppendBlockMove(s: Sequence, newMove: BlockMove, coalesceLastMove: boolean = false, mod: number = 0): Sequence {\n  const oldNestedUnits = s.nestedUnits;\n  const oldLastMove = oldNestedUnits[oldNestedUnits.length - 1] as (BlockMove | null);\n  if (coalesceLastMove && oldLastMove && canCoalesce(oldLastMove, newMove)) {\n    const newNestedUnits = s.nestedUnits.slice(0, oldNestedUnits.length - 1);\n    let newAmount = oldLastMove.amount + newMove.amount;\n    if (mod > 1) {\n      newAmount = (newAmount % mod + mod) % mod ;\n      if (newAmount * 2 > mod) {\n        newAmount -= mod ;\n      }\n    }\n    if (newAmount !== 0) {\n      newNestedUnits.push(modifiedBlockMove(oldLastMove, { amount: newAmount }));\n    }\n    return new Sequence(newNestedUnits);\n  } else {\n    return new Sequence([...oldNestedUnits, newMove]);\n  }\n}\n\n// This purposely takes sequences as individual arguments, instead of a lsit of sequences, because:\n//\n// 1. This matches Javascript's built-in `Array.concat()` functionality.\n// 2. It encourages avoiding lists of sequences (which might lead to coding mistakes).\n//\n// TODO: Now useful is it to coalesce at alg boundaries (rather than coalescing the whole result)?\n// Should that be a separate function, or should we change this to accept coalescing option arg like `experimentalAppendBlockMove()`?\nexport function experimentalConcatAlgs(...args: Sequence[]): Sequence {\n  return new Sequence(Array.prototype.concat.apply([], [...args].map((s) => s.nestedUnits)));\n}\n","import { assertIsUnit, assertMatchesType, isUnit, matchesAlgType } from \"./algorithm/alg-part\";\n\nimport {\n  AlgPart,\n  BlockMove,\n  CommentLong,\n  CommentShort,\n  Commutator,\n  Conjugate,\n  Group,\n  NewLine,\n  Pause,\n  Sequence,\n  Unit,\n  WithAmount,\n} from \"./algorithm\";\n\nfunction dispatch<DataDown, DataUp>(t: TraversalDownUp<DataDown, DataUp>, algPart: AlgPart, dataDown: DataDown): DataUp {\n  switch (algPart.type) {\n    case \"sequence\":\n      assertMatchesType(algPart, \"sequence\");\n      return t.traverseSequence(algPart as Sequence, dataDown);\n    case \"group\":\n      assertMatchesType(algPart, \"group\");\n      return t.traverseGroup(algPart as Group, dataDown);\n    case \"blockMove\":\n      assertMatchesType(algPart, \"blockMove\");\n      return t.traverseBlockMove(algPart as BlockMove, dataDown);\n    case \"commutator\":\n      assertMatchesType(algPart, \"commutator\");\n      return t.traverseCommutator(algPart as Commutator, dataDown);\n    case \"conjugate\":\n      assertMatchesType(algPart, \"conjugate\");\n      return t.traverseConjugate(algPart as Conjugate, dataDown);\n    case \"pause\":\n      assertMatchesType(algPart, \"pause\");\n      return t.traversePause(algPart as Pause, dataDown);\n    case \"newLine\":\n      assertMatchesType(algPart, \"newLine\");\n      return t.traverseNewLine(algPart as NewLine, dataDown);\n    case \"commentShort\":\n      assertMatchesType(algPart, \"commentShort\");\n      return t.traverseCommentShort(algPart as CommentShort, dataDown);\n    case \"commentLong\":\n      assertMatchesType(algPart, \"commentLong\");\n      return t.traverseCommentLong(algPart as CommentLong, dataDown);\n    default:\n      throw new Error(`Unknown AlgPart type: ${algPart.type}`);\n  }\n}\n\nexport abstract class TraversalDownUp<DataDown, DataUp> {\n  // Immediate subclasses should overwrite this.\n  public traverse(algPart: AlgPart, dataDown: DataDown): DataUp {\n    return dispatch(this, algPart, dataDown);\n  }\n\n  public traverseIntoUnit(algPart: AlgPart, dataDown: DataDown): Unit {\n    return assertIsUnit(this.traverse(algPart, dataDown) as any);\n  }\n\n  public abstract traverseSequence(sequence: Sequence, dataDown: DataDown): DataUp;\n  public abstract traverseGroup(group: Group, dataDown: DataDown): DataUp;\n  public abstract traverseBlockMove(blockMove: BlockMove, dataDown: DataDown): DataUp;\n  public abstract traverseCommutator(commutator: Commutator, dataDown: DataDown): DataUp;\n  public abstract traverseConjugate(conjugate: Conjugate, dataDown: DataDown): DataUp;\n  public abstract traversePause(pause: Pause, dataDown: DataDown): DataUp;\n  public abstract traverseNewLine(newLine: NewLine, dataDown: DataDown): DataUp;\n  public abstract traverseCommentShort(commentShort: CommentShort, dataDown: DataDown): DataUp;\n  public abstract traverseCommentLong(commentLong: CommentLong, dataDown: DataDown): DataUp;\n}\n\nexport abstract class TraversalUp<DataUp> extends TraversalDownUp<undefined, DataUp> {\n  public traverse(algPart: AlgPart): DataUp {\n    return dispatch<undefined, DataUp>(this, algPart, undefined);\n  }\n\n  public traverseIntoUnit(algPart: AlgPart): Unit {\n    return assertIsUnit(this.traverse(algPart) as any);\n  }\n\n  public abstract traverseSequence(sequence: Sequence): DataUp;\n  public abstract traverseGroup(group: Group): DataUp;\n  public abstract traverseBlockMove(blockMove: BlockMove): DataUp;\n  public abstract traverseCommutator(commutator: Commutator): DataUp;\n  public abstract traverseConjugate(conjugate: Conjugate): DataUp;\n  public abstract traversePause(pause: Pause): DataUp;\n  public abstract traverseNewLine(newLine: NewLine): DataUp;\n  public abstract traverseCommentShort(commentShort: CommentShort): DataUp;\n  public abstract traverseCommentLong(commentLong: CommentLong): DataUp;\n}\n\n// TODO: Test that inverses are bijections.\nexport class Invert extends TraversalUp<AlgPart> {\n  public traverseSequence(sequence: Sequence): Sequence {\n    // TODO: Handle newLines and comments correctly\n    return new Sequence(sequence.nestedUnits.slice().reverse().map((a) => this.traverseIntoUnit(a)));\n  }\n  public traverseGroup(group: Group): AlgPart {\n    return new Group(this.traverseSequence(group.nestedSequence), group.amount);\n  }\n  public traverseBlockMove(blockMove: BlockMove): AlgPart {\n    return new BlockMove(blockMove.outerLayer, blockMove.innerLayer, blockMove.family, -blockMove.amount);\n  }\n  public traverseCommutator(commutator: Commutator): AlgPart {\n    return new Commutator(commutator.B, commutator.A, commutator.amount);\n  }\n  public traverseConjugate(conjugate: Conjugate): AlgPart {\n    return new Conjugate(conjugate.A, this.traverseSequence(conjugate.B), conjugate.amount);\n  }\n  public traversePause(pause: Pause): AlgPart { return pause; }\n  public traverseNewLine(newLine: NewLine): AlgPart { return newLine; }\n  public traverseCommentShort(commentShort: CommentShort): AlgPart { return commentShort; }\n  public traverseCommentLong(commentLong: CommentLong): AlgPart { return commentLong; }\n}\n\nexport class Expand extends TraversalUp<AlgPart> {\n\n  public traverseSequence(sequence: Sequence): Sequence {\n    return new Sequence(this.flattenSequenceOneLevel(sequence.nestedUnits.map((a) => this.traverse(a))));\n  }\n  public traverseGroup(group: Group): AlgPart {\n    // TODO: Pass raw AlgPart[] to sequence.\n    return this.repeat(this.flattenSequenceOneLevel([this.traverse(group.nestedSequence)]), group);\n  }\n  public traverseBlockMove(blockMove: BlockMove): AlgPart {\n    return blockMove;\n  }\n  public traverseCommutator(commutator: Commutator): AlgPart {\n    const expandedA = this.traverseSequence(commutator.A);\n    const expandedB = this.traverseSequence(commutator.B);\n    let once: AlgPart[] = [];\n    once = once.concat(\n      expandedA,\n      expandedB,\n      invert(expandedA),\n      invert(expandedB),\n    );\n    return this.repeat(this.flattenSequenceOneLevel(once), commutator);\n  }\n  public traverseConjugate(conjugate: Conjugate): AlgPart {\n    const expandedA = this.traverseSequence(conjugate.A);\n    const expandedB = this.traverseSequence(conjugate.B);\n    let once: AlgPart[] = [];\n    once = once.concat(\n      expandedA,\n      expandedB,\n      invert(expandedA),\n    );\n    return this.repeat(this.flattenSequenceOneLevel(once), conjugate);\n  }\n  public traversePause(pause: Pause): AlgPart { return pause; }\n  public traverseNewLine(newLine: NewLine): AlgPart { return newLine; }\n  public traverseCommentShort(commentShort: CommentShort): AlgPart { return commentShort; }\n  public traverseCommentLong(commentLong: CommentLong): AlgPart { return commentLong; }\n  private flattenSequenceOneLevel(algList: AlgPart[]): Unit[] {\n    let flattened: Unit[] = [];\n    for (const part of algList) {\n      if (matchesAlgType(part, \"sequence\")) {\n        flattened = flattened.concat((part as Sequence).nestedUnits);\n      } else if (isUnit(part)) {\n        flattened.push(part);\n      } else {\n        throw new Error(\"expand() encountered an internal error. Did you pass in a valid Algorithm?\");\n      }\n    }\n    return flattened;\n  }\n\n  private repeat(algList: Unit[], accordingTo: WithAmount): Sequence {\n    const amount = Math.abs(accordingTo.amount);\n    const amountDir = (accordingTo.amount > 0) ? 1 : -1; // Mutable\n\n    // TODO: Cleaner inversion\n    let once: Unit[];\n    if (amountDir === -1) {\n      // TODO: Avoid casting to sequence.\n      once = ((invert(new Sequence(algList))) as Sequence).nestedUnits;\n    } else {\n      once = algList;\n    }\n\n    let repeated: Unit[] = [];\n    for (let i = 0; i < amount; i++) {\n      repeated = repeated.concat(once);\n    }\n\n    return new Sequence(repeated);\n  }\n}\n\nexport class StructureEquals extends TraversalDownUp<AlgPart, boolean> {\n  public traverseSequence(sequence: Sequence, dataDown: AlgPart): boolean {\n    if (isUnit(dataDown)) {\n      return false;\n    }\n    const dataDownSeq = dataDown as Sequence;\n    if (sequence.nestedUnits.length !== dataDownSeq.nestedUnits.length) {\n      return false;\n    }\n    for (let i = 0; i < sequence.nestedUnits.length; i++) {\n      if (!this.traverse(sequence.nestedUnits[i], dataDownSeq.nestedUnits[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  public traverseGroup(group: Group, dataDown: AlgPart): boolean {\n    return (matchesAlgType(dataDown, \"group\")) && this.traverse(group.nestedSequence, (dataDown as Group).nestedSequence);\n  }\n  public traverseBlockMove(blockMove: BlockMove, dataDown: AlgPart): boolean {\n    // TODO: Handle layers.\n    return matchesAlgType(dataDown, \"blockMove\") &&\n      blockMove.outerLayer === (dataDown as BlockMove).outerLayer &&\n      blockMove.innerLayer === (dataDown as BlockMove).innerLayer &&\n      blockMove.family === (dataDown as BlockMove).family &&\n      blockMove.amount === (dataDown as BlockMove).amount;\n  }\n  public traverseCommutator(commutator: Commutator, dataDown: AlgPart): boolean {\n    return matchesAlgType(dataDown, \"commutator\") &&\n      this.traverse(commutator.A, (dataDown as Commutator).A) &&\n      this.traverse(commutator.B, (dataDown as Commutator).B);\n  }\n  public traverseConjugate(conjugate: Conjugate, dataDown: AlgPart): boolean {\n    return matchesAlgType(dataDown, \"conjugate\") &&\n      this.traverse(conjugate.A, (dataDown as Conjugate).A) &&\n      this.traverse(conjugate.B, (dataDown as Conjugate).B);\n  }\n  public traversePause(pause: Pause, dataDown: AlgPart): boolean {\n    return matchesAlgType(dataDown, \"pause\");\n  }\n  public traverseNewLine(newLine: NewLine, dataDown: AlgPart): boolean {\n    return matchesAlgType(dataDown, \"newLine\");\n  }\n  public traverseCommentShort(commentShort: CommentShort, dataDown: AlgPart): boolean {\n    return matchesAlgType(dataDown, \"commentShort\") && (commentShort.comment === (dataDown as CommentShort).comment);\n  }\n  public traverseCommentLong(commentLong: CommentLong, dataDown: AlgPart): boolean {\n    return matchesAlgType(dataDown, \"commentLong\") && (commentLong.comment === (dataDown as CommentLong).comment);\n  }\n}\n\n// TODO: Test that inverses are bijections.\nexport class CoalesceBaseMoves extends TraversalUp<AlgPart> {\n\n  // TODO: Handle\n  public traverseSequence(sequence: Sequence): Sequence {\n    const coalesced: Unit[] = [];\n    for (const part of sequence.nestedUnits) {\n      if (!matchesAlgType(part, \"blockMove\")) {\n        coalesced.push(this.traverseIntoUnit(part));\n      } else if (coalesced.length > 0) {\n        const last = coalesced[coalesced.length - 1];\n        if (matchesAlgType(last, \"blockMove\") &&\n          this.sameBlock((last as BlockMove), (part as BlockMove))) {\n          // TODO: This is cube-specific. Perhaps pass the modules as DataDown?\n          const amount = (last as BlockMove).amount + (part as BlockMove).amount;\n          coalesced.pop();\n          if (amount !== 0) {\n            // We could modify the last element instead of creating a new one,\n            // but this is safe against shifting coding practices.\n            // TODO: Figure out if the shoot-in-the-foot risk\n            // modification is worth the speed.\n            coalesced.push(new BlockMove((part as BlockMove).outerLayer, (part as BlockMove).innerLayer, (part as BlockMove).family, amount));\n          }\n        } else {\n          coalesced.push(part);\n        }\n      } else {\n        coalesced.push(part);\n      }\n    }\n    return new Sequence(coalesced);\n  }\n  public traverseGroup(group: Group): AlgPart { return group; }\n  public traverseBlockMove(blockMove: BlockMove): AlgPart { return blockMove; }\n  public traverseCommutator(commutator: Commutator): AlgPart { return commutator; }\n  public traverseConjugate(conjugate: Conjugate): AlgPart { return conjugate; }\n  public traversePause(pause: Pause): AlgPart { return pause; }\n  public traverseNewLine(newLine: NewLine): AlgPart { return newLine; }\n  public traverseCommentShort(commentShort: CommentShort): AlgPart { return commentShort; }\n  public traverseCommentLong(commentLong: CommentLong): AlgPart { return commentLong; }\n  private sameBlock(moveA: BlockMove, moveB: BlockMove): boolean {\n    // TODO: Handle layers\n    return moveA.outerLayer === moveB.outerLayer &&\n      moveA.innerLayer === moveB.innerLayer &&\n      moveA.family === moveB.family;\n  }\n}\n\n// export class Concat extends TraversalDownUp<Algorithm, Sequence> {\n//   private concatIntoSequence(A: Unit[], B: Algorithm): Sequence {\n//     var nestedAlgs: Unit[] = A.slice();\n//     if (matchesAlgType(B, \"sequence\")) {\n//       nestedAlgs = nestedAlgs.concat((B as unknown as Sequence).nestedUnits)\n//     } else {\n//       nestedAlgs.push(B as unknown as Unit);\n//     }\n//     return new Sequence(nestedAlgs)\n//   }\n//   public traverseSequence(     sequence:     Sequence,     dataDown: Algorithm): Sequence {return this.concatIntoSequence(sequence.nestedUnits, dataDown); }\n//   public traverseGroup(        group:        Group,        dataDown: Algorithm): Sequence {return this.concatIntoSequence([group]          , dataDown); }\n//   public traverseBlockMove(    BlockMove:    BlockMove,    dataDown: Algorithm): Sequence {return this.concatIntoSequence([BlockMove]      , dataDown); }\n//   public traverseCommutator(   commutator:   Commutator,   dataDown: Algorithm): Sequence {return this.concatIntoSequence([commutator]     , dataDown); }\n//   public traverseConjugate(    conjugate:    Conjugate,    dataDown: Algorithm): Sequence {return this.concatIntoSequence([conjugate]      , dataDown); }\n//   public traversePause(        pause:        Pause,        dataDown: Algorithm): Sequence {return this.concatIntoSequence([pause]          , dataDown); }\n//   public traverseNewLine(      newLine:      NewLine,      dataDown: Algorithm): Sequence {return this.concatIntoSequence([newLine]        , dataDown); }\n//   public traverseCommentShort( commentShort: CommentShort, dataDown: Algorithm): Sequence {return this.concatIntoSequence([commentShort]   , dataDown); }\n//   public traverseCommentLong(  commentLong:  CommentLong,  dataDown: Algorithm): Sequence {return this.concatIntoSequence([commentLong]    , dataDown); }\n// }\n\nfunction repetitionSuffix(amount: number): string {\n  const absAmount = Math.abs(amount);\n  let s = \"\";\n  if (absAmount !== 1) {\n    s += String(absAmount);\n  }\n  if (absAmount !== amount) {\n    s += \"'\";\n  }\n  return s;\n}\nexport function blockMoveToString(blockMove: BlockMove): string {\n  let out = blockMove.family + repetitionSuffix(blockMove.amount);\n  if (typeof blockMove.innerLayer !== \"undefined\") {\n    out = String(blockMove.innerLayer) + out;\n    if (typeof blockMove.outerLayer !== \"undefined\") {\n      out = String(blockMove.outerLayer) + \"-\" + out;\n    }\n  }\n  return out;\n}\n\nexport class ToString extends TraversalUp<string> {\n  public traverseSequence(sequence: Sequence): string {\n    let output = \"\";\n    if (sequence.nestedUnits.length > 0) {\n      output += this.traverse(sequence.nestedUnits[0]);\n      for (let i = 1; i < sequence.nestedUnits.length; i++) {\n        output += this.spaceBetween(sequence.nestedUnits[i - 1], sequence.nestedUnits[i]);\n        output += this.traverse(sequence.nestedUnits[i]);\n      }\n    }\n    return output;\n  }\n  public traverseGroup(group: Group): string { return \"(\" + this.traverse(group.nestedSequence) + \")\" + repetitionSuffix(group.amount); }\n  public traverseBlockMove(blockMove: BlockMove): string {\n    return blockMoveToString(blockMove);\n  }\n  public traverseCommutator(commutator: Commutator): string { return \"[\" + this.traverse(commutator.A) + \", \" + this.traverse(commutator.B) + \"]\" + repetitionSuffix(commutator.amount); }\n  public traverseConjugate(conjugate: Conjugate): string { return \"[\" + this.traverse(conjugate.A) + \": \" + this.traverse(conjugate.B) + \"]\" + repetitionSuffix(conjugate.amount); }\n  // TODO: Remove spaces between repeated pauses (in traverseSequence)\n  public traversePause(pause: Pause): string { return \".\"; }\n  public traverseNewLine(newLine: NewLine): string { return \"\\n\"; }\n  // TODO: Enforce being followed by a newline (or the end of the alg)?\n  public traverseCommentShort(commentShort: CommentShort): string { return \"//\" + commentShort.comment; }\n  // TODO: Sanitize `*/`\n  public traverseCommentLong(commentLong: CommentLong): string { return \"/*\" + commentLong.comment + \"*/\"; }\n  private spaceBetween(u1: Unit, u2: Unit): string {\n    if (matchesAlgType(u1, \"pause\") && matchesAlgType(u2, \"pause\")) {\n      return \"\";\n    }\n    if (matchesAlgType(u1, \"newLine\") || matchesAlgType(u2, \"newLine\")) {\n      return \"\";\n    }\n    if (matchesAlgType(u1, \"commentShort\") && !matchesAlgType(u2, \"newLine\")) {\n      return \"\\n\";\n    }\n    return \" \";\n  }\n}\n\nconst invertInstance = new Invert();\nconst expandInstance = new Expand();\nconst structureEqualsInstance = new StructureEquals();\nconst coalesceBaseMovesInstance = new CoalesceBaseMoves();\nconst algToStringInstance = new ToString();\n\nexport const invert = invertInstance.traverseSequence.bind(invertInstance) as (a: Sequence) => Sequence;\nexport const expand = expandInstance.traverseSequence.bind(expandInstance) as (a: Sequence) => Sequence;\nexport const structureEquals = structureEqualsInstance.traverseSequence.bind(structureEqualsInstance) as (a1: Sequence, a2: Sequence) => boolean;\nexport const coalesceBaseMoves = coalesceBaseMovesInstance.traverseSequence.bind(coalesceBaseMovesInstance) as (a: Sequence) => Sequence;\nexport const algToString = algToStringInstance.traverseSequence.bind(algToStringInstance) as (a: Sequence) => string;\n\nexport const algPartStructureEqualsForTesting = algToStringInstance.traverse.bind(algToStringInstance) as (a1: AlgPart, a2: AlgPart) => boolean;\nexport const algPartToStringForTesting = algToStringInstance.traverse.bind(algToStringInstance) as (a: AlgPart) => string;\n\nexport function experimentalBlockMoveQuantumName(move: BlockMove): string {\n  return algPartToStringForTesting(new BlockMove(move.outerLayer, move.innerLayer, move.family, 1));\n}\n","import {\n  AlgPart,\n  BareBlockMove,\n  CommentLong,\n  CommentShort,\n  Commutator,\n  Conjugate,\n  Group,\n  NewLine,\n  Pause,\n  Sequence,\n} from \"./algorithm\";\n\n// tslint:disable-next-line no-namespace // TODO: nested module\nexport namespace Example {\n\n  export const Sune: Sequence = new Sequence([\n    BareBlockMove(\"R\", 1),\n    BareBlockMove(\"U\", 1),\n    BareBlockMove(\"R\", -1),\n    BareBlockMove(\"U\", 1),\n    BareBlockMove(\"R\", 1),\n    BareBlockMove(\"U\", -2),\n    BareBlockMove(\"R\", -1),\n  ]);\n\n  export const AntiSune: Sequence = new Sequence([\n    BareBlockMove(\"R\", 1),\n    BareBlockMove(\"U\", 2),\n    BareBlockMove(\"R\", -1),\n    BareBlockMove(\"U\", -1),\n    BareBlockMove(\"R\", 1),\n    BareBlockMove(\"U\", -1),\n    BareBlockMove(\"R\", -1),\n  ]);\n\n  export const SuneCommutator: Sequence = new Sequence([new Commutator(\n    new Sequence([\n      BareBlockMove(\"R\", 1),\n      BareBlockMove(\"U\", 1),\n      BareBlockMove(\"R\", -2),\n    ]),\n    new Sequence([new Conjugate(\n      new Sequence([BareBlockMove(\"R\", 1)]),\n      new Sequence([BareBlockMove(\"U\", 1)]),\n      1,\n    )]),\n    1,\n  )]);\n\n  export const Niklas: Sequence = new Sequence([\n    BareBlockMove(\"R\", 1),\n    BareBlockMove(\"U\", -1),\n    BareBlockMove(\"L\", -1),\n    BareBlockMove(\"U\", 1),\n    BareBlockMove(\"R\", -1),\n    BareBlockMove(\"U\", -1),\n    BareBlockMove(\"L\", 1),\n    BareBlockMove(\"U\", 1),\n  ]);\n\n  export const EPerm: Sequence = new Sequence([\n    BareBlockMove(\"x\", -1),\n    new Commutator(\n      new Sequence([new Conjugate(\n        new Sequence([BareBlockMove(\"R\", 1)]),\n        new Sequence([BareBlockMove(\"U\", -1)]),\n      )]),\n      new Sequence([BareBlockMove(\"D\", 1)]),\n      1,\n    ),\n    new Commutator(\n      new Sequence([new Conjugate(\n        new Sequence([BareBlockMove(\"R\", 1)]),\n        new Sequence([BareBlockMove(\"U\", 1)]),\n      )]),\n      new Sequence([BareBlockMove(\"D\", 1)]),\n      1,\n    ),\n    BareBlockMove(\"x\", 1),\n  ]);\n\n  export const FURURFCompact: Sequence = new Sequence([new Conjugate(\n    new Sequence([BareBlockMove(\"F\", 1)]),\n    new Sequence([new Commutator(\n      new Sequence([BareBlockMove(\"U\", 1)]),\n      new Sequence([BareBlockMove(\"R\", 1)]),\n      1,\n    )]),\n    1,\n  )]);\n\n  export const APermCompact: Sequence = new Sequence([new Conjugate(\n    new Sequence([BareBlockMove(\"R\", 2)]),\n    new Sequence([new Commutator(\n      new Sequence([BareBlockMove(\"F\", 2)]),\n      new Sequence([\n        BareBlockMove(\"R\", -1),\n        BareBlockMove(\"B\", -1),\n        BareBlockMove(\"R\", 1),\n      ]),\n      1,\n    )]),\n    1,\n  )]);\n\n  export const FURURFMoves: Sequence = new Sequence([\n    BareBlockMove(\"F\", 1),\n    BareBlockMove(\"U\", 1),\n    BareBlockMove(\"R\", 1),\n    BareBlockMove(\"U\", -1),\n    BareBlockMove(\"R\", -1),\n    BareBlockMove(\"F\", -1),\n  ]);\n\n  export const TPerm: Sequence = new Sequence([\n    BareBlockMove(\"R\", 1),\n    BareBlockMove(\"U\", 1),\n    BareBlockMove(\"R\", -1),\n    BareBlockMove(\"U\", -1),\n    BareBlockMove(\"R\", -1),\n    BareBlockMove(\"F\", 1),\n    BareBlockMove(\"R\", 2),\n    BareBlockMove(\"U\", -1),\n    BareBlockMove(\"R\", -1),\n    BareBlockMove(\"U\", -1),\n    BareBlockMove(\"R\", 1),\n    BareBlockMove(\"U\", 1),\n    BareBlockMove(\"R\", -1),\n    BareBlockMove(\"F\", -1),\n  ]);\n\n  export const HeadlightSwaps: Sequence = new Sequence([new Conjugate(\n    new Sequence([BareBlockMove(\"F\", 1)]),\n    new Sequence([new Commutator(\n      new Sequence([BareBlockMove(\"R\", 1)]),\n      new Sequence([BareBlockMove(\"U\", 1)]),\n      3,\n    )]),\n    1,\n  )]);\n\n  export const TriplePause: Sequence = new Sequence([\n    new Pause(),\n    new Pause(),\n    new Pause(),\n  ],\n  );\n\n  export const AllAlgParts: AlgPart[] = [\n    new Sequence([BareBlockMove(\"R\", 1), BareBlockMove(\"U\", -1)]),\n    new Group(new Sequence([BareBlockMove(\"F\", 1)]), 2),\n    // new Rotation(\"y\", -1),\n    BareBlockMove(\"R\", 2),\n    new Commutator(new Sequence([BareBlockMove(\"R\", 2)]), new Sequence([BareBlockMove(\"U\", 2)]), 2),\n    new Conjugate(new Sequence([BareBlockMove(\"L\", 2)]), new Sequence([BareBlockMove(\"D\", -1)]), 2),\n    new Pause(),\n    new NewLine(),\n    new CommentShort(\"short comment\"),\n    new CommentLong(\"long comment\"),\n  ];\n\n}\n","import {\n  BlockMove,\n  CommentLong,\n  CommentShort,\n  Commutator,\n  Conjugate,\n  Group,\n  NewLine,\n  Pause,\n  Sequence,\n  Unit,\n} from \"./algorithm\";\n\n// TODO: Turn this into a union.\nexport interface AlgJSON {\n  type: string;\n  nestedSequence?: AlgJSON;\n  nestedUnits?: AlgJSON[];\n  innerLayer?: number;\n  outerLayer?: number;\n  family?: string;\n  amount?: number;\n  A?: AlgJSON;\n  B?: AlgJSON;\n  comment?: string;\n}\n\nexport function fromJSON(json: AlgJSON): Sequence {\n  if (json.type !== \"sequence\") {\n    throw new Error(`Expected Sequence while parsing, got: ${json.type}`);\n  }\n  if (!json.nestedUnits) { throw new Error(\"Missing nestedUnits\"); }\n  return new Sequence(json.nestedUnits.map((j) => unitFromJSON(j)));\n}\n\nfunction unitFromJSON(json: AlgJSON): Unit {\n  switch (json.type) {\n    case \"sequence\":\n      throw new Error(`Expected AlgPart while parsing, got \\`Sequence\\`.`);\n    case \"group\":\n      if (!json.nestedSequence) { throw new Error(\"Missing nestedSequence\"); }\n      if (!json.amount) { throw new Error(\"Missing amount\"); }\n      return new Group(fromJSON(json.nestedSequence), json.amount);\n    case \"blockMove\":\n      // TODO: Double-check that there is no outer layer without an inner layer?\n      if (!json.family) { throw new Error(\"Missing family\"); }\n      if (!json.amount) { throw new Error(\"Missing amount\"); }\n      return new BlockMove(json.outerLayer, json.innerLayer, json.family, json.amount);\n    case \"commutator\":\n      if (!json.A) { throw new Error(\"Missing A\"); }\n      if (!json.B) { throw new Error(\"Missing B\"); }\n      if (!json.amount) { throw new Error(\"Missing amount\"); }\n      return new Commutator(fromJSON(json.A), fromJSON(json.B), json.amount);\n    case \"conjugate\":\n      if (!json.A) { throw new Error(\"Missing A\"); }\n      if (!json.B) { throw new Error(\"Missing B\"); }\n      if (!json.amount) { throw new Error(\"Missing amount\"); }\n      return new Conjugate(fromJSON(json.A), fromJSON(json.B), json.amount);\n    case \"pause\":\n      return new Pause();\n    case \"newLine\":\n      return new NewLine();\n    case \"commentShort\":\n      if (!json.comment) { throw new Error(\"Missing comment\"); }\n      return new CommentShort(json.comment);\n    case \"commentLong\":\n      if (!json.comment) { throw new Error(\"Missing comment\"); }\n      return new CommentLong(json.comment);\n    default:\n      throw new Error(`Unknown alg type: ${json.type}`);\n  }\n}\n","import {\n  BlockMove,\n  CommentLong,\n  CommentShort,\n  Commutator,\n  Conjugate,\n  Group,\n  NewLine,\n  Pause,\n  Sequence,\n} from \"./algorithm\";\n\nimport { TraversalUp } from \"./traversal\";\n\nexport class ValidationError extends Error { }\n\nexport abstract class ValidatorTraversal extends TraversalUp<void> { }\n\ninterface FamilyList { [s: string]: boolean; }\n\nfunction validateFamily(family: string, allowedFamilyLists: FamilyList[]): boolean {\n  for (const list of allowedFamilyLists) {\n    if (list[family] === true) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// TODO: Switch to `Set`?\nconst plainMoveFamilies: FamilyList = {\n  x: true,\n  y: true,\n  z: true,\n  M: true,\n  E: true,\n  S: true,\n  m: true,\n  e: true,\n  s: true,\n};\n\nconst singleSliceMoveFamilies: FamilyList = {\n  U: true,\n  L: true,\n  F: true,\n  R: true,\n  B: true,\n  D: true,\n};\n\nconst wideMoveFamilies: FamilyList = {\n  u: true,\n  l: true,\n  f: true,\n  r: true,\n  b: true,\n  d: true,\n  Uw: true,\n  Lw: true,\n  Fw: true,\n  Rw: true,\n  Bw: true,\n  Dw: true,\n};\n\nabstract class BaseMoveValidator extends ValidatorTraversal {\n  public traverseSequence(sequence: Sequence): void {\n    // TODO: Handle newLines and comments correctly\n    for (const unit of sequence.nestedUnits) {\n      this.traverse(unit);\n    }\n  }\n  public traverseGroup(group: Group): void {\n    return this.traverse(group.nestedSequence);\n  }\n  public traverseCommutator(commutator: Commutator): void {\n    this.traverse(commutator.A);\n    this.traverse(commutator.B);\n  }\n  public traverseConjugate(conjugate: Conjugate): void {\n    this.traverse(conjugate.A);\n    this.traverse(conjugate.B);\n  }\n  public traversePause(pause: Pause): void { return; }\n  public traverseNewLine(newLine: NewLine): void { return; }\n  public traverseCommentShort(commentShort: CommentShort): void { return; }\n  public traverseCommentLong(commentLong: CommentLong): void { return; }\n}\n\n// TODO: Export function instead?\nexport class BlockMoveValidator extends BaseMoveValidator {\n  public traverseBlockMove(blockMove: BlockMove): void {\n    if (typeof blockMove.outerLayer !== \"undefined\") {\n      if (typeof blockMove.innerLayer === \"undefined\") {\n        throw new ValidationError(\"A BlockMove with an outer layer must have an inner layer.\");\n      }\n      if (!validateFamily(blockMove.family, [wideMoveFamilies])) {\n        throw new ValidationError(`The provided SiGN move family is invalid, or cannot have an outer and inner layer: ${blockMove.family}`);\n      }\n      if (blockMove.outerLayer <= 0) {\n        throw new ValidationError(\"Cannot have an outer layer of 0 or less.\");\n      }\n      // TODO: Allow 2-2r?\n      if (blockMove.outerLayer >= blockMove.innerLayer) {\n        throw new ValidationError(\"The outer layer must be less than the inner layer.\");\n      }\n      return;\n    } else if (typeof blockMove.innerLayer !== \"undefined\") {\n      if (!validateFamily(blockMove.family, [wideMoveFamilies, singleSliceMoveFamilies])) {\n        throw new ValidationError(`The provided SiGN move family is invalid, or cannot have an inner slice: ${blockMove.family}`);\n      }\n      if (blockMove.innerLayer <= 0) {\n        throw new ValidationError(\"Cannot have an inner layer of 0 or less.\");\n      }\n      return;\n    } else {\n      if (!validateFamily(blockMove.family, [wideMoveFamilies, singleSliceMoveFamilies, plainMoveFamilies])) {\n        throw new ValidationError(`Invalid SiGN plain move family: ${blockMove.family}`);\n      }\n      return;\n    }\n  }\n}\n\n// TODO: Export function instead?\nexport class FlatAlgValidator extends ValidatorTraversal {\n\n  public traverseSequence(sequence: Sequence): void {\n    // TODO: Handle newLines and comments correctly\n    for (const unit of sequence.nestedUnits) {\n      this.traverse(unit);\n    }\n    return;\n  }\n  public traverseGroup(group: Group): void {\n    throw new ValidationError(\"A flat alg cannot contain a group.\");\n  }\n  public traverseBlockMove(blockMove: BlockMove): void {\n    return;\n  }\n  public traverseCommutator(commutator: Commutator): void {\n    throw new ValidationError(\"A flat alg cannot contain a commutator.\");\n  }\n  public traverseConjugate(conjugate: Conjugate): void {\n    throw new ValidationError(\"A flat alg cannot contain a conjugate.\");\n  }\n  public traversePause(pause: Pause): void { return; }\n  public traverseNewLine(newLine: NewLine): void { return; }\n  public traverseCommentShort(commentShort: CommentShort): void { return; }\n  public traverseCommentLong(commentLong: CommentLong): void { return; }\n}\n\nexport type Validator = (a: Sequence) => void;\n\nconst BlockMoveValidatorInstance = new BlockMoveValidator();\nexport const validateSiGNMoves = BlockMoveValidatorInstance.traverse.bind(BlockMoveValidatorInstance) as Validator;\n\nconst flatAlgValidatorInstance = new FlatAlgValidator();\nexport const validateFlatAlg = flatAlgValidatorInstance.traverse.bind(flatAlgValidatorInstance) as Validator;\n\n// TODO: Option for puzzle size?\nexport function validateSiGNAlg(a: Sequence): void {\n  validateSiGNMoves(a);\n  validateFlatAlg(a);\n}\n","// Workaround per https://github.com/pegjs/pegjs/pull/481\nimport parser from \"./parser.pegjs\";\nconst {parse} = parser;\nexport {parse};\n","import { Sequence } from \"../algorithm\";\nimport { fromJSON } from \"../json\";\nimport { validateSiGNAlg, Validator } from \"../validation\";\nimport { parse as pegParse } from \"./parser\";\n\nexport interface ParseOptions {\n  validators?: Validator[];\n}\n\n// TODO: Include token location info.\n// TODO: Take validators in a way that allows optimizing parsing.\nexport function parse(s: string, options: ParseOptions = { validators: [] }): Sequence {\n  options.validators = options.validators || [];\n\n  const algo = fromJSON(pegParse(s));\n  for (const validate of options.validators) {\n    validate(algo);\n  }\n  return algo;\n}\n\nexport function parseSiGN(s: string): Sequence {\n  return parse(s, { validators: [validateSiGNAlg] });\n}\n","import { BareBlockMove, BlockMove } from \"./algorithm\";\n\nconst cubeKeyMapping: { [key: number]: BlockMove } = {\n  73: BareBlockMove(\"R\"), 75: BareBlockMove(\"R\", -1),\n  87: BareBlockMove(\"B\"), 79: BareBlockMove(\"B\", -1),\n  83: BareBlockMove(\"D\"), 76: BareBlockMove(\"D\", -1),\n  68: BareBlockMove(\"L\"), 69: BareBlockMove(\"L\", -1),\n  74: BareBlockMove(\"U\"), 70: BareBlockMove(\"U\", -1),\n  72: BareBlockMove(\"F\"), 71: BareBlockMove(\"F\", -1), // Heise\n  78: BareBlockMove(\"F\"), 86: BareBlockMove(\"F\", -1), // Kirjava\n\n  67: BareBlockMove(\"l\"), 82: BareBlockMove(\"l\", -1),\n  85: BareBlockMove(\"r\"), 77: BareBlockMove(\"r\", -1),\n\n  84: BareBlockMove(\"x\"), 89: BareBlockMove(\"x\"), 66: BareBlockMove(\"x\", -1), // 84 (T) and 89 (Y) are alternatives.\n  186: BareBlockMove(\"y\"), 59: BareBlockMove(\"y\"), 65: BareBlockMove(\"y\", -1), // 186 is WebKit, 59 is Mozilla; see http://unixpapa.com/js/key.html\n  80: BareBlockMove(\"z\"), 81: BareBlockMove(\"z\", -1),\n\n  190: BareBlockMove(\"M\", -1),\n};\n\n// TODO: options about whether to ignore modifier keys (e.g. alt, ctrl).\n// TODO: Support different mappings.\n// TODO: Return BaseMove instead?\nexport function keyToMove(e: KeyboardEvent): BlockMove | null {\n  if (e.altKey || e.ctrlKey) {\n    return null;\n  }\n\n  return cubeKeyMapping[e.keyCode] || null;\n}\n","import { Sequence } from \"./algorithm\";\nimport { parse } from \"./parser\";\nimport { algToString } from \"./traversal\";\n\n// This is not the most sophisticated scheme, but it has been used in production\n// at alg.cubing.net for years.\nexport function serializeURLParam(a: Sequence): string {\n  let escaped = algToString(a);\n  escaped = escaped.replace(/_/g, \"&#95;\").replace(/ /g, \"_\");\n  escaped = escaped.replace(/\\+/g, \"&#2b;\");\n  escaped = escaped.replace(/-/g, \"&#45;\").replace(/'/g, \"-\");\n  return escaped;\n}\n\nexport function deserializeURLParam(a: string): Sequence {\n  let unescaped = a;\n  unescaped = unescaped.replace(/-/g, \"'\").replace(/&#45;/g, \"-\");\n  unescaped = unescaped.replace(/\\+/g, \" \").replace(/&#2b;/g, \"+\"); // Recognize + as space. Many URL encodings will do this.\n  unescaped = unescaped.replace(/_/g, \" \").replace(/&#95;/g, \"_\");\n  return parse(unescaped);\n}\n\n// Returns an empty sequence if the parameter is not present.\n// Throws an error if an alg is present but not valid.\nexport function getAlgURLParam(name: string): Sequence {\n  const s = new URLSearchParams(window.location.search).get(name) || \"\";\n  return deserializeURLParam(s);\n}\n\nexport interface AlgCubingNetOptions {\n  alg?: Sequence;\n  setup?: Sequence;\n  title?: string;\n  puzzle?: \"1x1x1\" | \"2x2x2\" | \"3x3x3\" | \"4x4x4\" | \"5x5x5\" | \"6x6x6\" | \"7x7x7\" | \"8x8x8\" | \"9x9x9\" | \"10x10x10\" | \"11x11x11\" | \"12x12x12\" | \"13x13x13\" | \"14x14x14\" | \"16x16x16\" | \"17x17x17\";\n  stage?: \"full\" | \"cross\" | \"F2L\" | \"LL\" | \"OLL\" | \"PLL\" | \"CLS\" | \"ELS\" | \"L6E\" | \"CMLL\" | \"WV\" | \"ZBLL\" | \"void\";\n  view?: \"editor\" | \"playback\" | \"fullscreen\";\n  type?: \"moves\" | \"reconstruction\" | \"alg\" | \"reconstruction-end-with-setup\";\n}\n\n// TODO: runtime validation?\nexport function algCubingNetLink(options: AlgCubingNetOptions): string {\n  const url = new URL(\"https://alg.cubing.net\");\n  if (!options.alg) {\n    throw new Error((\"An alg parameter is required.\"));\n  }\n  url.searchParams.set(\"alg\", serializeURLParam(options.alg));\n\n  if (options.setup) {\n    url.searchParams.set(\"setup\", serializeURLParam(options.setup));\n  }\n  if (options.title) {\n    url.searchParams.set(\"title\", options.title);\n  }\n  if (options.puzzle) {\n    if ([\"1x1x1\", \"2x2x2\", \"3x3x3\", \"4x4x4\", \"5x5x5\", \"6x6x6\", \"7x7x7\", \"8x8x8\", \"9x9x9\", \"10x10x10\", \"11x11x11\", \"12x12x12\", \"13x13x13\", \"14x14x14\", \"16x16x16\", \"17x17x17\"].indexOf(options.puzzle) === -1) {\n      throw new Error(`Invalid puzzle parameter: ${options.puzzle}`);\n    }\n    url.searchParams.set(\"puzzle\", options.puzzle);\n  }\n  if (options.stage) {\n    if ([\"full\", \"cross\", \"F2L\", \"LL\", \"OLL\", \"PLL\", \"CLS\", \"ELS\", \"L6E\", \"CMLL\", \"WV\", \"ZBLL\", \"void\"].indexOf(options.stage) === -1) {\n      throw new Error(`Invalid stage parameter: ${options.stage}`);\n    }\n    url.searchParams.set(\"stage\", options.stage);\n  }\n  if (options.view) {\n    if ([\"editor\", \"playback\", \"fullscreen\"].indexOf(options.view) === -1) {\n      throw new Error(`Invalid view parameter: ${options.view}`);\n    }\n    url.searchParams.set(\"view\", options.view);\n  }\n  if (options.type) {\n    if ([\"moves\", \"reconstruction\", \"alg\", \"reconstruction-end-with-setup\"].indexOf(options.type) === -1) {\n      throw new Error(`Invalid type parameter: ${options.type}`);\n    }\n    url.searchParams.set(\"type\", options.type);\n  }\n  return url.toString();\n}\n","import { BlockMove, blockMoveToString, expand, parse, Sequence } from \"../alg\";\nimport { KPuzzleDefinition, Transformation } from \"./definition_types\";\n\nexport function Combine(def: KPuzzleDefinition, t1: Transformation, t2: Transformation): Transformation {\n  const newTrans: Transformation = {} as Transformation;\n  for (const orbitName in def.orbits) {\n    const oDef = def.orbits[orbitName];\n    const o1 = t1[orbitName];\n    const o2 = t2[orbitName];\n    const newPerm = new Array(oDef.numPieces);\n    const newOri = new Array(oDef.numPieces);\n    for (let idx = 0; idx < oDef.numPieces; idx++) {\n      newOri[idx] = (o1.orientation[o2.permutation[idx]] + o2.orientation[idx])\n        % oDef.orientations;\n      newPerm[idx] = o1.permutation[o2.permutation[idx]];\n    }\n    newTrans[orbitName] = { permutation: newPerm, orientation: newOri };\n  }\n  return newTrans;\n}\n\nexport function Multiply(def: KPuzzleDefinition, t: Transformation, amount: number): Transformation {\n  if (amount < 0) {\n    return Multiply(def, Invert(def, t), -amount);\n  }\n  if (amount === 0) {\n    return IdentityTransformation(def);\n  }\n  if (amount === 1) {\n    return t;\n  }\n  const halfish = Multiply(def, t, Math.floor(amount / 2));\n  const twiceHalfish = Combine(def, halfish, halfish);\n  if (amount % 2 === 0) {\n    return twiceHalfish;\n  } else {\n    return Combine(def, t, twiceHalfish);\n  }\n}\nexport function IdentityTransformation(definition: KPuzzleDefinition): Transformation {\n  const transformation = {} as Transformation;\n  for (const orbitName in definition.orbits) {\n    const orbitDefinition = definition.orbits[orbitName];\n    const newPermutation = new Array(orbitDefinition.numPieces);\n    const newOrientation = new Array(orbitDefinition.numPieces);\n    for (let i = 0; i < orbitDefinition.numPieces; i++) {\n      newPermutation[i] = i;\n      newOrientation[i] = 0;\n    }\n    const orbitTransformation = { permutation: newPermutation, orientation: newOrientation };\n    transformation[orbitName] = orbitTransformation;\n  }\n  return transformation;\n}\n\nexport function Invert(def: KPuzzleDefinition, t: Transformation): Transformation {\n  const newTrans: Transformation = {} as Transformation;\n  for (const orbitName in def.orbits) {\n    const oDef = def.orbits[orbitName];\n    const o = t[orbitName];\n    const newPerm = new Array(oDef.numPieces);\n    const newOri = new Array(oDef.numPieces);\n    for (let idx = 0; idx < oDef.numPieces; idx++) {\n      const fromIdx = (o.permutation[idx] as number);\n      newPerm[fromIdx] = idx;\n      newOri[fromIdx] = (oDef.orientations - o.orientation[idx] + oDef.orientations) % oDef.orientations;\n    }\n    newTrans[orbitName] = { permutation: newPerm, orientation: newOri };\n  }\n  return newTrans;\n}\n\nfunction gcd(a: number, b: number): number {\n  if (b) {\n     return gcd(b, a % b);\n  }\n  return a;\n}\n/* calculate the order of a particular transformation. */\nexport function Order(def: KPuzzleDefinition, t: Transformation): number {\n  let r: number = 1;\n  for (const orbitName in def.orbits) {\n    const oDef = def.orbits[orbitName];\n    const o = t[orbitName];\n    const d = new Array(oDef.numPieces);\n    for (let idx = 0; idx < oDef.numPieces; idx++) {\n      if (!d[idx]) {\n        let w = idx;\n        let om = 0;\n        let pm = 0 ;\n        while (true) {\n          d[w] = true ;\n          om = om + o.orientation[w];\n          pm = pm + 1 ;\n          w = o.permutation[w];\n          if (w === idx) {\n            break ;\n          }\n        }\n        if (om !== 0) {\n          pm = pm * oDef.orientations / gcd(oDef.orientations, om) ;\n        }\n        r = r * pm / gcd(r, pm);\n      }\n    }\n  }\n  return r;\n}\n\nexport function EquivalentTransformations(def: KPuzzleDefinition, t1: Transformation, t2: Transformation): boolean {\n  for (const orbitName in def.orbits) {\n    const oDef = def.orbits[orbitName];\n    const o1 = t1[orbitName];\n    const o2 = t2[orbitName];\n    for (let idx = 0; idx < oDef.numPieces; idx++) {\n      if (o1.orientation[idx] !== o2.orientation[idx]) {\n        return false;\n      }\n      if (o1.permutation[idx] !== o2.permutation[idx]) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nexport function EquivalentStates(def: KPuzzleDefinition, t1: Transformation, t2: Transformation): boolean {\n  // Turn transformations into states.\n  // This accounts for indistinguishable pieces.\n  return EquivalentTransformations(def, Combine(def, def.startPieces, t1), Combine(def, def.startPieces, t2));\n}\n\n// TODO: Move other helpers into the definition.\nexport function stateForBlockMove(def: KPuzzleDefinition, blockMove: BlockMove): Transformation {\n  // TODO: Optimize this.\n  const repMoveString = blockMoveToString(new BlockMove(blockMove.outerLayer, blockMove.innerLayer, blockMove.family, 1));\n  let move: Transformation | undefined = def.moves[repMoveString];\n  if (!move) {\n    move = new KPuzzle(def).expandSlices(repMoveString, blockMove);\n  }\n  if (!move) {\n    throw new Error(`Unknown move family: ${blockMove.family}`);\n  }\n  return Multiply(def, move, blockMove.amount);\n}\n\nexport class KPuzzle {\n  public state: Transformation;\n  constructor(public definition: KPuzzleDefinition) {\n    this.state = IdentityTransformation(definition);\n  }\n\n  public serialize(): string {\n    let output = \"\";\n    for (const orbitName in this.definition.orbits) {\n      output += orbitName + \"\\n\";\n      output += this.state[orbitName].permutation.join(\" \") + \"\\n\";\n      output += this.state[orbitName].orientation.join(\" \") + \"\\n\";\n    }\n    output = output.slice(0, output.length - 1); // Trim last newline.\n    return output;\n  }\n\n  public applyBlockMove(blockMove: BlockMove): void {\n    this.state = Combine(this.definition, this.state, stateForBlockMove(this.definition, blockMove));\n  }\n\n  public applyAlg(a: Sequence): void {\n    // TODO: Iterator instead of full expansion.\n    for (const move of (expand(a).nestedUnits) as BlockMove[]) {\n      this.applyBlockMove(move);\n    }\n  }\n\n  public applyMove(moveName: string): this {\n    let move: Transformation | undefined = this.definition.moves[moveName];\n    if (!move) {\n      move = this.expandSlicesByName(moveName);\n    }\n    if (!move) {\n      throw new Error(`Unknown move: ${moveName}`);\n    }\n\n    this.state = Combine(this.definition, this.state, move);\n    return this;\n  }\n\n  public getMoveExpander(create: boolean): MoveExpander | undefined {\n    let moveExpander = this.definition.moveExpander;\n    if (create && !moveExpander) {\n      moveExpander = new MoveExpander();\n      this.definition.moveExpander = moveExpander;\n    }\n    return moveExpander;\n  }\n  public setFaceNames(faceNames: string[]): void {\n    const me = this.getMoveExpander(true);\n    if (me) {\n      me.setFaceNames(faceNames);\n    }\n  }\n  public addGrip(grip1: string, grip2: string, nslices: number): void {\n    const me = this.getMoveExpander(true);\n    return me ? me.addGrip(grip1, grip2, nslices, this.definition) : undefined;\n  }\n  public expandSlices(rep: string, blockMove: BlockMove): Transformation | undefined {\n    const me = this.getMoveExpander(false);\n    return me ? me.expandSlices(rep, blockMove, this.definition) : undefined;\n  }\n  public expandSlicesByName(mv: string): Transformation | undefined {\n    const me = this.getMoveExpander(false);\n    return me ? me.expandSlicesByName(mv, this.definition) : undefined;\n  }\n  public unswizzle(grip: string): string {\n    const me = this.getMoveExpander(true);\n    return me ? me.unswizzle(grip) : grip ;\n  }\n\n  // TODO: Implement\n  // parseState(): this {}\n\n  // TODO: Alg parsing\n\n  // TODO: Implement.\n  // invert(): this {}\n}\n\n//   This class supports expanding a set of slice moves (for instance,\n//   U, 2U, 3U, 2D, D on the 5x5x5) into a full set of outer block, inner\n//   slice, etc. moves such as 2-3u or 5U, automatically.  The addGrip()\n//   method informs us what grips exist and how many slices there are.\n//   The setFaceNames() method tells us what the names of the faces are\n//   so we can unswizzle swizzled grip names.\n\nexport class MoveExpander {\n  private gripStash: { [key: string]: Transformation[] };\n  private moveStash: { [key: string]: Transformation };\n  private facenames?: string[];\n  private regrip: { [key: string]: string };\n  constructor() {\n    this.gripStash = {};\n    this.moveStash = {};\n    this.regrip = {};\n  }\n  public setFaceNames(fn: string[]): void {\n    this.facenames = fn;\n  }\n  public addGrip(grip1: string, grip2: string, nslices: number, def: KPuzzleDefinition): void {\n    const slices = [];\n    const axes = this.gripStash;\n    const moves = def.moves;\n    for (let i = 1; i <= nslices; i++) {\n      let t = (i === 1 && moves[grip1]) || moves[\"\" + i + grip1];\n      if (!t) {\n        t = (i === nslices && moves[grip2] || moves[\"\" + (nslices + 1 - i) + grip2]);\n        if (t) {\n          t = Invert(def, t);\n        }\n      }\n      if (!t) {\n        throw new Error(\"Could not expand axis \" + grip1 + \" to \" + grip2 +\n          \" because we are missing a move for slice \" + i);\n      }\n      slices.push(t);\n    }\n    axes[grip1] = slices;\n    const aprime = slices.map((_: Transformation) => Invert(def, _));\n    aprime.reverse();\n    axes[grip2] = aprime;\n  }\n  public expandSlicesByName(mv: string, def: KPuzzleDefinition): Transformation | undefined {\n    const t = this.moveStash[mv];\n    if (t) {\n      return t;\n    }\n    try {\n      const alg = parse(mv);\n      if (alg.nestedUnits.length !== 1) {\n        return undefined;\n      }\n      const signmove = alg.nestedUnits[0] as BlockMove; // need better way\n      return this.expandSlices(mv, signmove, def);\n    } catch (e) {\n      return undefined;\n    }\n  }\n  public unswizzle(grip: string): string {\n    if (this.regrip[grip]) {\n      return this.regrip[grip] ;\n    }\n    if (!this.facenames) {\n      return grip ;\n    }\n    // permit unswizzle to strip w and p suffixes for callers\n    // other than the internal move expander below.\n    if (grip.length > 1) {\n      if (grip[0] <= \"Z\" && (grip[grip.length - 1] === \"w\" || grip[grip.length - 1] === \"v\")) {\n        grip = grip.substr(0, grip.length - 1);\n      }\n    }\n    const faceSplit = this.splitByFaceNames(grip, this.facenames);\n    if (faceSplit) {\n      for (let i = 0; i < faceSplit.length; i++) {\n        let testGrip = \"\";\n        for (let j = 0; j < faceSplit.length; j++) {\n          testGrip += faceSplit[(i + j) % faceSplit.length];\n        }\n        if (this.gripStash[testGrip]) {\n          this.regrip[grip] = testGrip;\n          return testGrip ;\n        }\n      }\n    }\n    return grip ;\n  }\n  public expandSlices(rep: string, blockMove: BlockMove, def: KPuzzleDefinition): Transformation | undefined {\n    const t = this.moveStash[rep];\n    if (t) {\n      return t;\n    }\n    const axes = this.gripStash;\n    const family = blockMove.family;\n    let grip = family;\n    let isBlock = false;\n    let isPuzzle = false;\n    // the following \"reparse\" code is almost certainly wrong\n    if (/[a-z]/.test(family)) {\n      isBlock = true;\n      grip = family.toUpperCase();\n    }\n    if (family.length > 1 && family.endsWith(\"w\")) {\n      isBlock = true;\n      grip = family.substring(0, family.length - 1);\n    }\n    if (family.length > 1 && family.endsWith(\"v\")) {\n      isPuzzle = true;\n      grip = family.substring(0, family.length - 1);\n    }\n    let slices = axes[grip];\n    if (!slices && this.facenames) {\n      grip = this.unswizzle(grip) ;\n      slices = axes[grip] ;\n    }\n    if (!slices) {\n      return undefined;\n    } // don't throw here; let others catch it\n    let outer = blockMove.outerLayer;\n    let inner = blockMove.innerLayer;\n    if (inner === undefined) {\n      if (outer === undefined) {\n        outer = 1;\n        inner = (isBlock ? 2 : 1);\n        if (isPuzzle) {\n          inner = axes[grip].length;\n        }\n      } else {\n        return undefined;\n      } // should never happen\n    } else if (outer === undefined) {\n      outer = (isBlock ? 1 : inner);\n    }\n    if (inner < outer) {\n      return undefined;\n    }\n    if (outer > axes[grip].length) {\n      return undefined;\n    }\n    let t2 = slices[outer - 1];\n    for (let i = outer + 1; i <= inner; i++) {\n      t2 = Combine(def, t2, slices[i - 1]);\n    }\n    this.moveStash[rep] = t2;\n    return t2;\n  }\n  private splitByFaceNames(s: string, facenames: string[]): string[] | undefined {\n    const r: string[] = [];\n    let at = 0;\n    // we permit lowercase arguments, but face names are always upper case\n    s = s.toUpperCase();\n    while (at < s.length) {\n      let found = false;\n      for (const facename of facenames) {\n        if (s.substr(at).startsWith(facename)) {\n          r.push(facename);\n          at += facename.length;\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        return undefined;\n      }\n    }\n    return r;\n  }\n}\n","import { readFileSync } from \"fs\";\n\n// Parcel will automatically inline the data from this:\n//\n//     https://parceljs.org/javascript.html\n//     If you want to inline a file into the JavaScript bundle instead of\n//     reference it by URL, you can use the Node.js `fs.readFileSync` API to do\n//     that. The URL must be statically analyzable, meaning it cannot have any\n//     variables in it (other than `__dirname` and `__filename`).\nexport const sq1SVG = readFileSync(__dirname + \"/sq1.svg\", \"utf-8\");\n","import { KPuzzleDefinition } from \"./definition_types\";\nimport { sq1SVG } from \"./definitions/svg\";\n\nexport const Puzzles: { [key: string]: KPuzzleDefinition } = {\n  \"2x2x2\": {\n    name: \"2x2x2\",\n    orbits: { CORNERS: { numPieces: 7, orientations: 3 } },\n    startPieces: { CORNERS: { permutation: [0, 1, 2, 3, 4, 5, 6], orientation: [0, 0, 0, 0, 0, 0, 0] } },\n    moves: {\n      U: { CORNERS: { permutation: [3, 0, 1, 2, 4, 5, 6], orientation: [0, 0, 0, 0, 0, 0, 0] } },\n      R: { CORNERS: { permutation: [0, 2, 5, 3, 1, 4, 6], orientation: [0, 2, 1, 0, 1, 2, 0] } },\n      F: { CORNERS: { permutation: [0, 1, 3, 6, 4, 2, 5], orientation: [0, 0, 0, 0, 0, 0, 0] } },\n    },\n    svg: \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.0//EN\\\"\\n       \\\"http://www.w3.org/TR/2001/REC-SVG-20050904/DTD/svg11.dtd\\\">\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" viewBox=\\\"0 0 490 370\\\" preserveAspectRatio=\\\"xMidYMid meet\\\">\\n  <defs>\\n  </defs>\\n  <title>2x2x2</title>\\n  <defs>\\n    <g id=\\\"sticker\\\">\\n        <rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"1\\\" height=\\\"1\\\" stroke=\\\"black\\\" stroke-width=\\\"0.04px\\\" />\\n    </g>\\n  </defs>\\n  <g id=\\\"puzzle\\\" transform=\\\"translate(5, 5) scale(60)\\\">\\n    <use id=\\\"CORNERS-l0-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(2, 0)\\\" style=\\\"fill: white\\\"/>\\n    <use id=\\\"CORNERS-l0-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(7, 2)\\\" style=\\\"fill: blue\\\"/>\\n    <use id=\\\"CORNERS-l0-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(0, 2)\\\" style=\\\"fill: orange\\\"/>\\n\\n    <use id=\\\"CORNERS-l1-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(3, 0)\\\" style=\\\"fill: white\\\"/>\\n    <use id=\\\"CORNERS-l1-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(5, 2)\\\" style=\\\"fill: red\\\"/>\\n    <use id=\\\"CORNERS-l1-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(6, 2)\\\" style=\\\"fill: blue\\\"/>\\n\\n    <use id=\\\"CORNERS-l2-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(3, 1)\\\" style=\\\"fill: white\\\"/>\\n    <use id=\\\"CORNERS-l2-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(3, 2)\\\" style=\\\"fill: green\\\"/>\\n    <use id=\\\"CORNERS-l2-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(4, 2)\\\" style=\\\"fill: red\\\"/>\\n\\n    <use id=\\\"CORNERS-l3-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(2, 1)\\\" style=\\\"fill: white\\\"/>\\n    <use id=\\\"CORNERS-l3-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(1, 2)\\\" style=\\\"fill: orange\\\"/>\\n    <use id=\\\"CORNERS-l3-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(2, 2)\\\" style=\\\"fill: green\\\"/>\\n\\n    <use id=\\\"CORNERS-l4-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(3, 5)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"CORNERS-l4-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(6, 3)\\\" style=\\\"fill: blue\\\"/>\\n    <use id=\\\"CORNERS-l4-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(5, 3)\\\" style=\\\"fill: red\\\"/>\\n\\n    <use id=\\\"CORNERS-l5-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(3, 4)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"CORNERS-l5-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(4, 3)\\\" style=\\\"fill: red\\\"/>\\n    <use id=\\\"CORNERS-l5-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(3, 3)\\\" style=\\\"fill: green\\\"/>\\n\\n    <use id=\\\"CORNERS-l6-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(2, 4)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"CORNERS-l6-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(2, 3)\\\" style=\\\"fill: green\\\"/>\\n    <use id=\\\"CORNERS-l6-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(1, 3)\\\" style=\\\"fill: orange\\\"/>\\n\\n    <use                    xlink:href=\\\"#sticker\\\" transform=\\\"translate(2, 5)\\\" style=\\\"fill: yellow\\\"/>\\n    <use                    xlink:href=\\\"#sticker\\\" transform=\\\"translate(0, 3)\\\" style=\\\"fill: orange\\\"/>\\n    <use                    xlink:href=\\\"#sticker\\\" transform=\\\"translate(7, 3)\\\" style=\\\"fill: blue\\\"/>\\n  </g>\\n\\n</svg>\",\n  },\n  \"3x3x3\": {\n\n    // Michael Reid 3x3x3 piece order + centers with orientation\n    name: \"3x3x3\",\n    orbits: {\n      EDGE: { numPieces: 12, orientations: 2 },\n      CORNER: { numPieces: 8, orientations: 3 },\n      CENTER: { numPieces: 6, orientations: 4 },\n    },\n    startPieces: {\n      EDGE: { permutation: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], orientation: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },\n      CORNER: { permutation: [0, 1, 2, 3, 4, 5, 6, 7], orientation: [0, 0, 0, 0, 0, 0, 0, 0] },\n      CENTER: { permutation: [0, 1, 2, 3, 4, 5], orientation: [0, 0, 0, 0, 0, 0] },\n    },\n    moves: {\n      U: {\n        EDGE: { permutation: [1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10, 11], orientation: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },\n        CORNER: { permutation: [1, 2, 3, 0, 4, 5, 6, 7], orientation: [0, 0, 0, 0, 0, 0, 0, 0] },\n        CENTER: { permutation: [0, 1, 2, 3, 4, 5], orientation: [1, 0, 0, 0, 0, 0] },\n      },\n      y: {\n        EDGE: { permutation: [1, 2, 3, 0, 5, 6, 7, 4, 10, 8, 11, 9], orientation: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1] },\n        CORNER: { permutation: [1, 2, 3, 0, 7, 4, 5, 6], orientation: [0, 0, 0, 0, 0, 0, 0, 0] },\n        CENTER: { permutation: [0, 2, 3, 4, 1, 5], orientation: [1, 0, 0, 0, 0, 3] },\n      },\n      x: {\n        EDGE: { permutation: [4, 8, 0, 9, 6, 10, 2, 11, 5, 7, 1, 3], orientation: [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0] },\n        CORNER: { permutation: [4, 0, 3, 5, 7, 6, 2, 1], orientation: [2, 1, 2, 1, 1, 2, 1, 2] },\n        CENTER: { permutation: [2, 1, 5, 3, 0, 4], orientation: [0, 3, 0, 1, 2, 2] },\n      },\n      // const moves: {move: string, def: string}[] = [\n      //   {move: \"L\", def: \"[y' x: U]\"},\n      //   {move: \"F\", def: \"[x: U]\"},\n      //   {move: \"R\", def: \"[y x: U]\"},\n      //   {move: \"B\", def: \"[x': U]\"},\n      //   {move: \"D\", def: \"[x2: U]\"},\n      //   {move: \"z\", def: \"[y: x]\"},\n      //   {move: \"M\", def: \"R L' x'\"},\n      //   {move: \"E\", def: \"[z': M]\"},\n      //   {move: \"S\", def: \"[y': M]\"},\n      //   {move: \"u\", def: \"D y\"},\n      //   {move: \"l\", def: \"R x'\"},\n      //   {move: \"f\", def: \"B z\"},\n      //   {move: \"r\", def: \"L x\"},\n      //   {move: \"b\", def: \"F z'\"},\n      //   {move: \"d\", def: \"U y'\"}\n      // ];\n      L: {\n        EDGE: { permutation: [0, 1, 2, 11, 4, 5, 6, 9, 8, 3, 10, 7], orientation: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },\n        CORNER: { permutation: [0, 1, 6, 2, 4, 3, 5, 7], orientation: [0, 0, 2, 1, 0, 2, 1, 0] },\n        CENTER: { permutation: [0, 1, 2, 3, 4, 5], orientation: [0, 1, 0, 0, 0, 0] },\n      },\n      F: {\n        EDGE: { permutation: [9, 1, 2, 3, 8, 5, 6, 7, 0, 4, 10, 11], orientation: [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0] },\n        CORNER: { permutation: [3, 1, 2, 5, 0, 4, 6, 7], orientation: [1, 0, 0, 2, 2, 1, 0, 0] },\n        CENTER: { permutation: [0, 1, 2, 3, 4, 5], orientation: [0, 0, 1, 0, 0, 0] },\n      },\n      R: {\n        EDGE: { permutation: [0, 8, 2, 3, 4, 10, 6, 7, 5, 9, 1, 11], orientation: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },\n        CORNER: { permutation: [4, 0, 2, 3, 7, 5, 6, 1], orientation: [2, 1, 0, 0, 1, 0, 0, 2] },\n        CENTER: { permutation: [0, 1, 2, 3, 4, 5], orientation: [0, 0, 0, 1, 0, 0] },\n      },\n      B: {\n        EDGE: { permutation: [0, 1, 10, 3, 4, 5, 11, 7, 8, 9, 6, 2], orientation: [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1] },\n        CORNER: { permutation: [0, 7, 1, 3, 4, 5, 2, 6], orientation: [0, 2, 1, 0, 0, 0, 2, 1] },\n        CENTER: { permutation: [0, 1, 2, 3, 4, 5], orientation: [0, 0, 0, 0, 1, 0] },\n      },\n      D: {\n        EDGE: { permutation: [0, 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 11], orientation: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },\n        CORNER: { permutation: [0, 1, 2, 3, 5, 6, 7, 4], orientation: [0, 0, 0, 0, 0, 0, 0, 0] },\n        CENTER: { permutation: [0, 1, 2, 3, 4, 5], orientation: [0, 0, 0, 0, 0, 1] },\n      },\n      z: {\n        EDGE: { permutation: [9, 3, 11, 7, 8, 1, 10, 5, 0, 4, 2, 6], orientation: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] },\n        CORNER: { permutation: [3, 2, 6, 5, 0, 4, 7, 1], orientation: [1, 2, 1, 2, 2, 1, 2, 1] },\n        CENTER: { permutation: [1, 5, 2, 0, 4, 3], orientation: [1, 1, 1, 1, 3, 1] },\n      },\n      M: {\n        EDGE: { permutation: [2, 1, 6, 3, 0, 5, 4, 7, 8, 9, 10, 11], orientation: [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0] },\n        CORNER: { permutation: [0, 1, 2, 3, 4, 5, 6, 7], orientation: [0, 0, 0, 0, 0, 0, 0, 0] },\n        CENTER: { permutation: [4, 1, 0, 3, 5, 2], orientation: [2, 0, 0, 0, 2, 0] },\n      },\n      E: {\n        EDGE: { permutation: [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 8, 10], orientation: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1] },\n        CORNER: { permutation: [0, 1, 2, 3, 4, 5, 6, 7], orientation: [0, 0, 0, 0, 0, 0, 0, 0] },\n        CENTER: { permutation: [0, 4, 1, 2, 3, 5], orientation: [0, 0, 0, 0, 0, 0] },\n      },\n      S: {\n        EDGE: { permutation: [0, 3, 2, 7, 4, 1, 6, 5, 8, 9, 10, 11], orientation: [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0] },\n        CORNER: { permutation: [0, 1, 2, 3, 4, 5, 6, 7], orientation: [0, 0, 0, 0, 0, 0, 0, 0] },\n        CENTER: { permutation: [1, 5, 2, 0, 4, 3], orientation: [1, 1, 0, 1, 0, 1] },\n      },\n      u: {\n        EDGE: { permutation: [1, 2, 3, 0, 4, 5, 6, 7, 10, 8, 11, 9], orientation: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1] },\n        CORNER: { permutation: [1, 2, 3, 0, 4, 5, 6, 7], orientation: [0, 0, 0, 0, 0, 0, 0, 0] },\n        CENTER: { permutation: [0, 2, 3, 4, 1, 5], orientation: [1, 0, 0, 0, 0, 0] },\n      },\n      l: {\n        EDGE: { permutation: [2, 1, 6, 11, 0, 5, 4, 9, 8, 3, 10, 7], orientation: [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0] },\n        CORNER: { permutation: [0, 1, 6, 2, 4, 3, 5, 7], orientation: [0, 0, 2, 1, 0, 2, 1, 0] },\n        CENTER: { permutation: [4, 1, 0, 3, 5, 2], orientation: [2, 1, 0, 0, 2, 0] },\n      },\n      f: {\n        EDGE: { permutation: [9, 3, 2, 7, 8, 1, 6, 5, 0, 4, 10, 11], orientation: [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0] },\n        CORNER: { permutation: [3, 1, 2, 5, 0, 4, 6, 7], orientation: [1, 0, 0, 2, 2, 1, 0, 0] },\n        CENTER: { permutation: [1, 5, 2, 0, 4, 3], orientation: [1, 1, 1, 1, 0, 1] },\n      },\n      r: {\n        EDGE: { permutation: [4, 8, 0, 3, 6, 10, 2, 7, 5, 9, 1, 11], orientation: [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0] },\n        CORNER: { permutation: [4, 0, 2, 3, 7, 5, 6, 1], orientation: [2, 1, 0, 0, 1, 0, 0, 2] },\n        CENTER: { permutation: [2, 1, 5, 3, 0, 4], orientation: [0, 0, 0, 1, 2, 2] },\n      },\n      b: {\n        EDGE: { permutation: [8, 5, 2, 1, 9, 7, 6, 3, 4, 0, 10, 11], orientation: [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0] },\n        CORNER: { permutation: [4, 1, 2, 0, 5, 3, 6, 7], orientation: [1, 0, 0, 2, 2, 1, 0, 0] },\n        CENTER: { permutation: [3, 0, 2, 5, 4, 1], orientation: [3, 3, 3, 3, 0, 3] },\n      },\n      d: {\n        EDGE: { permutation: [0, 1, 2, 3, 7, 4, 5, 6, 9, 11, 8, 10], orientation: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1] },\n        CORNER: { permutation: [0, 1, 2, 3, 5, 6, 7, 4], orientation: [0, 0, 0, 0, 0, 0, 0, 0] },\n        CENTER: { permutation: [0, 4, 1, 2, 3, 5], orientation: [0, 0, 0, 0, 0, 1] },\n      },\n    },\n    svg: \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.0//EN\\\"\\n       \\\"http://www.w3.org/TR/2001/REC-SVG-20050904/DTD/svg11.dtd\\\">\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" viewBox=\\\"0 0 490 370\\\" preserveAspectRatio=\\\"xMidYMid meet\\\">\\n  <defs>\\n  </defs>\\n  <title>3x3x3</title>\\n  <defs>\\n    <g id=\\\"sticker\\\">\\n        <rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"1\\\" height=\\\"1\\\" stroke=\\\"black\\\" stroke-width=\\\"0.04px\\\" />\\n    </g>\\n  </defs>\\n\\n<!--        0 1 2 3 4 5 6 7 8 9 10 11  -->\\n<!--        | | | | | | | | | | | |<-  -->\\n<!--    0 -       . . .                -->\\n<!--    1 -       . . .                -->\\n<!--    2 -       . . .                -->\\n<!--    3 - . . . . . . . . . . . .    -->\\n<!--    4 - . . . . . . . . . . . .    -->\\n<!--    5 - . . . . . . . . . . . .    -->\\n<!--    6 -       . . .                -->\\n<!--    7 -       . . .                -->\\n<!--    8 -       . . .                -->\\n\\n  <g id=\\\"puzzle\\\" transform=\\\"translate(5, 5) scale(40)\\\">\\n    <!-- CORNER -->\\n    <use id=\\\"CORNER-l0-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(5,  2)\\\" style=\\\"fill: white\\\"/>\\n    <use id=\\\"CORNER-l0-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(6,  3)\\\" style=\\\"fill: red\\\"/>\\n    <use id=\\\"CORNER-l0-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(5,  3)\\\" style=\\\"fill: green\\\"/>\\n\\n    <use id=\\\"CORNER-l1-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(5,  0)\\\" style=\\\"fill: white\\\"/>\\n    <use id=\\\"CORNER-l1-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(9,  3)\\\" style=\\\"fill: blue\\\"/>\\n    <use id=\\\"CORNER-l1-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(8,  3)\\\" style=\\\"fill: red\\\"/>\\n\\n    <use id=\\\"CORNER-l2-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(3,  0)\\\" style=\\\"fill: white\\\"/>\\n    <use id=\\\"CORNER-l2-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(0,  3)\\\" style=\\\"fill: orange\\\"/>\\n    <use id=\\\"CORNER-l2-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(11, 3)\\\" style=\\\"fill: blue\\\"/>\\n\\n    <use id=\\\"CORNER-l3-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(3,  2)\\\" style=\\\"fill: white\\\"/>\\n    <use id=\\\"CORNER-l3-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(3,  3)\\\" style=\\\"fill: green\\\"/>\\n    <use id=\\\"CORNER-l3-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(2,  3)\\\" style=\\\"fill: orange\\\"/>\\n\\n    <use id=\\\"CORNER-l4-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(5,  6)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"CORNER-l4-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(5,  5)\\\" style=\\\"fill: green\\\"/>\\n    <use id=\\\"CORNER-l4-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(6,  5)\\\" style=\\\"fill: red\\\"/>\\n\\n    <use id=\\\"CORNER-l5-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(3,  6)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"CORNER-l5-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(2,  5)\\\" style=\\\"fill: orange\\\"/>\\n    <use id=\\\"CORNER-l5-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(3,  5)\\\" style=\\\"fill: green\\\"/>\\n\\n    <use id=\\\"CORNER-l6-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(3,  8)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"CORNER-l6-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(11, 5)\\\" style=\\\"fill: blue\\\"/>\\n    <use id=\\\"CORNER-l6-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(0, 5)\\\"  style=\\\"fill: orange\\\"/>\\n\\n    <use id=\\\"CORNER-l7-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(5,  8)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"CORNER-l7-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(8,  5)\\\" style=\\\"fill: red\\\"/>\\n    <use id=\\\"CORNER-l7-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(9,  5)\\\" style=\\\"fill: blue\\\"/>\\n\\n    <!-- EDGE -->\\n    <use id=\\\"EDGE-l0-o0\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(4,  2)\\\" style=\\\"fill: white\\\"/>\\n    <use id=\\\"EDGE-l0-o1\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(4,  3)\\\" style=\\\"fill: green\\\"/>\\n\\n    <use id=\\\"EDGE-l1-o0\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(5,  1)\\\" style=\\\"fill: white\\\"/>\\n    <use id=\\\"EDGE-l1-o1\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(7,  3)\\\" style=\\\"fill: red\\\"/>\\n\\n    <use id=\\\"EDGE-l2-o0\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(4,  0)\\\" style=\\\"fill: white\\\"/>\\n    <use id=\\\"EDGE-l2-o1\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(10, 3)\\\" style=\\\"fill: blue\\\"/>\\n\\n    <use id=\\\"EDGE-l3-o0\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(3,  1)\\\" style=\\\"fill: white\\\"/>\\n    <use id=\\\"EDGE-l3-o1\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(1,  3)\\\" style=\\\"fill: orange\\\"/>\\n\\n    <use id=\\\"EDGE-l4-o0\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(4,  6)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"EDGE-l4-o1\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(4,  5)\\\" style=\\\"fill: green\\\"/>\\n\\n    <use id=\\\"EDGE-l5-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(5,  7)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"EDGE-l5-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(7,  5)\\\" style=\\\"fill: red\\\"/>\\n\\n    <use id=\\\"EDGE-l6-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(4,  8)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"EDGE-l6-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(10, 5)\\\" style=\\\"fill: blue\\\"/>\\n\\n    <use id=\\\"EDGE-l7-o0\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(3,  7)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"EDGE-l7-o1\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(1,  5)\\\" style=\\\"fill: orange\\\"/>\\n\\n    <use id=\\\"EDGE-l8-o0\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(5,  4)\\\" style=\\\"fill: green\\\"/>\\n    <use id=\\\"EDGE-l8-o1\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(6,  4)\\\" style=\\\"fill: red\\\"/>\\n\\n    <use id=\\\"EDGE-l9-o0\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(3,  4)\\\" style=\\\"fill: green\\\"/>\\n    <use id=\\\"EDGE-l9-o1\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(2,  4)\\\" style=\\\"fill: orange\\\"/>\\n\\n    <use id=\\\"EDGE-l10-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(9,  4)\\\" style=\\\"fill: blue\\\"/>\\n    <use id=\\\"EDGE-l10-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(8,  4)\\\" style=\\\"fill: red\\\"/>\\n\\n    <use id=\\\"EDGE-l11-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(11, 4)\\\" style=\\\"fill: blue\\\"/>\\n    <use id=\\\"EDGE-l11-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(0,  4)\\\" style=\\\"fill: orange\\\"/>\\n\\n    <!-- CENTER -->\\n    <!-- TODO: Allow the same sticker to be reused for multiple orientations -->\\n    <use id=\\\"CENTER-l0-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(4,  1)\\\" style=\\\"fill: white\\\"/>\\n    <use id=\\\"CENTER-l0-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(4,  1)\\\" style=\\\"fill: white\\\"/>\\n    <use id=\\\"CENTER-l0-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(4,  1)\\\" style=\\\"fill: white\\\"/>\\n    <use id=\\\"CENTER-l0-o3\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(4,  1)\\\" style=\\\"fill: white\\\"/>\\n\\n    <use id=\\\"CENTER-l1-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(1,  4)\\\" style=\\\"fill: orange\\\"/>\\n    <use id=\\\"CENTER-l1-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(1,  4)\\\" style=\\\"fill: orange\\\"/>\\n    <use id=\\\"CENTER-l1-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(1,  4)\\\" style=\\\"fill: orange\\\"/>\\n    <use id=\\\"CENTER-l1-o3\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(1,  4)\\\" style=\\\"fill: orange\\\"/>\\n\\n    <use id=\\\"CENTER-l2-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(4,  4)\\\" style=\\\"fill: green\\\"/>\\n    <use id=\\\"CENTER-l2-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(4,  4)\\\" style=\\\"fill: green\\\"/>\\n    <use id=\\\"CENTER-l2-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(4,  4)\\\" style=\\\"fill: green\\\"/>\\n    <use id=\\\"CENTER-l2-o3\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(4,  4)\\\" style=\\\"fill: green\\\"/>\\n\\n    <use id=\\\"CENTER-l3-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(7,  4)\\\" style=\\\"fill: red\\\"/>\\n    <use id=\\\"CENTER-l3-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(7,  4)\\\" style=\\\"fill: red\\\"/>\\n    <use id=\\\"CENTER-l3-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(7,  4)\\\" style=\\\"fill: red\\\"/>\\n    <use id=\\\"CENTER-l3-o3\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(7,  4)\\\" style=\\\"fill: red\\\"/>\\n\\n    <use id=\\\"CENTER-l4-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(10, 4)\\\" style=\\\"fill: blue\\\"/>\\n    <use id=\\\"CENTER-l4-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(10, 4)\\\" style=\\\"fill: blue\\\"/>\\n    <use id=\\\"CENTER-l4-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(10, 4)\\\" style=\\\"fill: blue\\\"/>\\n    <use id=\\\"CENTER-l4-o3\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(10, 4)\\\" style=\\\"fill: blue\\\"/>\\n\\n    <use id=\\\"CENTER-l5-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(4,  7)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"CENTER-l5-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(4,  7)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"CENTER-l5-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(4,  7)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"CENTER-l5-o3\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(4,  7)\\\" style=\\\"fill: yellow\\\"/>\\n  </g>\\n\\n</svg>\\n\",\n  },\n  \"pyram\": {\n    name: \"pyram\",\n    orbits: {\n      CENTERS: { numPieces: 4, orientations: 3 },\n      TIPS: { numPieces: 4, orientations: 3 },\n      EDGES: { numPieces: 6, orientations: 2 },\n    },\n    startPieces: {\n      CENTERS: { permutation: [0, 1, 2, 3], orientation: [0, 0, 0, 0] },\n      TIPS: { permutation: [0, 1, 2, 3], orientation: [0, 0, 0, 0] },\n      EDGES: { permutation: [0, 1, 2, 3, 4, 5], orientation: [0, 0, 0, 0, 0, 0] },\n    },\n    moves: {\n      U: {\n        CENTERS: { permutation: [0, 1, 2, 3], orientation: [1, 0, 0, 0] },\n        TIPS: { permutation: [0, 1, 2, 3], orientation: [1, 0, 0, 0] },\n        EDGES: { permutation: [1, 2, 0, 3, 4, 5], orientation: [1, 0, 1, 0, 0, 0] },\n      },\n      L: {\n        CENTERS: { permutation: [0, 1, 2, 3], orientation: [0, 1, 0, 0] },\n        TIPS: { permutation: [0, 1, 2, 3], orientation: [0, 1, 0, 0] },\n        EDGES: { permutation: [5, 1, 2, 0, 4, 3], orientation: [1, 0, 0, 0, 0, 1] },\n      },\n      R: {\n        CENTERS: { permutation: [0, 1, 2, 3], orientation: [0, 0, 1, 0] },\n        TIPS: { permutation: [0, 1, 2, 3], orientation: [0, 0, 1, 0] },\n        EDGES: { permutation: [0, 3, 2, 4, 1, 5], orientation: [0, 0, 0, 1, 1, 0] },\n      },\n      B: {\n        CENTERS: { permutation: [0, 1, 2, 3], orientation: [0, 0, 0, 1] },\n        TIPS: { permutation: [0, 1, 2, 3], orientation: [0, 0, 0, 1] },\n        EDGES: { permutation: [0, 1, 4, 3, 5, 2], orientation: [0, 0, 0, 0, 1, 1] },\n      },\n      u: {\n        CENTERS: { permutation: [0, 1, 2, 3], orientation: [0, 0, 0, 0] },\n        TIPS: { permutation: [0, 1, 2, 3], orientation: [1, 0, 0, 0] },\n        EDGES: { permutation: [0, 1, 2, 3, 4, 5], orientation: [0, 0, 0, 0, 0, 0] },\n      },\n      l: {\n        CENTERS: { permutation: [0, 1, 2, 3], orientation: [0, 0, 0, 0] },\n        TIPS: { permutation: [0, 1, 2, 3], orientation: [0, 1, 0, 0] },\n        EDGES: { permutation: [0, 1, 2, 3, 4, 5], orientation: [0, 0, 0, 0, 0, 0] },\n      },\n      r: {\n        CENTERS: { permutation: [0, 1, 2, 3], orientation: [0, 0, 0, 0] },\n        TIPS: { permutation: [0, 1, 2, 3], orientation: [0, 0, 1, 0] },\n        EDGES: { permutation: [0, 1, 2, 3, 4, 5], orientation: [0, 0, 0, 0, 0, 0] },\n      },\n      b: {\n        CENTERS: { permutation: [0, 1, 2, 3], orientation: [0, 0, 0, 0] },\n        TIPS: { permutation: [0, 1, 2, 3], orientation: [0, 0, 0, 1] },\n        EDGES: { permutation: [0, 1, 2, 3, 4, 5], orientation: [0, 0, 0, 0, 0, 0] },\n      },\n    },\n    svg: \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.0//EN\\\"\\n       \\\"http://www.w3.org/TR/2001/REC-SVG-20050904/DTD/svg11.dtd\\\">\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" viewBox=\\\"0 0 490 420.69219392\\\" preserveAspectRatio=\\\"xMidYMid meet\\\">\\n  <defs>\\n  </defs>\\n  <title>2x2x2</title>\\n  <defs>\\n    <g id=\\\"stickerA\\\" transform=\\\"scale(1, 0.577350269)\\\">\\n      <path\\n         d=\\\"m 0,1.732050808 1,-1.732050808 1,1.732050808 z\\\"\\n         stroke=\\\"black\\\" stroke-width=\\\"0.04px\\\" stroke-linecap=\\\"butt\\\" stroke-linejoin=\\\"round\\\"\\n      />\\n    </g>\\n    <g id=\\\"stickerV\\\" transform=\\\"scale(1, 0.577350269)\\\">\\n      <path\\n         d=\\\"m 0,0 1,1.732050808 1,-1.732050808 z\\\"\\n         stroke=\\\"black\\\" stroke-width=\\\"0.04px\\\" stroke-linecap=\\\"butt\\\" stroke-linejoin=\\\"round\\\"\\n      />\\n    </g>\\n  </defs>\\n\\n<!--        0 1 2 3 4 5 6 7 8 9 10   -->\\n<!--        | | | | | | | | | | |    -->\\n<!--    0 - L L L L L F R R R R R    -->\\n<!--    1 -   L L L F F F R R R      -->\\n<!--    2 -     L F F F F F R        -->\\n<!--    3 -       D D D D D          -->\\n<!--    4 -         D D D            -->\\n<!--    5 -           D              -->\\n\\n  <g id=\\\"puzzle\\\" transform=\\\"translate(5, 5) scale(40, 69.28203232)\\\">\\n    <!-- CENTERS -->\\n    <use id=\\\"CENTERS-l0-o0\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(5, 1)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"CENTERS-l0-o1\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(3, 0)\\\" style=\\\"fill: blue\\\"/>\\n    <use id=\\\"CENTERS-l0-o2\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(7, 0)\\\" style=\\\"fill: red\\\"/>\\n\\n    <use id=\\\"CENTERS-l1-o0\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(4, 2)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"CENTERS-l1-o1\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(4, 3)\\\" style=\\\"fill: green\\\"/>\\n    <use id=\\\"CENTERS-l1-o2\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(2, 1)\\\" style=\\\"fill: blue\\\"/>\\n\\n    <use id=\\\"CENTERS-l2-o0\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(6, 2)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"CENTERS-l2-o1\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(8, 1)\\\" style=\\\"fill: red\\\"/>\\n    <use id=\\\"CENTERS-l2-o2\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(6, 3)\\\" style=\\\"fill: green\\\"/>\\n\\n    <use id=\\\"CENTERS-l3-o0\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(9, 0)\\\" style=\\\"fill: red\\\"/>\\n    <use id=\\\"CENTERS-l3-o1\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(1, 0)\\\" style=\\\"fill: blue\\\"/>\\n    <use id=\\\"CENTERS-l3-o2\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(5, 4)\\\" style=\\\"fill: green\\\"/>\\n\\n    <!-- TIPS -->\\n    <use id=\\\"TIPS-l0-o0\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(5, 0)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"TIPS-l0-o1\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(4, 0)\\\" style=\\\"fill: blue\\\"/>\\n    <use id=\\\"TIPS-l0-o2\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(6, 0)\\\" style=\\\"fill: red\\\"/>\\n\\n    <use id=\\\"TIPS-l1-o0\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(3, 2)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"TIPS-l1-o1\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(3, 3)\\\" style=\\\"fill: green\\\"/>\\n    <use id=\\\"TIPS-l1-o2\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(2, 2)\\\" style=\\\"fill: blue\\\"/>\\n\\n    <use id=\\\"TIPS-l2-o0\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(8, 2)\\\" style=\\\"fill: red\\\"/>\\n    <use id=\\\"TIPS-l2-o1\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(7, 3)\\\" style=\\\"fill: green\\\"/>\\n    <use id=\\\"TIPS-l2-o2\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(7, 2)\\\" style=\\\"fill: yellow\\\"/>\\n\\n    <use id=\\\"TIPS-l3-o0\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(10,0)\\\" style=\\\"fill: red\\\"/>\\n    <use id=\\\"TIPS-l3-o1\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(0, 0)\\\" style=\\\"fill: blue\\\"/>\\n    <use id=\\\"TIPS-l3-o2\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(5, 5)\\\" style=\\\"fill: green\\\"/>\\n\\n    <!-- EDGES -->\\n    <use id=\\\"EDGES-l0-o0\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(4, 1)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"EDGES-l0-o1\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(3, 1)\\\" style=\\\"fill: blue\\\"/>\\n\\n    <use id=\\\"EDGES-l1-o0\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(6, 1)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"EDGES-l1-o1\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(7, 1)\\\" style=\\\"fill: red\\\"/>\\n\\n    <use id=\\\"EDGES-l2-o0\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(8, 0)\\\" style=\\\"fill: red\\\"/>\\n    <use id=\\\"EDGES-l2-o1\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(2, 0)\\\" style=\\\"fill: blue\\\"/>\\n\\n    <use id=\\\"EDGES-l3-o0\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(5, 3)\\\" style=\\\"fill: green\\\"/>\\n    <use id=\\\"EDGES-l3-o1\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(5, 2)\\\" style=\\\"fill: yellow\\\"/>\\n\\n    <use id=\\\"EDGES-l4-o0\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(6, 4)\\\" style=\\\"fill: green\\\"/>\\n    <use id=\\\"EDGES-l4-o1\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(9, 1)\\\" style=\\\"fill: red\\\"/>\\n\\n    <use id=\\\"EDGES-l5-o0\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(4, 4)\\\" style=\\\"fill: green\\\"/>\\n    <use id=\\\"EDGES-l5-o1\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(1, 1)\\\" style=\\\"fill: blue\\\"/>\\n  </g>\\n\\n</svg>\",\n  },\n  \"sq1\": {\n    name: \"sq1\",\n    orbits: { WEDGE: { numPieces: 24, orientations: 9 }, EQUATOR: { numPieces: 2, orientations: 6 } },\n    startPieces: {\n      WEDGE: { permutation: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], orientation: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },\n      EQUATOR: { permutation: [0, 1], orientation: [0, 0] },\n    },\n    moves: {\n      U: {\n        WEDGE: { permutation: [11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], orientation: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },\n        EQUATOR: { permutation: [0, 1], orientation: [0, 0] },\n      },\n      D: {\n        WEDGE: { permutation: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 23, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], orientation: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },\n        EQUATOR: { permutation: [0, 1], orientation: [0, 0] },\n      },\n      SLICE: {\n        WEDGE: { permutation: [0, 1, 2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 6, 7, 8, 9, 10, 11, 18, 19, 20, 21, 22, 23], orientation: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] },\n        EQUATOR: { permutation: [0, 1], orientation: [0, 3] },\n      },\n    },\n    svg: sq1SVG,\n  },\n};\n","// Workaround per https://github.com/pegjs/pegjs/pull/481\nimport parser from \"./parser.pegjs\";\nconst {parse} = parser;\nexport {parse};\n","import { KPuzzleDefinition, Transformation } from \"./definition_types\";\n\nconst xmlns = \"http://www.w3.org/2000/svg\";\n\n// Unique ID mechanism to keep SVG gradient element IDs unique. TODO: Is there\n// something more performant, and that can't be broken by other elements of the\n// page? (And also doesn't break if this library is run in parallel.)\nlet svgCounter = 0;\nfunction nextSVGID(): string {\n  svgCounter += 1;\n  return \"svg\" + svgCounter.toString();\n}\n\nexport class SVG {\n  public element: HTMLElement;\n  public gradientDefs: SVGDefsElement;\n  private originalColors: { [type: string]: string } = {};\n  private gradients: { [type: string]: SVGGradientElement } = {};\n  private svgID: string;\n  constructor(public kPuzzleDefinition: KPuzzleDefinition) {\n    if (!kPuzzleDefinition.svg) {\n      throw new Error(`No SVG definition for puzzle type: ${kPuzzleDefinition.name}`);\n    }\n\n    this.svgID = nextSVGID();\n\n    this.element = document.createElement(\"div\");\n    this.element.classList.add(\"svg-wrapper\");\n    // TODO: Sanitization.\n    this.element.innerHTML = kPuzzleDefinition.svg;\n\n    const svgElem = this.element.querySelector(\"svg\");\n    if (!svgElem) {\n      throw new Error(\"Could not get SVG element\");\n    }\n    if (xmlns !== svgElem.namespaceURI) {\n      throw new Error(\"Unexpected XML namespace\");\n    }\n    this.gradientDefs = document.createElementNS(xmlns, \"defs\") as SVGDefsElement;\n    svgElem.insertBefore(this.gradientDefs, svgElem.firstChild);\n\n    for (const orbitName in kPuzzleDefinition.orbits) {\n      const orbitDefinition = kPuzzleDefinition.orbits[orbitName];\n\n      for (let idx = 0; idx < orbitDefinition.numPieces; idx++) {\n        for (let orientation = 0; orientation < orbitDefinition.orientations; orientation++) {\n          const id = this.elementID(orbitName, idx, orientation);\n          const elem = this.elementByID(id);\n          const originalColor = elem.style.fill as string;\n          this.originalColors[id] = originalColor;\n          this.gradients[id] = this.newGradient(id, originalColor);\n          this.gradientDefs.appendChild(this.gradients[id]);\n          elem.setAttribute(\"style\", `fill: url(#grad-${this.svgID}-${id})`);\n        }\n      }\n    }\n  }\n\n  // TODO: save definition in the constructor?\n  public draw(definition: KPuzzleDefinition, state: Transformation, nextState?: Transformation, fraction?: number): void {\n    for (const orbitName in definition.orbits) {\n      const orbitDefinition = definition.orbits[orbitName];\n\n      const curOrbitState = state[orbitName];\n      const nextOrbitState = nextState ? (nextState as Transformation)[orbitName] : null;\n      for (let idx = 0; idx < orbitDefinition.numPieces; idx++) {\n        for (let orientation = 0; orientation < orbitDefinition.orientations; orientation++) {\n          const id = this.elementID(orbitName, idx, orientation);\n          const fromCur = this.elementID(\n            orbitName,\n            curOrbitState.permutation[idx],\n            (orbitDefinition.orientations - curOrbitState.orientation[idx] + orientation) % orbitDefinition.orientations,\n          );\n          let singleColor = false;\n          if (nextOrbitState) {\n            const fromNext = this.elementID(\n              orbitName,\n              nextOrbitState.permutation[idx],\n              (orbitDefinition.orientations - nextOrbitState.orientation[idx] + orientation) % orbitDefinition.orientations,\n            );\n            if (fromCur === fromNext) {\n              singleColor = true; // TODO: Avoid redundant work during move.\n            }\n            fraction = fraction || 0; // TODO Use the type system to tie this to nextState?\n            const easedBackwardsPercent = 100 * (1 - fraction * fraction * (2 - fraction * fraction)); // TODO: Move easing up the stack.\n            this.gradients[id].children[0].setAttribute(\"stop-color\", this.originalColors[fromCur]);\n            this.gradients[id].children[1].setAttribute(\"stop-color\", this.originalColors[fromCur]);\n            this.gradients[id].children[1].setAttribute(\"offset\", `${Math.max(easedBackwardsPercent - 5, 0)}%`);\n            this.gradients[id].children[2].setAttribute(\"offset\", `${Math.max(easedBackwardsPercent - 5, 0)}%`);\n            this.gradients[id].children[3].setAttribute(\"offset\", `${easedBackwardsPercent}%`);\n            this.gradients[id].children[4].setAttribute(\"offset\", `${easedBackwardsPercent}%`);\n            this.gradients[id].children[4].setAttribute(\"stop-color\", this.originalColors[fromNext]);\n            this.gradients[id].children[5].setAttribute(\"stop-color\", this.originalColors[fromNext]);\n          } else {\n            singleColor = true; // TODO: Avoid redundant work during move.\n          }\n          if (singleColor) {\n            this.gradients[id].children[0].setAttribute(\"stop-color\", this.originalColors[fromCur]);\n            this.gradients[id].children[1].setAttribute(\"stop-color\", this.originalColors[fromCur]);\n            this.gradients[id].children[1].setAttribute(\"offset\", `100%`);\n            this.gradients[id].children[2].setAttribute(\"offset\", `100%`);\n            this.gradients[id].children[3].setAttribute(\"offset\", `100%`);\n            this.gradients[id].children[4].setAttribute(\"offset\", `100%`);\n          }\n          // this.gradients[id]\n          // this.elementByID(id).style.fill = this.originalColors[from];\n        }\n      }\n    }\n  }\n\n  private newGradient(id: string, originalColor: string): SVGGradientElement {\n    const grad = document.createElementNS(xmlns, \"radialGradient\") as SVGGradientElement;\n    grad.setAttribute(\"id\", `grad-${this.svgID}-${id}`);\n    grad.setAttribute(\"r\", `70.7107%`); // TODO: Adapt to puzzle.\n    const stopDefs = [\n      { offset: 0, color: originalColor },\n      { offset: 0, color: originalColor },\n      { offset: 0, color: \"black\" },\n      { offset: 0, color: \"black\" },\n      { offset: 0, color: originalColor },\n      { offset: 100, color: originalColor },\n    ];\n    for (const stopDef of stopDefs) {\n      const stop = document.createElementNS(xmlns,\n        \"stop\") as SVGStopElement;\n      stop.setAttribute(\"offset\", `${stopDef.offset}%`);\n      stop.setAttribute(\"stop-color\", stopDef.color);\n      stop.setAttribute(\"stop-opacity\", \"1\");\n      grad.appendChild(stop);\n    }\n    return grad;\n  }\n\n  private elementID(orbitName: string, idx: number, orientation: number): string {\n    return orbitName + \"-l\" + idx + \"-o\" + orientation;\n  }\n\n  private elementByID(id: string): HTMLElement {\n    // TODO: Use classes and scope selector to SVG element.\n    return this.element.querySelector(\"#\" + id) as HTMLElement;\n  }\n}\n","import { Quaternion, Vector3 } from \"three\";\nimport { MoveEvent, OrientationEvent } from \"./bluetooth-puzzle\";\n\n// TODO: Combine orientation and moves into a single event to handle quaternion remapping.\nexport interface StreamTransformer {\n  // Modifies the input.\n  transformMove(moveEvent: MoveEvent): void;\n\n  // Modifies the input.\n  transformOrientation(orientationEvent: OrientationEvent): void;\n}\n\nfunction maxAxis(v: Vector3): string {\n  const maxVal = Math.max(Math.abs(v.x), Math.abs(v.y), Math.abs(v.z));\n  switch (maxVal) {\n    case v.x:\n      return \"x\";\n    case -v.x:\n      return \"-x\";\n    case v.y:\n      return \"y\";\n    case -v.y:\n      return \"-y\";\n    case v.z:\n      return \"z\";\n    case -v.z:\n      return \"-z\";\n    default:\n      throw new Error(\"Uh-oh.\");\n  }\n}\n\nconst s2 = Math.sqrt(0.5);\n\nconst m: { [s: string]: Quaternion } = {\n  \"y z\": new Quaternion(0, 0, 0, 1),\n  \"-z y\": new Quaternion(s2, 0, 0, s2),\n  \"x z\": new Quaternion(0, 0, -s2, s2),\n  \"-x z\": new Quaternion(0, 0, s2, s2),\n};\n\nexport class BasicRotationTransformer implements StreamTransformer {\n  // private reorientQuat = new Quaternion();\n\n  public transformMove(moveEvent: MoveEvent): void {\n    // Nothing to do.\n  }\n  public transformOrientation(orientationEvent: OrientationEvent): void {\n    const { x, y, z, w } = orientationEvent.quaternion;\n    const quat = new Quaternion(x, y, z, w);\n\n    const U = new Vector3(0, 1, 0);\n    const F = new Vector3(0, 0, 1);\n    const maxU = maxAxis(U.applyQuaternion(quat));\n    const maxF = maxAxis(F.applyQuaternion(quat));\n\n    const oriQuat = m[`${maxU} ${maxF}`] || m[\"y z\"];\n\n    console.log(quat);\n    console.log(oriQuat);\n    const q2 = quat.premultiply(oriQuat);\n\n    // console.log(maxAxis(U.applyQuaternion(quat)), maxAxis(F.applyQuaternion(quat)));\n    console.log(q2);\n\n    orientationEvent.quaternion = {\n      x: q2.x,\n      y: q2.y,\n      z: q2.z,\n      w: q2.w,\n    };\n\n    console.log(orientationEvent.quaternion);\n  }\n}\n","import { BlockMove } from \"../alg\";\nimport { Transformation } from \"../kpuzzle\";\nimport { BasicRotationTransformer, StreamTransformer } from \"./transformer\";\n\n/******** BluetoothPuzzle ********/\n\n// TODO: Make compatible with Twisty.\nexport type PuzzleState = Transformation;\n\n// TODO: Use actual `CustomEvent`s?\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\nexport class MoveEvent {\n  public latestMove: BlockMove;\n  public timeStamp: number;\n  public debug?: object;\n  public state?: PuzzleState;\n  public quaternion?: any; // TODO: Unused\n}\n\n// TODO: Only use the `quaternion` field in the `MoveEvent`?\nexport class OrientationEvent {\n  public quaternion: { x: number, y: number, z: number, w: number };\n  public timeStamp: number;\n  public debug?: object;\n}\n\nexport interface BluetoothConfig {\n  filters: BluetoothRequestDeviceFilter[];\n  optionalServices: BluetoothServiceUUID[];\n}\n\n// TODO: Expose device name (and/or globally unique identifier)?\nexport abstract class BluetoothPuzzle {\n  public transformers: StreamTransformer[] = [];\n  protected listeners: Array<(e: MoveEvent) => void> = []; // TODO: type\n  protected orientationListeners: Array<(e: OrientationEvent) => void> = []; // TODO: type\n\n  public abstract name(): string | undefined;\n\n  // TODO: require subclasses to implement this?\n  public async getState(): Promise<PuzzleState> {\n    throw new Error(\"cannot get state\");\n  }\n\n  public addMoveListener(listener: (e: MoveEvent) => void): void {\n    this.listeners.push(listener);\n  }\n\n  public addOrientationListener(listener: (e: OrientationEvent) => void): void {\n    this.orientationListeners.push(listener);\n  }\n\n  public experimentalAddBasicRotationTransformer(): void {\n    this.transformers.push(new BasicRotationTransformer());\n  }\n\n  protected dispatchMove(moveEvent: MoveEvent): void {\n    for (const transformer of this.transformers) {\n      transformer.transformMove(moveEvent);\n    }\n    for (const l of this.listeners) {\n      l(moveEvent);\n    }\n  }\n\n  protected dispatchOrientation(orientationEvent: OrientationEvent): void {\n    for (const transformer of this.transformers) {\n      transformer.transformOrientation(orientationEvent);\n    }\n    for (const l of this.orientationListeners) {\n      // TODO: Convert quaternion.\n      l(orientationEvent);\n    }\n  }\n\n}\n","let DEBUG_LOGGING_ENABLED = true;\n\nexport function enableDebugLogging(enable: boolean): void {\n  DEBUG_LOGGING_ENABLED = enable;\n}\n\nexport function debugLog(...args: any[]): void {\n  if (!DEBUG_LOGGING_ENABLED) {\n    return;\n  }\n\n  if (console.info) {\n    console.info.apply(console, args);\n  } else {\n    console.log.apply(console, args);\n  }\n}\n","const blockSize = 16;\nconst zeros = new Uint8Array(blockSize);\nconst paddingBlockPlaintext = new Uint8Array(new Array(blockSize).fill(blockSize));\nconst AES_CBC = \"AES-CBC\";\n\nexport async function importKey(keyBytes: ArrayBuffer): Promise<CryptoKey> {\n  return await crypto.subtle.importKey(\n    \"raw\",\n    keyBytes,\n    AES_CBC,\n    true,\n    [\"encrypt\", \"decrypt\"],\n  );\n}\n\nasync function unsafeEncryptBlockWithIV(key: CryptoKey, plaintextBlock: ArrayBuffer, iv: ArrayBuffer): Promise<ArrayBuffer> {\n  return (await window.crypto.subtle.encrypt(\n    {\n      name: AES_CBC,\n      iv,\n    },\n    key,\n    plaintextBlock,\n  )).slice(0, blockSize);\n}\n\nexport async function unsafeEncryptBlock(key: CryptoKey, plaintextBlock: ArrayBuffer): Promise<ArrayBuffer> {\n  return (await unsafeEncryptBlockWithIV(key, plaintextBlock, zeros)).slice(0, blockSize);\n}\n\nexport async function unsafeDecryptBlock(key: CryptoKey, ciphertextBlock: ArrayBuffer): Promise<ArrayBuffer> {\n  const paddingBlock = await unsafeEncryptBlockWithIV(\n    key,\n    paddingBlockPlaintext,\n    ciphertextBlock,\n  );\n\n  const cbcCiphertext = new Uint8Array(2 * blockSize);\n  cbcCiphertext.set(new Uint8Array(ciphertextBlock), 0);\n  cbcCiphertext.set(new Uint8Array(paddingBlock), blockSize);\n\n  return (await window.crypto.subtle.decrypt(\n    {\n      name: AES_CBC,\n      iv: zeros,\n    },\n    key,\n    cbcCiphertext,\n  )).slice(0, blockSize);\n}\n","/* tslint:disable no-bitwise */\n\nimport { Quaternion } from \"three\";\nimport { BareBlockMove, BlockMove } from \"../alg\";\nimport { KPuzzle, Puzzles } from \"../kpuzzle\";\nimport { BluetoothConfig, BluetoothPuzzle, PuzzleState } from \"./bluetooth-puzzle\";\nimport { debugLog } from \"./debug\";\nimport { importKey, unsafeDecryptBlock } from \"./unsafe-raw-aes\";\n\n// This needs to be short enough to capture 6 moves (OBQTM).\nconst DEFAULT_INTERVAL_MS = 150;\n// Number of latest moves provided by the Gan 356i.\nconst MAX_LATEST_MOVES = 6;\n\nconst ganMoveToBlockMove: { [i: number]: BlockMove } = {\n  0x00: BareBlockMove(\"U\"),\n  0x02: BareBlockMove(\"U\", -1),\n  0x03: BareBlockMove(\"R\"),\n  0x05: BareBlockMove(\"R\", -1),\n  0x06: BareBlockMove(\"F\"),\n  0x08: BareBlockMove(\"F\", -1),\n  0x09: BareBlockMove(\"D\"),\n  0x0b: BareBlockMove(\"D\", -1),\n  0x0c: BareBlockMove(\"L\"),\n  0x0e: BareBlockMove(\"L\", -1),\n  0x0f: BareBlockMove(\"B\"),\n  0x11: BareBlockMove(\"B\", -1),\n};\n\nlet homeQuatInverse: Quaternion | null = null;\n\nlet swap = (x: number, y: number, z: number) => {\n  return [-y, z, -x];\n};\n\n(window as any).setSwap = (fn: any) => {\n  swap = fn;\n  homeQuatInverse = null;\n};\n\nfunction probablyDecodedCorrectly(data: Uint8Array): boolean {\n  return data[13] < 0x12 && data[14] < 0x12 && data[15] < 0x12 && data[16] < 0x12 && data[17] < 0x12 && data[18] < 0x12;\n}\n\nconst key10 = new Uint8Array([198, 202, 21, 223, 79, 110, 19, 182, 119, 13, 230, 89, 58, 175, 186, 162]);\nconst key11 = new Uint8Array([67, 226, 91, 214, 125, 220, 120, 216, 7, 96, 163, 218, 130, 60, 1, 241]);\n\n// Clean-room reverse-engineered\nasync function decryptState(data: Uint8Array, key: Uint8Array, macAddress: Uint8Array): Promise<Uint8Array> {\n  // TODO: Read from puzzle.\n  const keyBuffer = new Uint8Array(key10);\n  for (let i = 0; i < macAddress.length; i++) {\n    keyBuffer[i] = (keyBuffer[i] + macAddress[i]) % 256;\n  }\n\n  const aesKey = await importKey(new Uint8Array(keyBuffer));\n  data.set(new Uint8Array(await unsafeDecryptBlock(aesKey, data.slice(3))), 3);\n  data.set(new Uint8Array(await unsafeDecryptBlock(aesKey, data.slice(0, 16))), 0);\n  return data;\n}\n\n// TODO: Support caching which decoding strategy worked last time.\nasync function decodeState(data: Uint8Array, macAddress: Uint8Array): Promise<Uint8Array> {\n  if (probablyDecodedCorrectly(data)) {\n    return data;\n  }\n  const decrypted10 = await decryptState(data, key10, macAddress);\n  if (probablyDecodedCorrectly(decrypted10)) {\n    return decrypted10;\n  }\n  const decrypted11 = await decryptState(data, key11, macAddress);\n  if (probablyDecodedCorrectly(decrypted11)) {\n    return decrypted11;\n  }\n  throw new Error(\"Unable to decode\");\n}\n\nclass PhysicalState {\n\n  public static async read(characteristic: BluetoothRemoteGATTCharacteristic, macAddress: Uint8Array): Promise<PhysicalState> {\n    const value = await decodeState(new Uint8Array((await characteristic.readValue()).buffer), macAddress);\n    const timeStamp = Date.now();\n    return new PhysicalState(new DataView(value.buffer), timeStamp);\n  }\n  private arr: Uint8Array;\n  private arrLen = 19;\n  private constructor(private dataView: DataView, public timeStamp: number) {\n    this.arr = new Uint8Array(dataView.buffer);\n    if (this.arr.length !== this.arrLen) {\n      throw new Error(\"Unexpected array length\");\n    }\n  }\n\n  public rotQuat(): Quaternion {\n    let x = this.dataView.getInt16(0, true) / 16384;\n    let y = this.dataView.getInt16(2, true) / 16384;\n    let z = this.dataView.getInt16(4, true) / 16384;\n    [x, y, z] = swap(x, y, z);\n    const wSquared = 1 - (x * x + y * y + z * z);\n    const w = wSquared > 0 ? Math.sqrt(wSquared) : 0;\n    const quat = new Quaternion(x, y, z, w);\n\n    if (!homeQuatInverse) {\n      homeQuatInverse = quat.clone().inverse();\n    }\n\n    return quat.clone().multiply(homeQuatInverse!.clone());\n  }\n\n  // Loops from 255 to 0.\n  public moveCounter(): number {\n    return this.arr[12];\n  }\n\n  public numMovesSince(previousMoveCounter: number): number {\n    return (this.moveCounter() - previousMoveCounter) & 0xff;\n  }\n\n  // Due to the design of the Gan356i protocol, it's common to query for the\n  // latest physical state and find 0 moves have been performed since the last\n  // query. Therefore, it's useful to allow 0 as an argument.\n  public latestMoves(n: number): BlockMove[] {\n    if (n < 0 || n > MAX_LATEST_MOVES) {\n      throw new Error(`Must ask for 0 to 6 latest moves. (Asked for ${n})`);\n    }\n    return Array.from(this.arr.slice(19 - n, 19)).map((i) => ganMoveToBlockMove[i]);\n  }\n\n  public debugInfo(): { arr: Uint8Array } {\n    return {\n      arr: this.arr,\n    };\n  }\n}\n\n// TODO: Short IDs\nconst UUIDs = {\n  ganCubeService: \"0000fff0-0000-1000-8000-00805f9b34fb\",\n  physicalStateCharacteristic: \"0000fff5-0000-1000-8000-00805f9b34fb\",\n  actualAngleAndBatteryCharacteristic: \"0000fff7-0000-1000-8000-00805f9b34fb\",\n  faceletStatus1Characteristic: \"0000fff2-0000-1000-8000-00805f9b34fb\",\n  faceletStatus2Characteristic: \"0000fff3-0000-1000-8000-00805f9b34fb\",\n};\n\nconst commands: { [cmd: string]: BufferSource } = {\n  reset: new Uint8Array([0x00, 0x00, 0x24, 0x00, 0x49, 0x92, 0x24, 0x49, 0x6d, 0x92, 0xdb, 0xb6, 0x49, 0x92, 0xb6, 0x24, 0x6d, 0xdb]),\n};\n\n// // TODO: Move this into a factory?\nexport const ganConfig: BluetoothConfig = {\n  filters: [\n    { namePrefix: \"GAN\" },\n  ],\n  optionalServices: [\n    UUIDs.ganCubeService,\n  ],\n};\n\nfunction buf2hex(buffer: ArrayBuffer): string { // buffer is an ArrayBuffer\n  return Array.prototype.map.call(new Uint8Array(buffer), (x: number) => (\"00\" + x.toString(16)).slice(-2)).join(\" \");\n}\n\nconst reidEdgeOrder = \"UF UR UB UL DF DR DB DL FR FL BR BL\".split(\" \");\nconst reidCornerOrder = \"UFR URB UBL ULF DRF DFL DLB DBR\".split(\" \");\n\ninterface PieceInfo {\n  piece: number;\n  orientation: number;\n}\n\nfunction rotateLeft(s: string, i: number): string {\n  return s.slice(i) + s.slice(0, i);\n}\n\nconst pieceMap: { [s: string]: PieceInfo } = {};\n// TODO: Condense the for loops.\nreidEdgeOrder.forEach((edge, idx) => {\n  for (let i = 0; i < 2; i++) {\n    pieceMap[rotateLeft(edge, i)] = { piece: idx, orientation: i };\n  }\n});\nreidCornerOrder.forEach((corner, idx) => {\n  for (let i = 0; i < 3; i++) {\n    pieceMap[rotateLeft(corner, i)] = { piece: idx, orientation: i };\n  }\n});\n\nconst gan356iCornerMappings = [\n  [0, 21, 15], [5, 13, 47], [7, 45, 39], [2, 37, 23],\n  [29, 10, 16], [31, 18, 32], [26, 34, 40], [24, 42, 8],\n];\n\nconst gan356iEdgeMappings = [\n  [1, 22], [3, 14], [6, 46], [4, 38],\n  [30, 17], [27, 9], [25, 41], [28, 33],\n  [19, 12], [20, 35], [44, 11], [43, 36],\n];\nconst faceOrder = \"URFDLB\";\n\n// TODO\n// class CharacteristicGetter {\n//   characteristics: {[s: string]: Promise<BluetoothRemoteGATTCharacteristic> | null}\n//   constructor(private service: BluetoothRemoteGATTService) {\n//   }\n\n//   // get()\n// }\n\nfunction getMacAddress(name: string): Uint8Array {\n  const macAddress = new Uint8Array([0x4c, 0x24, 0x98, 0x00, 0x00, 0x00]);\n  if (name.length !== 10 || !name.startsWith(\"GAN-\")) {\n    console.warn(\"Unexpected puzzle name.\");\n  }\n  macAddress[3] = parseInt(name.slice(4, 6), 16);\n  macAddress[4] = parseInt(name.slice(6, 8), 16);\n  macAddress[5] = parseInt(name.slice(8, 10), 16);\n  return macAddress;\n}\n\nexport class GanCube extends BluetoothPuzzle {\n  // We have to perform async operations before we call the constructor.\n  public static async connect(server: BluetoothRemoteGATTServer): Promise<GanCube> {\n    const macAddress = getMacAddress(server.device!.name!);\n\n    const ganCubeService = await server.getPrimaryService(UUIDs.ganCubeService);\n    debugLog(\"Service:\", ganCubeService);\n\n    const physicalStateCharacteristic = await ganCubeService.getCharacteristic(UUIDs.physicalStateCharacteristic);\n    debugLog(\"Characteristic:\", physicalStateCharacteristic);\n\n    const initialMoveCounter = (await PhysicalState.read(physicalStateCharacteristic, macAddress)).moveCounter();\n    debugLog(\"Initial Move Counter:\", initialMoveCounter);\n    const cube = new GanCube(ganCubeService, server, physicalStateCharacteristic, initialMoveCounter, macAddress);\n    return cube;\n  }\n\n  public INTERVAL_MS: number = DEFAULT_INTERVAL_MS;\n  private intervalHandle: number | null = null;\n  private kpuzzle: KPuzzle = new KPuzzle(Puzzles[\"3x3x3\"]);\n  private cachedFaceletStatus1Characteristic: Promise<BluetoothRemoteGATTCharacteristic>;\n  private cachedFaceletStatus2Characteristic: Promise<BluetoothRemoteGATTCharacteristic>;\n  private cachedActualAngleAndBatteryCharacteristic: Promise<BluetoothRemoteGATTCharacteristic>;\n  private constructor(private service: BluetoothRemoteGATTService, private server: BluetoothRemoteGATTServer, private physicalStateCharacteristic: BluetoothRemoteGATTCharacteristic, private lastMoveCounter: number, private macAddress: Uint8Array) {\n    super();\n    this.startTrackingMoves();\n  }\n\n  public name(): string | undefined {\n    return this.server.device.name;\n  }\n\n  public startTrackingMoves(): void {\n    // `window.setInterval` instead of `setInterval`:\n    // https://github.com/Microsoft/TypeScript/issues/842#issuecomment-252445883\n    this.intervalHandle = window.setInterval(this.intervalHandler.bind(this), this.INTERVAL_MS);\n  }\n\n  public stopTrackingMoves(): void {\n    if (!this.intervalHandle) {\n      throw new Error(\"Not tracking moves!\");\n    }\n    clearInterval(this.intervalHandle);\n    this.intervalHandle = null;\n  }\n\n  // TODO: Can we ever receive async responses out of order?\n  public async intervalHandler(): Promise<void> {\n    const physicalState = await PhysicalState.read(this.physicalStateCharacteristic, this.macAddress);\n    let numInterveningMoves = physicalState.numMovesSince(this.lastMoveCounter);\n    // console.log(numInterveningMoves);\n    if (numInterveningMoves > MAX_LATEST_MOVES) {\n      debugLog(`Too many moves! Dropping ${numInterveningMoves - MAX_LATEST_MOVES} moves`);\n      numInterveningMoves = MAX_LATEST_MOVES;\n    }\n    for (const move of physicalState.latestMoves(numInterveningMoves)) {\n      // console.log(move);\n      this.kpuzzle.applyBlockMove(move);\n      this.dispatchMove({\n        latestMove: move,\n        timeStamp: physicalState.timeStamp,\n        debug: physicalState.debugInfo(),\n        state: this.kpuzzle.state,\n        // quaternion: physicalState.rotQuat(),\n      });\n    }\n    const { x, y, z, w } = physicalState.rotQuat();\n    this.dispatchOrientation({\n      timeStamp: physicalState.timeStamp,\n      quaternion: { x, y, z, w },\n    });\n    this.lastMoveCounter = physicalState.moveCounter();\n  }\n\n  public async getBattery(): Promise<number> {\n    return new Uint8Array(await this.readActualAngleAndBatteryCharacteristic())[7];\n  }\n\n  public async getState(): Promise<PuzzleState> {\n    const arr: Uint8Array = await decodeState(new Uint8Array((await this.readFaceletStatus1Characteristic())), this.macAddress);\n    const stickers: number[] = [];\n    for (let i = 0; i < 18; i += 3) {\n      let v = (((arr[i ^ 1] << 8) + arr[(i + 1) ^ 1]) << 8) + arr[(i + 2) ^ 1];\n      for (let j = 0; j < 8; j++) {\n        stickers.push(v & 7);\n        v >>= 3;\n      }\n    }\n\n    const state: PuzzleState = {\n      CORNER: {\n        permutation: [],\n        orientation: [],\n      },\n      EDGE: {\n        permutation: [],\n        orientation: [],\n      },\n      CENTER: {\n        permutation: [0, 1, 2, 3, 4, 5],\n        orientation: [0, 0, 0, 0, 0, 0],\n      },\n    };\n\n    for (const cornerMapping of gan356iCornerMappings) {\n      const pieceInfo: PieceInfo = pieceMap[cornerMapping.map((i) => faceOrder[stickers[i]]).join(\"\")];\n      state.CORNER.permutation.push(pieceInfo.piece);\n      state.CORNER.orientation.push(pieceInfo.orientation);\n    }\n\n    for (const edgeMapping of gan356iEdgeMappings) {\n      const pieceInfo: PieceInfo = pieceMap[edgeMapping.map((i) => faceOrder[stickers[i]]).join(\"\")];\n      state.EDGE.permutation.push(pieceInfo.piece);\n      state.EDGE.orientation.push(pieceInfo.orientation);\n    }\n\n    return state;\n  }\n\n  public async faceletStatus1Characteristic(): Promise<BluetoothRemoteGATTCharacteristic> {\n    this.cachedFaceletStatus1Characteristic = this.cachedFaceletStatus1Characteristic || this.service.getCharacteristic(UUIDs.faceletStatus1Characteristic);\n    return this.cachedFaceletStatus1Characteristic;\n  }\n\n  public async faceletStatus2Characteristic(): Promise<BluetoothRemoteGATTCharacteristic> {\n    this.cachedFaceletStatus2Characteristic = this.cachedFaceletStatus2Characteristic || this.service.getCharacteristic(UUIDs.faceletStatus2Characteristic);\n    return this.cachedFaceletStatus2Characteristic;\n  }\n\n  public async actualAngleAndBatteryCharacteristic(): Promise<BluetoothRemoteGATTCharacteristic> {\n    this.cachedActualAngleAndBatteryCharacteristic = this.cachedActualAngleAndBatteryCharacteristic || this.service.getCharacteristic(UUIDs.actualAngleAndBatteryCharacteristic);\n    return this.cachedActualAngleAndBatteryCharacteristic;\n  }\n\n  public async reset(): Promise<void> {\n    const faceletStatus1Characteristic = await this.faceletStatus1Characteristic();\n    await faceletStatus1Characteristic.writeValue(commands.reset);\n  }\n\n  public async readFaceletStatus1Characteristic(): Promise<ArrayBuffer> {\n    const faceletStatus1Characteristic = await this.faceletStatus1Characteristic();\n    return (await faceletStatus1Characteristic.readValue()).buffer;\n  }\n\n  public async readFaceletStatus2Characteristic(): Promise<string> {\n    const faceletStatus2Characteristic = await this.faceletStatus2Characteristic();\n    return buf2hex((await faceletStatus2Characteristic.readValue()).buffer);\n  }\n\n  public async readActualAngleAndBatteryCharacteristic(): Promise<ArrayBuffer> {\n    const actualAngleAndBatteryCharacteristic = await this.actualAngleAndBatteryCharacteristic();\n    return (await actualAngleAndBatteryCharacteristic.readValue()).buffer;\n  }\n\n  // TODO\n  // private onphysicalStateCharacteristicChanged(event: any): void {\n  //   var val = event.target.value;\n  //   debugLog(val);\n  // }\n}\n","/* tslint:disable no-bitwise */\n\nimport { BareBlockMove, BlockMove } from \"../alg\";\nimport { Transformation } from \"../kpuzzle\";\nimport { BluetoothConfig, BluetoothPuzzle, PuzzleState } from \"./bluetooth-puzzle\";\nimport { debugLog } from \"./debug\";\n\nconst MESSAGE_LENGTH = 20;\n\nconst UUIDs = {\n  cubeService: \"0000aadb-0000-1000-8000-00805f9b34fb\",\n  cubeCharacteristic: \"0000aadc-0000-1000-8000-00805f9b34fb\",\n};\n\n// TODO: Move this into a factory?\nexport const giiKERConfig: BluetoothConfig = {\n  filters: [\n    // Known prefixes: GiC, GiS (3x3x3), Gi2 (2x2x2)\n    // Suspected prefixes GiY, Gi3\n    { namePrefix: \"Gi\" },\n    { services: [\"0000aadb-0000-1000-8000-00805f9b34fb\"] },\n    { services: [\"0000aaaa-0000-1000-8000-00805f9b34fb\"] },\n    { services: [\"0000fe95-0000-1000-8000-00805f9b34fb\"] },\n  ],\n  optionalServices: [\n    // \"00001530-1212-efde-1523-785feabcd123\",\n    // \"0000aaaa-0000-1000-8000-00805f9b34fb\",\n    UUIDs.cubeService,\n    // \"0000180f-0000-1000-8000-00805f9b34fb\",\n    // \"0000180a-0000-1000-8000-00805f9b34fb\"\n  ],\n};\n\n// TODO: Expose for testing.\nfunction giikerMoveToBlockMove(face: number, amount: number): BlockMove {\n  if (amount === 9) {\n    debugLog(\"Encountered 9\", face, amount);\n    amount = 2;\n  }\n  amount = [0, 1, 2, -1][amount];\n\n  const family = [\"?\", \"B\", \"D\", \"L\", \"U\", \"R\", \"F\"][face];\n  return BareBlockMove(family, amount);\n}\n\nexport { giikerMoveToBlockMove as giikerMoveToBlockMoveForTesting };\n\nfunction giikerStateStr(giikerState: number[]): string {\n  let str = \"\";\n  str += giikerState.slice(0, 8).join(\".\");\n  str += \"\\n\";\n  str += giikerState.slice(8, 16).join(\".\");\n  str += \"\\n\";\n  str += giikerState.slice(16, 28).join(\".\");\n  str += \"\\n\";\n  str += giikerState.slice(28, 32).join(\".\");\n  str += \"\\n\";\n  str += giikerState.slice(32, 40).join(\".\");\n  return str;\n}\n\n// TODO\n// const Reid333Orbits = {\n//   \"EDGE\":   {\"numPieces\": 12, \"orientations\": 2},\n//   \"CORNER\": {\"numPieces\": 8,  \"orientations\": 3},\n//   \"CENTER\": {\"numPieces\": 6,  \"orientations\": 4}\n// };\n\nconst Reid333SolvedCenters = {\n  permutation: [0, 1, 2, 3, 4, 5],\n  orientation: [0, 0, 0, 0, 0, 0],\n};\n\nconst epGiiKERtoReid333: number[] = [4, 8, 0, 9, 5, 1, 3, 7, 6, 10, 2, 11];\nconst epReid333toGiiKER: number[] = [2, 5, 10, 6, 0, 4, 8, 7, 1, 3, 9, 11];\n\nconst preEO: number[] = [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0];\nconst postEO: number[] = [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0];\n\nconst cpGiiKERtoReid333: number[] = [4, 0, 3, 5, 7, 1, 2, 6];\nconst cpReid333toGiiKER: number[] = [1, 5, 6, 2, 0, 3, 7, 4];\n\nconst preCO: number[] = [1, 2, 1, 2, 2, 1, 2, 1];\nconst postCO: number[] = [2, 1, 2, 1, 1, 2, 1, 2];\n\nconst coFlip: number[] = [-1, 1, -1, 1, 1, -1, 1, -1];\n\nfunction getNibble(val: Uint8Array, i: number): number {\n  if (i % 2 === 1) {\n    return val[(i / 2) | 0] % 16;\n  }\n  return 0 | (val[(i / 2) | 0] / 16);\n}\n\nfunction probablyEncrypted(data: Uint8Array): boolean {\n  return data[18] === 0xa7;\n}\n\nconst lookup = [176, 81, 104, 224, 86, 137, 237, 119, 38, 26, 193, 161, 210, 126, 150, 81, 93, 13, 236, 249, 89, 235, 88, 24, 113, 81, 214, 131, 130, 199, 2, 169, 39, 165, 171, 41];\n\nfunction decryptState(data: Uint8Array): Uint8Array {\n  const offset1 = getNibble(data, 38);\n  const offset2 = getNibble(data, 39);\n  const output = new Uint8Array(MESSAGE_LENGTH);\n  for (let i = 0; i < MESSAGE_LENGTH; i++) {\n    output[i] = data[i] + lookup[offset1 + i] + lookup[offset2 + i];\n  }\n  return output;\n}\n\n// TODO: Support caching which decoding strategy worked last time.\nasync function decodeState(data: Uint8Array): Promise<Uint8Array> {\n  if (!probablyEncrypted(data)) {\n    return data;\n  }\n  return await decryptState(data);\n  // TODO: Check that the decrypted state is a valid staet.\n}\n\nexport class GiiKERCube extends BluetoothPuzzle {\n\n  public static async connect(server: BluetoothRemoteGATTServer): Promise<GiiKERCube> {\n\n    const cubeService = await server.getPrimaryService(UUIDs.cubeService);\n    debugLog(\"Service:\", cubeService);\n\n    const cubeCharacteristic = await cubeService.getCharacteristic(UUIDs.cubeCharacteristic);\n    debugLog(\"Characteristic:\", cubeCharacteristic);\n\n    // TODO: Can we safely save the async promise instead of waiting for the response?\n\n    const originalValue = await decodeState(new Uint8Array((await cubeCharacteristic.readValue()).buffer));\n    debugLog(\"Original value:\", originalValue);\n    const cube = new GiiKERCube(server, cubeCharacteristic, originalValue);\n\n    await cubeCharacteristic.startNotifications();\n    cubeCharacteristic.addEventListener(\n      \"characteristicvaluechanged\",\n      cube.onCubeCharacteristicChanged.bind(cube),\n    );\n\n    return cube;\n  }\n  private constructor(private server: BluetoothRemoteGATTServer, private cubeCharacteristic: BluetoothRemoteGATTCharacteristic, private originalValue?: Uint8Array | null) {\n    super();\n  }\n\n  public name(): string | undefined {\n    return this.server.device.name;\n  }\n\n  public async getState(): Promise<PuzzleState> {\n    return this.toReid333(new Uint8Array((await this.cubeCharacteristic.readValue()).buffer));\n  }\n\n  private getBit(val: Uint8Array, i: number): number {\n    const n = ((i / 8) | 0);\n    const shift = 7 - (i % 8);\n    return (val[n] >> shift) & 1;\n  }\n\n  private toReid333(val: Uint8Array): Transformation {\n    const state = {\n      EDGE: {\n        permutation: new Array(12),\n        orientation: new Array(12),\n      },\n      CORNER: {\n        permutation: new Array(8),\n        orientation: new Array(8),\n      },\n      CENTER: Reid333SolvedCenters,\n    };\n\n    for (let i = 0; i < 12; i++) {\n      const gi = epReid333toGiiKER[i];\n      state.EDGE.permutation[i] = epGiiKERtoReid333[getNibble(val, gi + 16) - 1];\n      state.EDGE.orientation[i] = this.getBit(val, gi + 112) ^ preEO[state.EDGE.permutation[i]] ^ postEO[i];\n    }\n    for (let i = 0; i < 8; i++) {\n      const gi = cpReid333toGiiKER[i];\n      state.CORNER.permutation[i] = cpGiiKERtoReid333[getNibble(val, gi) - 1];\n      state.CORNER.orientation[i] = (getNibble(val, gi + 8) * coFlip[gi] + preCO[state.CORNER.permutation[i]] + postCO[i]) % 3;\n    }\n    return state;\n  }\n\n  private async onCubeCharacteristicChanged(event: any): Promise<void> {\n    const val = await decodeState(new Uint8Array(event.target.value.buffer));\n    debugLog(val);\n    debugLog(val);\n\n    if (this.isRepeatedInitialValue(val)) {\n      debugLog(\"Skipping repeated initial value.\");\n      return;\n    }\n\n    const giikerState = [];\n    for (let i = 0; i < MESSAGE_LENGTH; i++) {\n      giikerState.push(Math.floor(val[i] / 16));\n      giikerState.push(val[i] % 16);\n    }\n    debugLog(giikerState);\n    const str = giikerStateStr(giikerState);\n    debugLog(str);\n\n    this.dispatchMove({\n      latestMove: giikerMoveToBlockMove(giikerState[32], giikerState[33]),\n      timeStamp: event.timeStamp,\n      debug: {\n        stateStr: str,\n      },\n      state: this.toReid333(val),\n    });\n  }\n\n  private isRepeatedInitialValue(val: Uint8Array): boolean {\n    if (typeof (this.originalValue) === \"undefined\") {\n      // TODO: Test this branch.\n      throw new Error(\"GiiKERCube has uninitialized original value.\");\n    }\n\n    if (this.originalValue === null) {\n      return false;\n    }\n\n    const originalValue = this.originalValue;\n    // Reset the value here, so we can return early below.\n    this.originalValue = null;\n\n    debugLog(\"Comparing against original value.\");\n    for (let i = 0; i < MESSAGE_LENGTH - 2; i++) {\n      if (originalValue[i] !== val[i]) {\n        debugLog(\"Different at index \", i);\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import { Quaternion } from \"three\";\nimport { BareBlockMove, BlockMove, Sequence } from \"../alg\";\nimport { BluetoothConfig, BluetoothPuzzle } from \"./bluetooth-puzzle\";\nimport { debugLog } from \"./debug\";\n\nconst UUIDs = {\n  goCubeService: \"6e400001-b5a3-f393-e0a9-e50e24dcca9e\",\n  goCubeStateCharacteristic: \"6e400003-b5a3-f393-e0a9-e50e24dcca9e\",\n};\n\n// TODO: Move this into a factory?\nexport const goCubeConfig: BluetoothConfig = {\n  filters: [\n    { namePrefix: \"GoCube\" },\n  ],\n  optionalServices: [\n    UUIDs.goCubeService,\n  ],\n};\n\n// https://stackoverflow.com/a/40031979\nfunction buf2hex(buffer: ArrayBuffer): string { // buffer is an ArrayBuffer\n  return Array.prototype.map.call(new Uint8Array(buffer), (x: number) => (\"00\" + x.toString(16)).slice(-2)).join(\"\");\n}\n\nfunction bufferToString(buffer: ArrayBuffer): string {\n  const byteView = new Uint8Array(buffer);\n  let str = \"\";\n  for (const charCode of byteView) {\n    str += String.fromCharCode(charCode);\n  }\n  return str;\n}\n\nconst moveMap: BlockMove[] = [\n  BareBlockMove(\"B\", 1),\n  BareBlockMove(\"B\", -1),\n  BareBlockMove(\"F\", 1),\n  BareBlockMove(\"F\", -1),\n  BareBlockMove(\"U\", 1),\n  BareBlockMove(\"U\", -1),\n  BareBlockMove(\"D\", 1),\n  BareBlockMove(\"D\", -1),\n  BareBlockMove(\"R\", 1),\n  BareBlockMove(\"R\", -1),\n  BareBlockMove(\"L\", 1),\n  BareBlockMove(\"L\", -1),\n];\n\nexport class GoCube extends BluetoothPuzzle {\n\n  // We have to perform async operations before we call the constructor.\n  public static async connect(server: BluetoothRemoteGATTServer): Promise<GoCube> {\n    const service = await server.getPrimaryService(UUIDs.goCubeService);\n    debugLog({ service });\n    const goCubeStateCharacteristic = await service.getCharacteristic(UUIDs.goCubeStateCharacteristic);\n    debugLog({ goCubeStateCharacteristic });\n\n    const cube = new GoCube(server, goCubeStateCharacteristic);\n\n    await goCubeStateCharacteristic.startNotifications();\n    goCubeStateCharacteristic.addEventListener(\n      \"characteristicvaluechanged\",\n      cube.onCubeCharacteristicChanged.bind(cube),\n    );\n\n    return cube;\n  }\n\n  // public async getState(): Promise<PuzzleState> {\n  //   return new Promise((resolve, reject) => {\n  //     this.resolve = (value: any) => {\n  //       resolve(buf2hex(value.buffer) as any);\n  //     };\n  //     this.goCubeStateCharacteristic.startNotifications();\n  //   });\n  // }\n\n  private recorded: any[][] = [];\n\n  private homeQuatInverse: Quaternion | null = null;\n  private lastRawQuat: Quaternion = new Quaternion(0, 0, 0, 1);\n  private currentQuat: Quaternion = new Quaternion(0, 0, 0, 1);\n  private lastTarget: Quaternion = new Quaternion(0, 0, 0, 1);\n  private alg: Sequence = new Sequence([]);\n\n  private constructor(private server: BluetoothRemoteGATTServer, public goCubeStateCharacteristic: BluetoothRemoteGATTCharacteristic) {\n    super();\n  }\n\n  public reset(): void {\n    this.resetAlg();\n    this.resetOrientation();\n  }\n\n  public resetAlg(algo?: Sequence): void {\n    this.alg = algo || new Sequence([]);\n  }\n\n  public resetOrientation(): void {\n    this.homeQuatInverse = this.lastRawQuat.clone().inverse();\n    this.currentQuat = new Quaternion(0, 0, 0, 1);\n    this.lastTarget = new Quaternion(0, 0, 0, 1);\n  }\n\n  public name(): string | undefined {\n    return this.server.device.name;\n  }\n\n  private onCubeCharacteristicChanged(event: any): void {\n    const buffer: DataView = event.target.value;\n    this.recorded.push([event.timeStamp, buf2hex(buffer.buffer)]);\n    if (buffer.byteLength === 8) {\n      const move = moveMap[buffer.getUint8(3)];\n      this.alg = new Sequence(this.alg.nestedUnits.concat([move]));\n      this.dispatchMove({\n        latestMove: moveMap[buffer.getUint8(3)],\n        timeStamp: event.timeStamp,\n        debug: {\n          stateStr: buf2hex(buffer.buffer),\n        },\n      });\n    } else {\n      const coords = bufferToString(buffer.buffer.slice(3, buffer.byteLength - 3)).split(\"#\").map((s) => parseInt(s, 10) / 16384);\n      const quat = new Quaternion(coords[0], coords[1], coords[2], coords[3]);\n\n      this.lastRawQuat = quat.clone();\n\n      if (!this.homeQuatInverse) {\n        this.homeQuatInverse = quat.clone().inverse();\n      }\n\n      const targetQuat = quat.clone().multiply(this.homeQuatInverse!.clone());\n      targetQuat.y = -targetQuat.y; // GoCube axis fix.\n\n      this.lastTarget.slerp(targetQuat, 0.5);\n      this.currentQuat.rotateTowards(this.lastTarget, rotateTowardsRate);\n\n      const { x, y, z, w } = this.currentQuat;\n      this.dispatchOrientation({\n        quaternion: { x, y, z, w },\n        timeStamp: event.timeStamp,\n      });\n    }\n  }\n}\n\nconst rotateTowardsRate = 0.5;\n","import { keyToMove } from \"../alg\";\nimport { KPuzzle, Puzzles } from \"../kpuzzle\";\nimport { BluetoothPuzzle, PuzzleState } from \"./bluetooth-puzzle\";\n\nconst def = Puzzles[\"3x3x3\"];\n\nexport class KeyboardPuzzle extends BluetoothPuzzle {\n  public puzzle: KPuzzle = new KPuzzle(def);\n  // TODO: Decide on the right arguments.\n  constructor(target: any) {\n    super();\n    // TODO: Filter out repeated keydown?\n    target.addEventListener(\"keydown\", this.onKeyDown.bind(this));\n  }\n\n  public name(): string | undefined {\n    return \"Keyboard Input\";\n  }\n\n  public async getState(): Promise<PuzzleState> {\n    return this.puzzle.state;\n  }\n\n  private onKeyDown(e: KeyboardEvent): void {\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) {\n      return;\n    }\n\n    const move = keyToMove(e);\n    if (move) {\n      this.puzzle.applyBlockMove(move);\n      this.dispatchMove({\n        latestMove: move,\n        timeStamp: e.timeStamp,\n        state: this.puzzle.state,\n      });\n      e.preventDefault();\n    }\n  }\n}\n\n// TODO: Type\nexport async function debugKeyboardConnect(target: any = window): Promise<KeyboardPuzzle> {\n  return new KeyboardPuzzle(target);\n}\n","import { BluetoothPuzzle } from \"./bluetooth-puzzle\";\nimport { debugLog } from \"./debug\";\nimport { ganConfig, GanCube } from \"./gan\";\nimport { giiKERConfig, GiiKERCube } from \"./giiker\";\nimport { GoCube, goCubeConfig } from \"./gocube\";\n\n/******** requestOptions ********/\n\nexport interface BluetoothConfig {\n  filters: BluetoothRequestDeviceFilter[];\n  optionalServices: BluetoothServiceUUID[];\n}\n\nfunction requestOptions(acceptAllDevices: boolean = false): RequestDeviceOptions {\n  const options = acceptAllDevices ? {\n    acceptAllDevices: true,\n    optionalServices: [] as BluetoothServiceUUID[],\n  } : {\n      filters: [] as BluetoothRequestDeviceFilter[],\n      optionalServices: [] as BluetoothServiceUUID[],\n    };\n  for (const config of [\n    ganConfig,\n    giiKERConfig,\n    goCubeConfig,\n  ]) {\n    if (!acceptAllDevices) {\n      options.filters = options.filters!.concat(config.filters);\n    }\n    options.optionalServices = options.optionalServices.concat(config.optionalServices);\n  }\n  debugLog({ requestOptions: options });\n  return options;\n}\n\n/******** connect() ********/\n\ninterface BluetoothConnectOptions {\n  acceptAllDevices?: boolean;\n}\n\n// We globally track the number of connection failures,\n// in order to offer the user recourse (accept all devices) if they're having issues.\n// This allows us to future-proof situations where a device might not show up in\n// the chooser, but works if we connect.\nlet consecutiveFailures = 0;\nconst MAX_FAILURES_BEFORE_ACCEPT_ALL_FALLBACK = 2;\n\n// TODO: Debug options to allow connecting to any device?\nexport async function connect(options: BluetoothConnectOptions = {}): Promise<BluetoothPuzzle> {\n  debugLog(\"Attempting to pair.\");\n  let device;\n  try {\n    let acceptAllDevices = options.acceptAllDevices;\n    if (!acceptAllDevices && consecutiveFailures >= MAX_FAILURES_BEFORE_ACCEPT_ALL_FALLBACK) {\n      console.info(`The last ${MAX_FAILURES_BEFORE_ACCEPT_ALL_FALLBACK} Bluetooth puzzle connection attempts failed. This time, the Bluetooth prompt will show all possible devices.`);\n      acceptAllDevices = true;\n    }\n    device = await navigator.bluetooth.requestDevice(requestOptions(acceptAllDevices));\n    consecutiveFailures = 0;\n  } catch (e) {\n    consecutiveFailures++;\n    throw new Error(e);\n  }\n  debugLog(\"Device:\", device);\n\n  if (typeof device.gatt === \"undefined\") {\n    return Promise.reject(\"Device did not have a GATT server.\");\n  }\n\n  const server = await device.gatt.connect();\n  debugLog(\"Server:\", server);\n\n  const name = server.device!.name || \"\";\n\n  // TODO by reading supported matched filters or provided services.\n  if (name && name.startsWith(\"GAN\")) {\n    return await GanCube.connect(server);\n  } else if (name && name.startsWith(\"GoCube\")) {\n    return await GoCube.connect(server);\n  } else {\n    return await GiiKERCube.connect(server);\n  }\n}\n"],"names":["currentReportingLevel","numWarned","reportTypeMismatch","msg","Error","console","warn","AlgPart","matchesAlgType","a","t","type","assertMatchesType","isUnit","assertIsUnit","Unit","Move","Annotation","Container","Sequence","[object Object]","nestedUnits","super","this","n","Object","freeze","Group","nestedSequence","amount","Commutator","A","B","Conjugate","Pause","NewLine","CommentShort","comment","CommentLong","BlockMove","outerLayer","innerLayer","family","BareBlockMove","undefined","modifiedBlockMove","original","modifications","dispatch","algPart","dataDown","traverseSequence","traverseGroup","traverseBlockMove","traverseCommutator","traverseConjugate","traversePause","traverseNewLine","traverseCommentShort","traverseCommentLong","TraversalDownUp","traverse","TraversalUp","repetitionSuffix","absAmount","Math","abs","s","String","blockMoveToString","blockMove","out","invertInstance","Invert","sequence","slice","reverse","map","traverseIntoUnit","group","commutator","conjugate","pause","newLine","commentShort","commentLong","expandInstance","Expand","flattenSequenceOneLevel","repeat","expandedA","expandedB","once","concat","invert","algList","flattened","part","push","accordingTo","repeated","i","structureEqualsInstance","StructureEquals","dataDownSeq","length","coalesceBaseMovesInstance","CoalesceBaseMoves","coalesced","last","sameBlock","pop","moveA","moveB","algToStringInstance","ToString","output","spaceBetween","u1","u2","bind","expand","structureEquals","coalesceBaseMoves","algToString","algPartToStringForTesting","Example","fromJSON","json","j","unitFromJSON","ValidationError","ValidatorTraversal","validateFamily","allowedFamilyLists","list","plainMoveFamilies","x","y","z","M","E","S","m","e","singleSliceMoveFamilies","U","L","F","R","D","wideMoveFamilies","u","l","f","r","b","d","Uw","Lw","Fw","Rw","Bw","Dw","BaseMoveValidator","unit","BlockMoveValidatorInstance","BlockMoveValidator","validateSiGNMoves","flatAlgValidatorInstance","FlatAlgValidator","validateFlatAlg","parse","parser","options","validators","algo","pegParse","validate","cubeKeyMapping","73","75","87","79","83","76","68","69","74","70","72","71","78","86","67","82","85","77","84","89","66","186","59","65","80","81","190","keyToMove","altKey","ctrlKey","keyCode","serializeURLParam","escaped","replace","deserializeURLParam","unescaped","newMove","coalesceLastMove","mod","oldNestedUnits","oldLastMove","m2","m1","newNestedUnits","newAmount","args","Array","prototype","apply","url","URL","alg","searchParams","set","setup","title","puzzle","indexOf","stage","view","toString","name","URLSearchParams","window","location","search","get","level","Combine","def","t1","t2","newTrans","orbitName","orbits","oDef","o1","o2","newPerm","numPieces","newOri","idx","orientation","permutation","orientations","Multiply","IdentityTransformation","halfish","floor","twiceHalfish","definition","transformation","orbitDefinition","newPermutation","newOrientation","orbitTransformation","o","fromIdx","gcd","EquivalentTransformations","stateForBlockMove","repMoveString","move","moves","KPuzzle","expandSlices","state","join","applyBlockMove","moveName","expandSlicesByName","create","moveExpander","MoveExpander","faceNames","me","getMoveExpander","setFaceNames","grip1","grip2","nslices","addGrip","rep","mv","grip","unswizzle","gripStash","moveStash","regrip","fn","facenames","slices","axes","aprime","_","signmove","substr","faceSplit","splitByFaceNames","testGrip","isBlock","isPuzzle","test","toUpperCase","endsWith","substring","outer","inner","at","found","facename","startsWith","Puzzles","2x2x2","CORNERS","startPieces","svg","3x3x3","EDGE","CORNER","CENTER","pyram","CENTERS","TIPS","EDGES","sq1","WEDGE","EQUATOR","SLICE","readFileSync","__dirname","xmlns","svgCounter","w","om","pm","SVG","kPuzzleDefinition","svgID","element","document","createElement","classList","add","innerHTML","svgElem","querySelector","namespaceURI","gradientDefs","createElementNS","insertBefore","firstChild","id","elementID","elem","elementByID","originalColor","style","fill","originalColors","gradients","newGradient","appendChild","setAttribute","nextState","fraction","curOrbitState","nextOrbitState","fromCur","singleColor","fromNext","easedBackwardsPercent","children","max","grad","stopDefs","offset","color","stopDef","stop","maxAxis","v","s2","sqrt","y z","Quaternion","-z y","x z","-x z","BasicRotationTransformer","moveEvent","orientationEvent","quaternion","quat","Vector3","maxU","applyQuaternion","maxF","oriQuat","log","q2","premultiply","BluetoothPuzzle","listener","listeners","orientationListeners","transformers","transformer","transformMove","transformOrientation","DEBUG_LOGGING_ENABLED","debugLog","info","zeros","Uint8Array","paddingBlockPlaintext","unsafeDecryptBlock","key","ciphertextBlock","paddingBlock","plaintextBlock","iv","crypto","subtle","encrypt","unsafeEncryptBlockWithIV","cbcCiphertext","decrypt","ganMoveToBlockMove","0","2","3","5","6","8","9","11","12","14","15","17","homeQuatInverse","swap","probablyDecodedCorrectly","data","setSwap","key10","decryptState","macAddress","keyBuffer","aesKey","keyBytes","importKey","decodeState","decrypted10","decrypted11","key11","PhysicalState","dataView","timeStamp","arr","buffer","arrLen","characteristic","value","readValue","Date","now","DataView","getInt16","wSquared","clone","inverse","multiply","previousMoveCounter","moveCounter","from","UUIDs","commands","reset","ganConfig","filters","namePrefix","optionalServices","reidEdgeOrder","split","reidCornerOrder","rotateLeft","pieceMap","forEach","edge","piece","corner","gan356iCornerMappings","gan356iEdgeMappings","GanCube","service","server","physicalStateCharacteristic","lastMoveCounter","startTrackingMoves","parseInt","getMacAddress","device","ganCubeService","getPrimaryService","getCharacteristic","initialMoveCounter","read","intervalHandle","setInterval","intervalHandler","INTERVAL_MS","clearInterval","physicalState","numInterveningMoves","numMovesSince","latestMoves","kpuzzle","dispatchMove","latestMove","debug","debugInfo","rotQuat","dispatchOrientation","readActualAngleAndBatteryCharacteristic","readFaceletStatus1Characteristic","stickers","cornerMapping","pieceInfo","edgeMapping","cachedFaceletStatus1Characteristic","cachedFaceletStatus2Characteristic","cachedActualAngleAndBatteryCharacteristic","faceletStatus1Characteristic","writeValue","faceletStatus2Characteristic","call","actualAngleAndBatteryCharacteristic","giiKERConfig","services","giikerMoveToBlockMove","face","Reid333SolvedCenters","epGiiKERtoReid333","epReid333toGiiKER","preEO","postEO","cpGiiKERtoReid333","cpReid333toGiiKER","preCO","postCO","coFlip","getNibble","val","lookup","probablyEncrypted","offset1","offset2","GiiKERCube","cubeCharacteristic","originalValue","cubeService","cube","startNotifications","addEventListener","onCubeCharacteristicChanged","toReid333","shift","gi","getBit","event","target","isRepeatedInitialValue","giikerState","str","giikerStateStr","stateStr","MESSAGE_LENGTH","goCubeConfig","buf2hex","moveMap","GoCube","goCubeStateCharacteristic","resetAlg","resetOrientation","lastRawQuat","currentQuat","lastTarget","recorded","byteLength","getUint8","coords","byteView","charCode","fromCharCode","bufferToString","targetQuat","slerp","rotateTowards","rotateTowardsRate","KeyboardPuzzle","onKeyDown","metaKey","shiftKey","preventDefault","consecutiveFailures","MoveEvent","enable","acceptAllDevices","navigator","bluetooth","requestDevice","config","requestOptions","gatt","Promise","reject","connect"],"mappings":"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"}